{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"tags/","text":"Centos Centos\u5185\u6838\u5347\u7ea7 Git Git\u64cd\u4f5c HashTable HashTable K8S \u57fa\u7840 \u8d44\u6e90\u7c7b\u578b \u7f51\u7edc\u53ca\u670d\u52a1 Kernel Centos\u5185\u6838\u5347\u7ea7 Linux Centos\u5185\u6838\u5347\u7ea7 \u5e38\u7528\u547d\u4ee4 Cpu\u5206\u6790 Redis HashTable \u7b80\u4ecb","title":"Tags"},{"location":"tags/#centos","text":"Centos\u5185\u6838\u5347\u7ea7","title":"Centos"},{"location":"tags/#git","text":"Git\u64cd\u4f5c","title":"Git"},{"location":"tags/#hashtable","text":"HashTable","title":"HashTable"},{"location":"tags/#k8s","text":"\u57fa\u7840 \u8d44\u6e90\u7c7b\u578b \u7f51\u7edc\u53ca\u670d\u52a1","title":"K8S"},{"location":"tags/#kernel","text":"Centos\u5185\u6838\u5347\u7ea7","title":"Kernel"},{"location":"tags/#linux","text":"Centos\u5185\u6838\u5347\u7ea7 \u5e38\u7528\u547d\u4ee4 Cpu\u5206\u6790","title":"Linux"},{"location":"tags/#redis","text":"HashTable \u7b80\u4ecb","title":"Redis"},{"location":"Develop/git/","tags":["Git"],"text":"Git \u5e38\u7528\u547d\u4ee4 \u64a4\u9500 \u76ee\u7684 \u5907\u6ce8 \u89e3\u51b3\u65b9\u6848 \u820d\u5f03\u5de5\u4f5c\u76ee\u5f55\u4e2d\u5bf9\u4e00\u4e2a\u6587\u4ef6\u7684\u4fee\u6539 \u4fee\u6539\u7684\u6587\u4ef6\u672a\u88ab\u6682\u5b58/\u63d0\u4ea4 git checkout -- filename \u820d\u5f03\u5de5\u4f5c\u76ee\u5f55\u4e2d\u6240\u6709\u672a\u4fdd\u5b58\u7684\u53d8\u66f4 \u6587\u4ef6\u5df2\u6682\u5b58\uff0c\u4f46\u672a\u63d0\u4ea4 git reset --hard \u5408\u5e76\u4e0e\u67d0\u4e2a\u7279\u5b9a\u63d0\u4ea4\uff08\u4f46\u4e0d\u542b\uff09\u4e4b\u95f4\u7684\u591a\u4e2a\u63d0\u4ea4 reset commit \u79fb\u9664\u6240\u6709\u672a\u4fdd\u5b58\u7684\u53d8\u66f4\uff0c\u5305\u542b\u672a\u8ddf\u8e2a\u7684\u6587\u4ef6 \u4fee\u6539\u7684\u6587\u4ef6\u672a\u88ab\u63d0\u4ea4 reset -fd \u79fb\u9664\u6240\u6709\u5df2\u6682\u5b58\u7684\u53d8\u66f4\u548c\u5728\u67d0\u4e2a\u63d0\u4ea4\u4e4b\u524d\u63d0\u4ea4\u7684\u5de5\u4f5c\uff0c\u4f46\u4e0d\u79fb\u9664\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u65b0\u6587\u4ef6 reset --hard commit \u79fb\u9664\u4e4b\u524d\u7684\u5de5\u4f5c\uff0c\u4f46\u5b8c\u6574\u4fdd\u7559\u63d0\u4ea4\u5386\u53f2\u8bb0\u5f55\uff08\u524d\u8fdb\u5f0f\u56de\u6eda\uff09 \u5206\u652f\u5df2\u7ecf\u88ab\u53d1\u5e03\uff0c\u5de5\u4f5c\u76ee\u5f55\u662f\u5e72\u51c0\u7684 revert commit \u4ece\u5206\u652f\u5386\u53f2\u8bb0\u5f55\u4e2d\u79fb\u9664\u4e00\u4e2a\u5355\u72ec\u7684\u63d0\u4ea4 \u4fee\u6539\u7684\u6587\u4ef6\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff0c\u5de5\u4f5c\u76ee\u5f55\u662f\u5e72\u51c0\u7684\uff0c\u5206\u652f\u5c1a\u672a\u8fdb\u884c\u53d1\u5e03 rebase --interactive commit \u4fdd\u7559\u4e4b\u524d\u7684\u5de5\u4f5c\uff0c\u4f46\u4ee5\u53e6\u4e00\u4e2a\u63d0\u4ea4\u5408\u5e76 \u9009\u62e9 squash\uff08\u538b\u7f29\uff09\u9009\u9879 rebase --interactive commit","title":"Git\u64cd\u4f5c"},{"location":"Develop/git/#git","text":"","title":"Git \u5e38\u7528\u547d\u4ee4"},{"location":"Develop/git/#_1","text":"\u76ee\u7684 \u5907\u6ce8 \u89e3\u51b3\u65b9\u6848 \u820d\u5f03\u5de5\u4f5c\u76ee\u5f55\u4e2d\u5bf9\u4e00\u4e2a\u6587\u4ef6\u7684\u4fee\u6539 \u4fee\u6539\u7684\u6587\u4ef6\u672a\u88ab\u6682\u5b58/\u63d0\u4ea4 git checkout -- filename \u820d\u5f03\u5de5\u4f5c\u76ee\u5f55\u4e2d\u6240\u6709\u672a\u4fdd\u5b58\u7684\u53d8\u66f4 \u6587\u4ef6\u5df2\u6682\u5b58\uff0c\u4f46\u672a\u63d0\u4ea4 git reset --hard \u5408\u5e76\u4e0e\u67d0\u4e2a\u7279\u5b9a\u63d0\u4ea4\uff08\u4f46\u4e0d\u542b\uff09\u4e4b\u95f4\u7684\u591a\u4e2a\u63d0\u4ea4 reset commit \u79fb\u9664\u6240\u6709\u672a\u4fdd\u5b58\u7684\u53d8\u66f4\uff0c\u5305\u542b\u672a\u8ddf\u8e2a\u7684\u6587\u4ef6 \u4fee\u6539\u7684\u6587\u4ef6\u672a\u88ab\u63d0\u4ea4 reset -fd \u79fb\u9664\u6240\u6709\u5df2\u6682\u5b58\u7684\u53d8\u66f4\u548c\u5728\u67d0\u4e2a\u63d0\u4ea4\u4e4b\u524d\u63d0\u4ea4\u7684\u5de5\u4f5c\uff0c\u4f46\u4e0d\u79fb\u9664\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u65b0\u6587\u4ef6 reset --hard commit \u79fb\u9664\u4e4b\u524d\u7684\u5de5\u4f5c\uff0c\u4f46\u5b8c\u6574\u4fdd\u7559\u63d0\u4ea4\u5386\u53f2\u8bb0\u5f55\uff08\u524d\u8fdb\u5f0f\u56de\u6eda\uff09 \u5206\u652f\u5df2\u7ecf\u88ab\u53d1\u5e03\uff0c\u5de5\u4f5c\u76ee\u5f55\u662f\u5e72\u51c0\u7684 revert commit \u4ece\u5206\u652f\u5386\u53f2\u8bb0\u5f55\u4e2d\u79fb\u9664\u4e00\u4e2a\u5355\u72ec\u7684\u63d0\u4ea4 \u4fee\u6539\u7684\u6587\u4ef6\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff0c\u5de5\u4f5c\u76ee\u5f55\u662f\u5e72\u51c0\u7684\uff0c\u5206\u652f\u5c1a\u672a\u8fdb\u884c\u53d1\u5e03 rebase --interactive commit \u4fdd\u7559\u4e4b\u524d\u7684\u5de5\u4f5c\uff0c\u4f46\u4ee5\u53e6\u4e00\u4e2a\u63d0\u4ea4\u5408\u5e76 \u9009\u62e9 squash\uff08\u538b\u7f29\uff09\u9009\u9879 rebase --interactive commit","title":"\u64a4\u9500"},{"location":"K8S/basic/","tags":["K8S"],"text":"Kubernetes \u57fa\u7840 Kubernetes \u7ec4\u4ef6 \u63a7\u5236\u5c42\u7ec4\u4ef6 kube-apiserver \u63d0\u4f9b HTTTP Rest \u63a5\u53e3 etcd \u4e00\u81f4\u6027\u548c\u9ad8\u53ef\u7528\u6027\u7684\u952e\u503c\u6570\u636e\u5e93\uff0c\u4fdd\u5b58 Kubernetes \u6240\u6709\u96c6\u7fa4\u6570\u636e\u7684\u540e\u53f0\u6570\u636e\u5e93 kube-scheduler \u8d1f\u8d23\u8d44\u6e90\u8c03\u5ea6 kube-controller-manager \u5728\u4e3b\u8282\u70b9\u4e0a\u8fd0\u884c\u63a7\u5236\u5668\u7684\u7ec4\u4ef6\uff0c\u6bcf\u4e2a\u63a7\u5236\u5668\u90fd\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\uff0c \u4f46\u662f\u4e3a\u4e86\u964d\u4f4e\u590d\u6742\u6027\uff0c\u5b83\u4eec\u90fd\u88ab\u7f16\u8bd1\u5230\u540c\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c \u63a7\u5236\u5668\u5305\u62ec \u8282\u70b9\u63a7\u5236\u5668\uff08Node Controller\uff09: \u8d1f\u8d23\u5728\u8282\u70b9\u51fa\u73b0\u6545\u969c\u65f6\u8fdb\u884c\u901a\u77e5\u548c\u54cd\u5e94 \u526f\u672c\u63a7\u5236\u5668\uff08Replication Controller\uff09: \u8d1f\u8d23\u4e3a\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u526f\u672c\u63a7\u5236\u5668\u5bf9\u8c61\u7ef4\u62a4\u6b63\u786e\u6570\u91cf\u7684 Pod \u7aef\u70b9\u63a7\u5236\u5668\uff08Endpoints Controller\uff09: \u586b\u5145\u7aef\u70b9(Endpoints)\u5bf9\u8c61(\u5373\u52a0\u5165 Service \u4e0e Pod) \u670d\u52a1\u5e10\u6237\u548c\u4ee4\u724c\u63a7\u5236\u5668\uff08Service Account & Token Controllers\uff09: \u4e3a\u65b0\u7684\u547d\u540d\u7a7a\u95f4\u521b\u5efa\u9ed8\u8ba4\u5e10\u6237\u548c API \u8bbf\u95ee\u4ee4\u724c cloud-controller-manager \u5d4c\u5165\u7279\u5b9a\u4e91\u7684\u63a7\u5236\u903b\u8f91\u7684\u63a7\u5236\u5c42\u7ec4\u4ef6 \u63a7\u5236\u5668\u5305\u62ec \u8282\u70b9\u63a7\u5236\u5668\uff08Node Controller\uff09: \u7528\u4e8e\u5728\u8282\u70b9\u7ec8\u6b62\u54cd\u5e94\u540e\u68c0\u67e5\u4e91\u63d0\u4f9b\u5546\u4ee5\u786e\u5b9a\u8282\u70b9\u662f\u5426\u5df2\u88ab\u5220\u9664 \u8def\u7531\u63a7\u5236\u5668\uff08Route Controller\uff09: \u7528\u4e8e\u5728\u5e95\u5c42\u4e91\u57fa\u7840\u67b6\u6784\u4e2d\u8bbe\u7f6e\u8def\u7531 \u670d\u52a1\u63a7\u5236\u5668\uff08Service Controller\uff09: \u7528\u4e8e\u521b\u5efa\u3001\u66f4\u65b0\u548c\u5220\u9664\u4e91\u63d0\u4f9b\u5546\u8d1f\u8f7d\u5747\u8861\u5668 Node \u7ec4\u4ef6 \u4f5c\u7528\uff1a\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\uff0c\u7ef4\u62a4\u8fd0\u884c\u7684 Pod \u5e76\u63d0\u4f9b Kubernetes \u8fd0\u884c\u73af\u5883 kubelet \u4e00\u4e2a\u5728\u96c6\u7fa4\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u7684\u4ee3\u7406\u3002 \u5b83\u4fdd\u8bc1\u5bb9\u5668\u90fd\u8fd0\u884c\u5728 Pod \u4e2d\uff1b kubelet \u63a5\u6536\u4e00\u7ec4\u901a\u8fc7\u5404\u7c7b\u673a\u5236\u63d0\u4f9b\u7ed9\u5b83\u7684 PodSpecs\uff0c\u786e\u4fdd\u8fd9\u4e9b PodSpecs \u4e2d\u63cf\u8ff0\u7684\u5bb9\u5668\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u4e14\u5065\u5eb7 kube-proxy \u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u7684\u7f51\u7edc\u4ee3\u7406\uff0c\u7ef4\u62a4\u8282\u70b9\u4e0a\u7684\u7f51\u7edc\u89c4\u5219 Container Runtime \u8d1f\u8d23\u8fd0\u884c\u5bb9\u5668 Kubernetes \u652f\u6301\u591a\u4e2a\u5bb9\u5668\u8fd0\u884c\u73af\u5883: Docker\u3001 containerd\u3001CRI-O \u4ee5\u53ca\u4efb\u4f55\u5b9e\u73b0 Kubernetes CRI (\u5bb9\u5668\u8fd0\u884c\u73af\u5883\u63a5\u53e3)\u7684\u5bb9\u5668\u73af\u5883 \u63d2\u4ef6\uff08Addons\uff09 \u4f7f\u7528 Kubernetes \u8d44\u6e90\uff08DaemonSet\u3001 Deployment \u7b49\uff09\u5b9e\u73b0\u96c6\u7fa4\u529f\u80fd\u3002 \u56e0\u4e3a\u8fd9\u4e9b\u63d2\u4ef6\u63d0\u4f9b\u96c6\u7fa4\u7ea7\u522b\u7684\u529f\u80fd\uff0c\u63d2\u4ef6\u4e2d\u547d\u540d\u7a7a\u95f4\u57df\u7684\u8d44\u6e90\u5c5e\u4e8e kube-system \u547d\u540d\u7a7a\u95f4 \u5e38\u89c1\u63d2\u4ef6\u5982\u4e0b DNS \u4eea\u8868\u76d8 \u5bb9\u5668\u8d44\u6e90\u76d1\u63a7 \u96c6\u7fa4\u5c42\u9762\u65e5\u5fd7 Kubernetes \u5bf9\u8c61 \u7406\u89e3 Kubernetes \u5bf9\u8c61 Kubernetes \u5bf9\u8c61 \u662f\u6301\u4e45\u5316\u7684\u5b9e\u4f53\u4f7f\u7528\u8fd9\u4e9b\u5b9e\u4f53\u53bb\u8868\u793a\u6574\u4e2a\u96c6\u7fa4\u7684\u72b6\u6001\uff0c\u5b83\u4eec\u63cf\u8ff0\u4e86\u5982\u4e0b\u4fe1\u606f \u54ea\u4e9b\u5bb9\u5668\u5316\u5e94\u7528\u5728\u8fd0\u884c\uff08\u4ee5\u53ca\u5728\u54ea\u4e9b\u8282\u70b9\u4e0a\uff09 \u53ef\u4ee5\u88ab\u5e94\u7528\u4f7f\u7528\u7684\u8d44\u6e90 \u5173\u4e8e\u5e94\u7528\u8fd0\u884c\u65f6\u8868\u73b0\u7684\u7b56\u7565\uff0c\u6bd4\u5982\u91cd\u542f\u7b56\u7565\u3001\u5347\u7ea7\u7b56\u7565\uff0c\u4ee5\u53ca\u5bb9\u9519\u7b56\u7565 \u5bf9\u8c61\u89c4\u7ea6\uff08Spec\uff09\u4e0e\u72b6\u6001\uff08Status\uff09 spec\uff1a\u63cf\u8ff0\u4f60\u5e0c\u671b\u5bf9\u8c61\u6240\u5177\u6709\u7684\u7279\u5f81\uff1a \u671f\u671b\u72b6\u6001\uff08Desired State\uff09\uff0c\u5982\u9700\u8981\u6709 3 \u4e2a\u526f\u672c\u8fd0\u884c status\uff1a\u63cf\u8ff0\u4e86\u5bf9\u8c61\u7684 \u5f53\u524d\u72b6\u6001\uff08Current State\uff09\uff0c\u7531 Kubernetes \u7cfb\u7edf\u548c\u7ec4\u4ef6 \u8bbe\u7f6e\u5e76\u66f4\u65b0 \u63cf\u8ff0 Kubernetes \u5bf9\u8c61 application/deployment.yaml apiVersion : apps/v1 # for versions before 1.9.0 use apps/v1beta2 kind : Deployment metadata : name : nginx-deployment spec : selector : matchLabels : app : nginx replicas : 2 # tells deployment to run 2 pods matching the template template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.14.2 ports : - containerPort : 80 \u4f7f\u7528\u59ff\u52bf\uff1akubectl apply -f application/deployment.yaml --record \u5fc5\u9700\u5b57\u6bb5 apiVersion - \u521b\u5efa\u8be5\u5bf9\u8c61\u6240\u4f7f\u7528\u7684 Kubernetes API \u7684\u7248\u672c kind - \u60f3\u8981\u521b\u5efa\u7684\u5bf9\u8c61\u7684\u7c7b\u522b metadata - \u5e2e\u52a9\u552f\u4e00\u6027\u6807\u8bc6\u5bf9\u8c61\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u5305\u62ec\u4e00\u4e2a name \u5b57\u7b26\u4e32\u3001UID \u548c\u53ef\u9009\u7684 namespace spec Kubernetes \u5bf9\u8c61\u7ba1\u7406 \u7ba1\u7406\u6280\u5de7 \u547d\u4ee4\u5f0f \u7528\u6237\u5c06\u64cd\u4f5c\u4f20\u7ed9 kubectl \u547d\u4ee4\u4f5c\u4e3a\u53c2\u6570\u6216\u6807\u5fd7 \u4f8b\u5982\uff1akubectl run nginx --image nginx \u547d\u4ee4\u5f0f\u5bf9\u8c61\u914d\u7f6e kubectl \u547d\u4ee4\u6307\u5b9a\u64cd\u4f5c\uff08\u521b\u5efa\uff0c\u66ff\u6362\u7b49\uff09\uff0c\u53ef\u9009\u6807\u5fd7\u548c\u81f3\u5c11\u4e00\u4e2a\u6587\u4ef6\u540d\u3002\u6307\u5b9a\u7684\u6587\u4ef6\u5fc5\u987b\u5305\u542b YAML \u6216 JSON \u683c\u5f0f\u7684\u5bf9\u8c61\u7684\u5b8c\u6574\u5b9a\u4e49 \u4f8b\u5982\uff1akubectl apply -f application/deployment.yaml --record \u58f0\u660e\u5f0f\u5bf9\u8c61\u914d\u7f6e \u914d\u7f6e\u53ef\u4ee5\u5728\u76ee\u5f55\u4e0a\u5de5\u4f5c\uff0c\u6839\u636e\u76ee\u5f55\u4e2d\u914d\u7f6e\u6587\u4ef6\u5bf9\u4e0d\u540c\u7684\u5bf9\u8c61\u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c \u4f8b\u5982\uff1akubectl apply -f configs/ \u5bf9\u8c61\u540d\u79f0\u548c IDs \u540d\u79f0 \u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u540d\u79f0 \u6765\u6807\u8bc6\u5728\u540c\u7c7b\u8d44\u6e90\u4e2d\u7684\u552f\u4e00\u6027 \u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\uff0c\u5f15\u7528\u8d44\u6e90 url \u4e2d\u7684\u5bf9\u8c61\uff0c\u5982/api/v1/pods/some name UID Kubernetes \u7cfb\u7edf\u751f\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u552f\u4e00\u6807\u8bc6\u5bf9\u8c61 \u547d\u540d\u7a7a\u95f4 Kubernetes \u652f\u6301\u591a\u4e2a\u865a\u62df\u96c6\u7fa4\uff0c\u5b83\u4eec\u5e95\u5c42\u4f9d\u8d56\u4e8e\u540c\u4e00\u4e2a\u7269\u7406\u96c6\u7fa4\u3002 \u8fd9\u4e9b\u865a\u62df\u96c6\u7fa4\u88ab\u79f0\u4e3a\u547d\u540d\u7a7a\u95f4 \u547d\u540d\u7a7a\u95f4\u4e3a\u540d\u79f0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8303\u56f4\u3002\u8d44\u6e90\u7684\u540d\u79f0\u9700\u8981\u5728\u547d\u540d\u7a7a\u95f4\u5185\u662f\u552f\u4e00\u7684\uff0c\u4f46\u4e0d\u80fd\u8de8\u547d\u540d\u7a7a\u95f4\uff0c\u4e5f\u4e0d\u80fd\u76f8\u4e92\u5d4c\u5957 \u521d\u59cb\u547d\u540d\u7a7a\u95f4 default \u6ca1\u6709\u6307\u660e\u4f7f\u7528\u5176\u5b83\u547d\u540d\u7a7a\u95f4\u7684\u5bf9\u8c61\u6240\u4f7f\u7528\u7684\u9ed8\u8ba4\u547d\u540d\u7a7a\u95f4 kube-system Kubernetes \u7cfb\u7edf\u521b\u5efa\u5bf9\u8c61\u6240\u4f7f\u7528\u7684\u547d\u540d\u7a7a\u95f4 kube-public \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u662f\u81ea\u52a8\u521b\u5efa\u7684\uff0c\u6240\u6709\u7528\u6237\uff08\u5305\u62ec\u672a\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\uff09\u90fd\u53ef\u4ee5\u8bfb\u53d6\u5b83\u3002 \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e3b\u8981\u7528\u4e8e\u96c6\u7fa4\u4f7f\u7528\uff0c\u4ee5\u9632\u67d0\u4e9b\u8d44\u6e90\u5728\u6574\u4e2a\u96c6\u7fa4\u4e2d\u5e94\u8be5\u662f\u53ef\u89c1\u548c\u53ef\u8bfb\u7684\u3002 \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u7684\u516c\u5171\u65b9\u9762\u53ea\u662f\u4e00\u79cd\u7ea6\u5b9a\uff0c\u800c\u4e0d\u662f\u8981\u6c42\u3002 kube-node-lease \u6b64\u547d\u540d\u7a7a\u95f4\u7528\u4e8e\u4e0e\u5404\u4e2a\u8282\u70b9\u76f8\u5173\u7684\u79df\u671f\uff08Lease\uff09\u5bf9\u8c61\uff1b \u6b64\u5bf9\u8c61\u7684\u8bbe\u8ba1\u4f7f\u5f97\u96c6\u7fa4\u89c4\u6a21\u5f88\u5927\u65f6\u8282\u70b9\u5fc3\u8df3\u68c0\u6d4b\u6027\u80fd\u5f97\u5230\u63d0\u5347 \u4f7f\u7528 \u67e5\u770b kubectl get namespace \u8bbe\u7f6e kubectl run nginx --image=nginx --namespace=<\u547d\u540d\u7a7a\u95f4\u540d\u79f0> kubectl get pods --namespace=<\u547d\u540d\u7a7a\u95f4\u540d\u79f0> \u8bbe\u7f6e\u547d\u540d\u7a7a\u95f4\u504f\u597d----\u6c38\u4e45\u4fdd\u5b58\u547d\u540d\u7a7a\u95f4\uff0c\u4ee5\u7528\u4e8e\u5bf9\u5e94\u4e0a\u4e0b\u6587\u4e2d\u6240\u6709\u540e\u7eed kubectl \u547d\u4ee4 kubectl config set-context --current --namespace=<\u547d\u540d\u7a7a\u95f4\u540d\u79f0> \u547d\u540d\u7a7a\u95f4\u548c DNS \u521b\u5efa\u4e00\u4e2a Service \u65f6\uff0c Kubernetes \u4f1a\u521b\u5efa\u4e00\u4e2a\u76f8\u5e94\u7684 DNS \u6761\u76ee \u8be5\u6761\u76ee\u7684\u5f62\u5f0f\u662f <\u670d\u52a1\u540d\u79f0>.<\u547d\u540d\u7a7a\u95f4\u540d\u79f0>.svc.cluster.local\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u5bb9\u5668\u53ea\u4f7f\u7528 <\u670d\u52a1\u540d\u79f0>\uff0c\u5b83\u5c06\u88ab\u89e3\u6790\u5230\u672c\u5730\u547d\u540d\u7a7a\u95f4\u7684\u670d\u52a1 \u5e76\u975e\u6240\u6709\u5bf9\u8c61\u90fd\u5728\u547d\u540d\u7a7a\u95f4\u4e2d \u67e5\u770b\u54ea\u4e9b Kubernetes \u8d44\u6e90\u5728\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u54ea\u4e9b\u4e0d\u5728\u547d\u540d\u7a7a\u95f4\u4e2d kubectl api-resources --namespaced=true kubectl api-resources --namespaced=false Label \u4e0e Selector \u6807\u7b7e\uff08Labels\uff09 \u662f\u9644\u52a0\u5230 Kubernetes \u5bf9\u8c61\uff08\u6bd4\u5982 Pods\uff09\u4e0a\u7684\u952e\u503c\u5bf9\uff0c\u7528\u4e8e\u6307\u5b9a\u5bf9\u7528\u6237\u6709\u610f\u4e49\u4e14\u76f8\u5173\u7684\u5bf9\u8c61\u7684\u6807\u8bc6\u5c5e\u6027\uff0c\u4f46\u4e0d\u76f4\u63a5\u5bf9\u6838\u5fc3\u7cfb\u7edf\u6709\u8bed\u4e49\u542b\u4e49 apiVersion : v1 kind : Pod metadata : name : annotations-demo labels : env : dev spec : containers : - name : nginx image : nginx:1.7.9 ports : - containerPort : 80 Selector \u901a\u8fc7 Selector\uff0c\u7528\u6237\u53ef\u4ee5\u8bc6\u522b\u4e00\u7ec4\u5bf9\u8c61 \u57fa\u4e8e\u7b49\u503c\u7684\u9009\u62e9\u5668 \u8fd0\u7b97\u7b26\u6709=\u3001== \u548c != \u5982 env=dev \u57fa\u4e8e\u96c6\u5408\u7684\u9009\u62e9\u5668 \u64cd\u4f5c\u7b26\uff1ain\u3001notin \u548c exists \u5982 env in (dev, qa) API kubectl get pods -l env=dev kubectl get pods -l 'env in (production, qa),tier in (frontend)' \u63a8\u8350\u4f7f\u7528\u7684\u6807\u7b7e \u952e \u63cf\u8ff0 \u793a\u4f8b \u7c7b\u578b app.kubernetes.io/name \u5e94\u7528\u7a0b\u5e8f\u7684\u540d\u79f0 mysql \u5b57\u7b26\u4e32 app.kubernetes.io/instance \u7528\u4e8e\u552f\u4e00\u786e\u5b9a\u5e94\u7528\u5b9e\u4f8b\u7684\u540d\u79f0 mysql-abcxzy \u5b57\u7b26\u4e32 app.kubernetes.io/version \u5e94\u7528\u7a0b\u5e8f\u7684\u5f53\u524d\u7248\u672c\uff08\u4f8b\u5982\uff0c\u8bed\u4e49\u7248\u672c\uff0c\u4fee\u8ba2\u7248\u54c8\u5e0c\u7b49\uff09 5.7.21 \u5b57\u7b26\u4e32 app.kubernetes.io/component \u67b6\u6784\u4e2d\u7684\u7ec4\u4ef6 database \u5b57\u7b26\u4e32 app.kubernetes.io/part-of \u6b64\u7ea7\u522b\u7684\u66f4\u9ad8\u7ea7\u522b\u5e94\u7528\u7a0b\u5e8f\u7684\u540d\u79f0 wordpress \u5b57\u7b26\u4e32 app.kubernetes.io/managed-by \u7528\u4e8e\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u5de5\u5177 helm \u5b57\u7b26\u4e32 \u6ce8\u89e3 \u4e3a\u5bf9\u8c61\u9644\u52a0\u4efb\u610f\u7684\u975e\u6807\u8bc6\u7684\u5143\u6570\u636e apiVersion : v1 kind : Pod metadata : name : annotations-demo annotations : imageregistry : \"https://hub.docker.com/\" spec : containers : - name : nginx image : nginx:1.7.9 ports : - containerPort : 80 \u5b57\u6bb5\u9009\u62e9\u5668\uff08Field selectors\uff09 \u5141\u8bb8\u4f60\u6839\u636e\u4e00\u4e2a\u6216\u591a\u4e2a\u8d44\u6e90\u5b57\u6bb5\u7684\u503c \u7b5b\u9009 Kubernetes \u8d44\u6e90\uff0c\u4f8b\u5982 metadata.name=my-service metadata.namespace!=default status.phase=Pending kubectl get pods --field-selector status.phase=Running \u652f\u6301\u7684\u5b57\u6bb5 \u6240\u6709\u8d44\u6e90\u7c7b\u578b\u90fd\u652f\u6301 metadata.name \u548c metadata.namespace \u5b57\u6bb5 \u652f\u6301\u7684\u64cd\u4f5c\u7b26 =\u3001==\u548c != \u94fe\u5f0f\u9009\u62e9\u5668 kubectl get pods --field-selector=status.phase!=Running,spec.restartPolicy=Always \u591a\u79cd\u8d44\u6e90\u7c7b\u578b kubectl get statefulsets,services --all-namespaces --field-selector metadata.namespace!=default Kubernetes \u67b6\u6784 \u8282\u70b9 \u6982\u5ff5 \u8282\u70b9\u53ef\u4ee5\u662f\u4e00\u4e2a\u865a\u62df\u673a\u6216\u8005\u7269\u7406\u673a\u5668\uff0c\u53d6\u51b3\u4e8e\u6240\u5728\u7684\u96c6\u7fa4\u914d\u7f6e \u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u7528\u4e8e\u8fd0\u884c Pod\uff08\u5bb9\u5668\u8fd0\u884c\u4e8e Pod \u4e2d\uff09 \u6240\u9700\u8981\u7684\u670d\u52a1\uff0c\u8fd9\u4e9b\u670d\u52a1\u7531 \u63a7\u5236\u5c42\u8d1f\u8d23\u7ba1\u7406 \u8282\u70b9\u4e0a\u7684\u7ec4\u4ef6\u5305\u62ec kubelet\u3001 Container Runtime \u4ee5\u53ca kube-proxy \u7ba1\u7406 \u5411 API Server \u6dfb\u52a0\u8282\u70b9\u7684\u65b9\u5f0f\u4e3b\u8981\u6709\u4e24\u79cd \u8282\u70b9\u4e0a\u7684 kubelet \u5411\u63a7\u5236\u9762\u6267\u884c\u81ea\u6ce8\u518c \u624b\u52a8\u6ce8\u518c \u4f8b\u5982\u4f7f\u7528\u4e0b\u9762\u7684 JSON \u5bf9\u8c61\u6765\u521b\u5efa Node \u5bf9\u8c61 { \"kind\" : \"Node\" , \"apiVersion\" : \"v1\" , \"metadata\" : { \"name\" : \"10.240.79.157\" , \"labels\" : { \"name\" : \"my-first-k8s-node\" } } } Kubernetes \u4f1a\u5728\u5185\u90e8\u521b\u5efa\u4e00\u4e2a Node \u5bf9\u8c61\u4f5c\u4e3a\u8282\u70b9\u7684\u8868\u793a\u3002Kubernetes \u68c0\u67e5 kubelet \u5411 API \u670d\u52a1\u5668\u6ce8\u518c\u8282\u70b9\u65f6\u4f7f\u7528\u7684 metadata.name \u5b57\u6bb5\u662f\u5426\u5339\u914d \u8282\u70b9\u81ea\u6ce8\u518c \u5f53 kubelet \u6807\u5fd7 --register-node \u4e3a true\uff08\u9ed8\u8ba4\uff09\u65f6\uff0c\u5b83\u4f1a\u5c1d\u8bd5\u5411 API \u670d\u52a1\u6ce8\u518c\u81ea\u5df1 \u5bf9\u4e8e\u81ea\u6ce8\u518c\u6a21\u5f0f\uff0ckubelet \u4f7f\u7528\u4e0b\u5217\u53c2\u6570\u542f\u52a8 --kubeconfig - \u7528\u4e8e\u5411 API \u670d\u52a1\u5668\u8868\u660e\u8eab\u4efd\u7684\u51ed\u636e\u8def\u5f84 --cloud-provider - \u4e0e\u67d0\u4e91\u9a71\u52a8 \u8fdb\u884c\u901a\u4fe1\u4ee5\u8bfb\u53d6\u4e0e\u81ea\u8eab\u76f8\u5173\u7684\u5143\u6570\u636e\u7684\u65b9\u5f0f --register-node - \u81ea\u52a8\u5411 API \u670d\u52a1\u6ce8\u518c --register-with-taints - \u4f7f\u7528\u6240\u7ed9\u7684\u6c61\u70b9\u5217\u8868\uff08\u9017\u53f7\u5206\u9694\u7684 = : \uff09\u6ce8\u518c\u8282\u70b9\u3002 \u5f53 register-node \u4e3a false \u65f6\u65e0\u6548 --node-ip - \u8282\u70b9 IP \u5730\u5740 --node-labels - \u5728\u96c6\u7fa4\u4e2d\u6ce8\u518c\u8282\u70b9\u65f6\u8981\u6dfb\u52a0\u7684 \u6807\u7b7e\u3002 \uff08\u53c2\u89c1 NodeRestriction \u51c6\u5165\u63a7\u5236\u63d2\u4ef6\u6240\u5b9e\u65bd\u7684\u6807\u7b7e\u9650\u5236\uff09 --node-status-update-frequency - \u6307\u5b9a kubelet \u5411\u63a7\u5236\u9762\u53d1\u9001\u72b6\u6001\u7684\u9891\u7387 \u624b\u52a8\u8282\u70b9\u7ba1\u7406 \u624b\u52a8\u521b\u5efa\u8282\u70b9\u5bf9\u8c61\u65f6\uff0c\u8bbe\u7f6e kubelet \u6807\u5fd7 --register-node=false kubectl cordon \u4f1a\u5c06\u8282\u70b9\u6807\u8bb0\u4e3a\u201c\u4e0d\u53ef\u8c03\u5ea6\uff08Unschedulable\uff09 \u8282\u70b9\u72b6\u6001 \u4e2a\u8282\u70b9\u7684\u72b6\u6001\u5305\u542b\u4ee5\u4e0b\u4fe1\u606f\uff0c\u67e5\u8be2\u547d\u4ee4\uff1akubectl describe node <\u8282\u70b9\u540d\u79f0> \u5730\u5740 HostName\uff1a\u7531\u8282\u70b9\u7684\u5185\u6838\u8bbe\u7f6e\u3002\u53ef\u4ee5\u901a\u8fc7 kubelet \u7684 --hostname-override \u53c2\u6570\u8986\u76d6\u3002 ExternalIP\uff1a\u901a\u5e38\u662f\u8282\u70b9\u7684\u53ef\u5916\u90e8\u8def\u7531\uff08\u4ece\u96c6\u7fa4\u5916\u53ef\u8bbf\u95ee\uff09\u7684 IP \u5730\u5740\u3002 InternalIP\uff1a\u901a\u5e38\u662f\u8282\u70b9\u7684\u4ec5\u53ef\u5728\u96c6\u7fa4\u5185\u90e8\u8def\u7531\u7684 IP \u5730\u5740\u3002 \u72b6\u51b5\uff08conditions\uff09\uff1a\u63cf\u8ff0\u4e86\u6240\u6709 Running \u8282\u70b9\u7684\u72b6\u6001 \u5bb9\u91cf\u4e0e\u53ef\u5206\u914d \u4fe1\u606f \u63a7\u5236\u5c42\u5230\u8282\u70b9\u901a\u4fe1 \u8282\u70b9\u5230\u63a7\u5236\u5c42 \u60f3\u8981\u8fde\u63a5\u5230 apiserver \u7684 Pod \u53ef\u4ee5\u4f7f\u7528\u670d\u52a1\u8d26\u53f7\u5b89\u5168\u5730\u8fdb\u884c\u8fde\u63a5\u3002 \u5f53 Pod \u88ab\u5b9e\u4f8b\u5316\u65f6\uff0cKubernetes \u81ea\u52a8\u628a\u516c\u5171\u6839\u8bc1\u4e66\u548c\u4e00\u4e2a\u6709\u6548\u7684\u6301\u6709\u8005\u4ee4\u724c\u6ce8\u5165\u5230 Pod \u91cc kubernetes \u670d\u52a1\uff08\u4f4d\u4e8e\u6240\u6709\u547d\u540d\u7a7a\u95f4\u4e2d\uff09\u914d\u7f6e\u4e86\u4e00\u4e2a\u865a\u62df IP \u5730\u5740\uff0c\u7528\u4e8e\uff08\u901a\u8fc7 kube-proxy\uff09\u8f6c\u53d1 \u8bf7\u6c42\u5230 apiserver \u7684 HTTPS \u672b\u7aef \u63a7\u5236\u5c42\u5230\u8282\u70b9 \u6709\u4e24\u79cd\u4e3b\u8981\u7684\u901a\u4fe1\u8def\u5f84 \u4ece apiserver \u5230\u96c6\u7fa4\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u7684 kubelet \u8fdb\u7a0b \u7528\u4e8e \u83b7\u53d6 Pod \u65e5\u5fd7 \u6302\u63a5\uff08\u901a\u8fc7 kubectl\uff09\u5230\u8fd0\u884c\u4e2d\u7684 Pod \u63d0\u4f9b kubelet \u7684\u7aef\u53e3\u8f6c\u53d1\u529f\u80fd \u4ece apiserver \u901a\u8fc7\u5b83\u7684\u4ee3\u7406\u529f\u80fd\u8fde\u63a5\u5230\u4efb\u4f55\u8282\u70b9\u3001Pod \u6216\u8005\u670d\u52a1 \u9ed8\u8ba4\u4e3a\u7eaf HTTP \u65b9\u5f0f\uff0c\u56e0\u6b64\u65e2\u6ca1\u6709\u8ba4\u8bc1\uff0c\u4e5f\u6ca1\u6709\u52a0\u5bc6 \u5176\u4ed6\u65b9\u5f0f SSH \u96a7\u9053\uff08\u76ee\u524d\u5df2\u88ab\u5e9f\u5f03\uff09 apiserver \u5efa\u7acb\u4e00\u4e2a\u5230\u96c6\u7fa4\u4e2d\u5404\u8282\u70b9\u7684 SSH \u96a7\u9053\uff08\u8fde\u63a5\u5230\u5728 22 \u7aef\u53e3\u76d1\u542c\u7684 SSH \u670d\u52a1\uff09 \u5e76\u901a\u8fc7\u8fd9\u4e2a\u96a7\u9053\u4f20\u8f93\u6240\u6709\u5230 kubelet\u3001\u8282\u70b9\u3001Pod \u6216\u670d\u52a1\u7684\u8bf7\u6c42 Konnectivity \u670d\u52a1 Konnectivity \u670d\u52a1\u63d0\u4f9b TCP \u5c42\u7684\u4ee3\u7406\uff0c\u4ee5\u4fbf\u652f\u6301\u4ece\u63a7\u5236\u9762\u5230\u96c6\u7fa4\u7684\u901a\u4fe1 \u63a7\u5236\u5668 \u5728 Kubernetes \u4e2d\uff0c\u63a7\u5236\u5668\u901a\u8fc7\u76d1\u63a7\u96c6\u7fa4 \u7684\u516c\u5171\u72b6\u6001\uff0c\u5e76\u81f4\u529b\u4e8e\u5c06\u5f53\u524d\u72b6\u6001\u8f6c\u53d8\u4e3a\u671f\u671b\u7684\u72b6\u6001 \u63a7\u5236\u5668\u6a21\u5f0f \u63a7\u5236\u5668\u6a21\u5f0f \u901a\u8fc7 API \u670d\u52a1\u5668\u6765\u63a7\u5236 Deployment \u63a7\u5236\u5668\u548c Job \u63a7\u5236\u5668\u662f Kubernetes \u5185\u7f6e\u63a7\u5236\u5668\u7684\u5178\u578b\u4f8b\u5b50\uff0c \u5185\u7f6e\u63a7\u5236\u5668\u901a\u8fc7\u548c\u96c6\u7fa4 API \u670d\u52a1\u5668\u4ea4\u4e92\u6765\u7ba1\u7406\u72b6\u6001 \u76f4\u63a5\u63a7\u5236 \u76f8\u6bd4 Job \u63a7\u5236\u5668\uff0c\u6709\u4e9b\u63a7\u5236\u5668\u9700\u8981\u5bf9\u96c6\u7fa4\u5916\u7684\u4e00\u4e9b\u4e1c\u897f\u8fdb\u884c\u4fee\u6539\uff0c\u548c\u5916\u90e8\u72b6\u6001\u4ea4\u4e92\u7684\u63a7\u5236\u5668\u4ece API \u670d\u52a1\u5668\u83b7\u53d6\u5230\u5b83\u60f3\u8981\u7684\u72b6\u6001\uff0c\u7136\u540e\u76f4\u63a5\u548c\u5916\u90e8\u7cfb\u7edf\u8fdb\u884c\u901a\u4fe1 \u5e76\u4f7f\u5f53\u524d\u72b6\u6001\u66f4\u63a5\u8fd1\u671f\u671b\u72b6\u6001 \u8fd0\u884c\u63a7\u5236\u5668\u7684\u65b9\u5f0f Kubernetes \u5185\u7f6e\u4e00\u7ec4\u63a7\u5236\u5668\uff0c\u8fd0\u884c\u5728 kube-controller-manager \u5185\u3002 \u8fd9\u4e9b\u5185\u7f6e\u7684\u63a7\u5236\u5668\u63d0\u4f9b\u4e86\u91cd\u8981\u7684\u6838\u5fc3\u529f\u80fd Deployment \u63a7\u5236\u5668\u548c Job \u63a7\u5236\u5668\u662f Kubernetes \u5185\u7f6e\u63a7\u5236\u5668\u7684\u5178\u578b\u4f8b\u5b50 \u4e91\u63a7\u5236\u5668\u7ba1\u7406\u5668 // TODO \u5bb9\u5668 \u955c\u50cf \u955c\u50cf\u62c9\u53d6\u7b56\u7565\uff08IfNotPresent\uff09 \u8bbe\u7f6e\u5bb9\u5668\u7684 imagePullPolicy \u4e3a Always \u7701\u7565 imagePullPolicy\uff0c\u5e76\u4f7f\u7528 :latest \u4f5c\u4e3a\u8981\u4f7f\u7528\u7684\u955c\u50cf\u7684\u6807\u7b7e \u7701\u7565 imagePullPolicy \u548c\u8981\u4f7f\u7528\u7684\u955c\u50cf\u6807\u7b7e \u542f\u7528 AlwaysPullImages \u51c6\u5165\u63a7\u5236\u5668\uff08Admission Controller\uff09 \u4f7f\u7528\u79c1\u6709\u4ed3\u5e93 \u914d\u7f6e Node \u5bf9\u79c1\u6709\u4ed3\u5e93\u8ba4\u8bc1 Docker \u5c06\u79c1\u6709\u4ed3\u5e93\u7684\u5bc6\u94a5\u4fdd\u5b58\u5728 $HOME/.dockercfg \u6216 $HOME/.docker/config.json \u6587\u4ef6\u4e2d\uff0ckubelet \u4f1a\u5728\u62c9\u53d6\u955c\u50cf\u65f6\u5c06\u5176\u7528\u4f5c\u51ed\u636e\u6570\u636e\u6765\u6e90 \u521b\u5efa\u4f7f\u7528\u79c1\u6709\u955c\u50cf\u7684 Pod \u6765\u9a8c\u8bc1\uff0c\u4f8b\u5982 kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: private-image-test-1 spec: containers: - name: uses-private-image image: $PRIVATE_IMAGE_NAME imagePullPolicy: Always command: [ \"echo\", \"SUCCESS\" ] EOF \u4f7f\u7528 Docker Config \u521b\u5efa Secret kubectl create secret docker-registry <\u540d\u79f0> \\ --docker-server = DOCKER_REGISTRY_SERVER \\ --docker-username = DOCKER_USER \\ --docker-password = DOCKER_PASSWORD \\ --docker-email = DOCKER_EMAIL \u5728 Pod \u4e2d\u5f15\u7528 ImagePullSecrets cat <<EOF > pod.yaml apiVersion: v1 kind: Pod metadata: name: foo namespace: awesomeapps spec: containers: - name: foo image: janedoe/awesomeapp:v1 imagePullSecrets: - name: myregistrykey EOF cat <<EOF >> ./kustomization.yaml resources: - pod.yaml EOF \u5bb9\u5668\u73af\u5883 \u5bb9\u5668\u73af\u5883\u7ed9\u5bb9\u5668\u63d0\u4f9b\u4e86\u51e0\u4e2a\u91cd\u8981\u7684\u8d44\u6e90 \u6587\u4ef6\u7cfb\u7edf\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u955c\u50cf \u548c\u4e00\u4e2a\u6216\u591a\u4e2a\u7684\u5377 \u5bb9\u5668\u81ea\u8eab\u7684\u4fe1\u606f \u96c6\u7fa4\u4e2d\u5176\u4ed6\u5bf9\u8c61\u7684\u4fe1\u606f \u5bb9\u5668\u8fd0\u884c\u65f6\u7c7b(Runtime Class) RuntimeClass \u662f\u4e00\u4e2a\u7528\u4e8e\u9009\u62e9\u5bb9\u5668\u8fd0\u884c\u65f6\u914d\u7f6e\u7684\u7279\u6027\uff0c\u5bb9\u5668\u8fd0\u884c\u65f6\u914d\u7f6e\u7528\u4e8e\u8fd0\u884c Pod \u4e2d\u7684\u5bb9\u5668 \u53ef\u4ee5\u5728\u4e0d\u540c\u7684 Pod \u8bbe\u7f6e\u4e0d\u540c\u7684 RuntimeClass\uff0c\u4ee5\u63d0\u4f9b\u6027\u80fd\u4e0e\u5b89\u5168\u6027\u4e4b\u95f4\u7684\u5e73\u8861\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u7684\u90e8\u5206\u5de5\u4f5c\u8d1f\u8f7d\u9700\u8981\u9ad8\u7ea7\u522b\u7684\u4fe1\u606f\u5b89\u5168\u4fdd\u8bc1\uff0c\u4f60\u53ef\u4ee5\u51b3\u5b9a\u5728\u8c03\u5ea6\u8fd9\u4e9b Pod \u65f6\u5c3d\u91cf\u4f7f\u5b83\u4eec\u5728\u4f7f\u7528\u786c\u4ef6\u865a\u62df\u5316\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\u4e2d\u8fd0\u884c \u8bbe\u7f6e \u5728\u8282\u70b9\u4e0a\u914d\u7f6e CRI \u5b9e\u73b0 RuntimeClass \u7684\u914d\u7f6e\u4f9d\u8d56\u4e8e \u8fd0\u884c\u65f6\u63a5\u53e3\uff08CRI\uff09\u7684\u5b9e\u73b0\uff0c\u6240\u6709\u8fd9\u4e9b\u914d\u7f6e\u90fd\u5177\u6709\u76f8\u5e94\u7684 handler \u540d\uff0c\u5e76\u88ab RuntimeClass \u5f15\u7528 \u521b\u5efa\u76f8\u5e94\u7684 RuntimeClass \u8d44\u6e90 \u5b9a\u4e49 apiVersion : node.k8s.io/v1beta1 # RuntimeClass \u5b9a\u4e49\u4e8e node.k8s.io API \u7ec4 kind : RuntimeClass metadata : name : myclass # \u7528\u6765\u5f15\u7528 RuntimeClass \u7684\u540d\u5b57 # RuntimeClass \u662f\u4e00\u4e2a\u96c6\u7fa4\u5c42\u9762\u7684\u8d44\u6e90 handler : myconfiguration # \u5bf9\u5e94\u7684 CRI \u914d\u7f6e\u7684\u540d\u79f0 \u4f7f\u7528\u8bf4\u660e \u5728 Pod spec \u4e2d\u6307\u5b9a runtimeClassName \u5373\u53ef\uff0c\u8fd9\u4e00\u8bbe\u7f6e\u4f1a\u544a\u8bc9 kubelet \u4f7f\u7528\u6240\u6307\u7684 RuntimeClass \u6765\u8fd0\u884c\u8be5 pod apiVersion : v1 kind : Pod metadata : name : mypod spec : runtimeClassName : myclass # ... CRI \u914d\u7f6e \u5bb9\u5668\u751f\u547d\u5468\u671f\u56de\u8c03 \u5bb9\u5668\u56de\u8c03 PostStart \u8fd9\u4e2a\u56de\u8c03\u5728\u5bb9\u5668\u88ab\u521b\u5efa\u4e4b\u540e\u7acb\u5373\u88ab\u6267\u884c\u3002 \u4f46\u662f\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u56de\u8c03\u4f1a\u5728\u5bb9\u5668\u5165\u53e3\u70b9\uff08ENTRYPOINT\uff09\u4e4b\u524d\u6267\u884c\u3002 \u6ca1\u6709\u53c2\u6570\u4f20\u9012\u7ed9\u5904\u7406\u7a0b\u5e8f PreStop \u5728\u5bb9\u5668\u56e0 API \u8bf7\u6c42\u6216\u8005\u7ba1\u7406\u4e8b\u4ef6\uff08\u8bf8\u5982\u5b58\u6d3b\u6001\u63a2\u9488\u5931\u8d25\u3001\u8d44\u6e90\u62a2\u5360\u3001\u8d44\u6e90\u7ade\u4e89\u7b49\uff09\u800c\u88ab\u7ec8\u6b62\u4e4b\u524d\uff0c \u6b64\u56de\u8c03\u4f1a\u88ab\u8c03\u7528 \u5982\u679c\u5bb9\u5668\u5df2\u7ecf\u5904\u4e8e\u7ec8\u6b62\u6216\u8005\u5b8c\u6210\u72b6\u6001\uff0c\u5219\u5bf9 preStop \u56de\u8c03\u7684\u8c03\u7528\u5c06\u5931\u8d25 \u6b64\u8c03\u7528\u662f\u963b\u585e\u7684\uff0c\u4e5f\u662f\u540c\u6b65\u8c03\u7528\uff0c\u56e0\u6b64\u5fc5\u987b\u5728\u53d1\u51fa\u5220\u9664\u5bb9\u5668\u7684\u4fe1\u53f7\u4e4b\u524d\u5b8c\u6210 \u56de\u8c03\u5904\u7406\u7a0b\u5e8f\u7684\u5b9e\u73b0 Exec - \u5728\u5bb9\u5668\u7684 cgroups \u548c\u540d\u79f0\u7a7a\u95f4\u4e2d\u6267\u884c\u7279\u5b9a\u7684\u547d\u4ee4\uff08\u4f8b\u5982 pre-stop.sh\uff09\u3002 \u547d\u4ee4\u6240\u6d88\u8017\u7684\u8d44\u6e90\u8ba1\u5165\u5bb9\u5668\u7684\u8d44\u6e90\u6d88\u8017\u3002 HTTP - \u5bf9\u5bb9\u5668\u4e0a\u7684\u7279\u5b9a\u7aef\u70b9\u6267\u884c HTTP \u8bf7\u6c42\u3002 \u56de\u8c03\u5904\u7406\u7a0b\u5e8f\u6267\u884c Kubernetes \u7ba1\u7406\u7cfb\u7edf\u6839\u636e\u56de\u8c03\u52a8\u4f5c\u6267\u884c\u5176\u5904\u7406\u7a0b\u5e8f\uff0c exec \u548c tcpSocket \u5728\u5bb9\u5668\u5185\u6267\u884c\uff0c\u800c httpGet \u5219\u7531 kubelet \u8fdb\u7a0b\u6267\u884c \u56de\u8c03\u5904\u7406\u7a0b\u5e8f\u5c3d\u53ef\u80fd\u7684\u8f7b\u91cf\u7ea7\uff0c\u9700\u8981\u8003\u8651\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u60c5\u51b5 \u56de\u8c03\u9012\u9001\u4fdd\u8bc1 \u56de\u8c03\u7684\u9012\u9001\u5e94\u8be5\u662f \u81f3\u5c11\u4e00\u6b21\uff0c\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u7684\u4e8b\u4ef6\uff0c \u4f8b\u5982 PostStart \u6216 PreStop\uff0c\u56de\u8c03\u53ef\u4ee5\u88ab\u8c03\u7528\u591a\u6b21\u3002 \u5982\u4f55\u6b63\u786e\u5904\u7406\u88ab\u591a\u6b21\u8c03\u7528\u7684\u60c5\u51b5\uff0c\u662f\u56de\u8c03\u5b9e\u73b0\u6240\u8981\u8003\u8651\u7684\u95ee\u9898 \u8c03\u8bd5\u56de\u8c03\u5904\u7406\u7a0b\u5e8f \u56de\u8c03\u5904\u7406\u7a0b\u5e8f\u7684\u65e5\u5fd7\u4e0d\u4f1a\u5728 Pod \u4e8b\u4ef6\u4e2d\u516c\u5f00\u3002 \u5982\u679c\u5904\u7406\u7a0b\u5e8f\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u5931\u8d25\uff0c\u5b83\u5c06\u6dfb\u52a0\u4e00\u4e2a\u4e8b\u4ef6 \u5de5\u4f5c\u8d1f\u8f7d Pods Pod \u662f\u53ef\u4ee5\u5728 Kubernetes \u4e2d\u521b\u5efa\u548c\u7ba1\u7406\u7684\u3001\u6700\u5c0f\u7684\u53ef\u90e8\u7f72\u7684\u8ba1\u7b97\u5355\u5143\uff1b\u662f\u4e00\u7ec4\uff08\u4e00\u4e2a\u6216\u591a\u4e2a\uff09 \u5bb9\u5668\uff0c\u8fd9\u4e9b\u5bb9\u5668\u5171\u4eab\u5b58\u50a8\u3001\u7f51\u7edc\u3001\u4ee5\u53ca\u600e\u6837\u8fd0\u884c\u8fd9\u4e9b\u5bb9\u5668\u7684\u58f0\u660e Pod \u7684\u5171\u4eab\u4e0a\u4e0b\u6587\u5305\u62ec\u4e00\u7ec4 Linux \u540d\u5b57\u7a7a\u95f4\u3001\u63a7\u5236\u7ec4\uff08cgroup\uff09\u548c\u53ef\u80fd\u4e00\u4e9b\u5176\u4ed6\u7684\u9694\u79bb \u65b9\u9762\uff0c\u5373\u7528\u6765\u9694\u79bb Docker \u5bb9\u5668\u7684\u6280\u672f Pod \u4e2d\u7684\u5185\u5bb9\u603b\u662f\u5e76\u7f6e\uff08colocated\uff09\u7684\u5e76\u4e14\u4e00\u540c\u8c03\u5ea6\uff0c\u5728\u5171\u4eab\u7684\u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c \u9664\u4e86\u5e94\u7528\u5bb9\u5668\uff0cPod \u8fd8\u53ef\u4ee5\u5305\u542b\u5728 Pod \u542f\u52a8\u671f\u95f4\u8fd0\u884c\u7684 Init \u5bb9\u5668\uff0cInit \u5bb9\u5668\u4f1a\u5728\u542f\u52a8\u5e94\u7528\u5bb9\u5668\u4e4b\u524d\u8fd0\u884c\u5e76\u5b8c\u6210 \u4f7f\u7528 Pod \u4e0d\u9700\u8981\u76f4\u63a5\u521b\u5efa Pod\uff0c\u751a\u81f3\u5355\u5b9e\u4f8b Pod\uff0c \u800c\u662f\u4f1a\u4f7f\u7528\u8bf8\u5982 Deployment \u6216 Job \u8fd9\u7c7b\u5de5\u4f5c\u8d1f\u8f7d\u8d44\u6e90 \u6765\u521b\u5efa Pod\u3002\u5982\u679c Pod \u9700\u8981\u8ddf\u8e2a\u72b6\u6001\uff0c\u53ef\u4ee5\u8003\u8651 StatefulSet \u8d44\u6e90 Kubernetes \u96c6\u7fa4\u4e2d\u7684 Pod \u4e3b\u8981\u6709\u4e24\u79cd\u7528\u6cd5 \u8fd0\u884c\u5355\u4e2a\u5bb9\u5668\u7684 Pod \u6bcf\u4e2a Pod \u4e00\u4e2a\u5bb9\u5668\"\u6a21\u578b\u662f\u6700\u5e38\u89c1\u7684 Kubernetes \u7528\u4f8b\uff0cKubernetes \u76f4\u63a5\u7ba1\u7406 Pod\uff0c\u800c\u4e0d\u662f\u5bb9\u5668 \u8fd0\u884c\u591a\u4e2a\u534f\u540c\u5de5\u4f5c\u7684\u5bb9\u5668\u7684 Pod Pod \u53ef\u80fd\u5c01\u88c5\u7531\u591a\u4e2a\u7d27\u5bc6\u8026\u5408\u4e14\u9700\u8981\u5171\u4eab\u8d44\u6e90\u7684\u5171\u5904\u5bb9\u5668\u7ec4\u6210\u7684\u5e94\u7528\u7a0b\u5e8f Pod \u6a21\u7248 Pod \u6a21\u677f\u662f\u5305\u542b\u5728\u5de5\u4f5c\u8d1f\u8f7d\u5bf9\u8c61\u4e2d\u7684\u89c4\u8303\uff0c\u7528\u6765\u521b\u5efa Pod\u3002\u8fd9\u7c7b\u8d1f\u8f7d\u8d44\u6e90\u5305\u62ec Deployment\u3001 Job \u548c DaemonSets \u7b49 \u5de5\u4f5c\u8d1f\u8f7d\u7684\u63a7\u5236\u5668\u4f1a\u4f7f\u7528\u8d1f\u8f7d\u5bf9\u8c61\u4e2d\u7684 PodTemplate \u6765\u751f\u6210\u5b9e\u9645\u7684 Pod apiVersion : batch/v1 kind : Job metadata : name : hello spec : template : # \u8fd9\u91cc\u662f Pod \u6a21\u7248 spec : containers : - name : hello image : busybox command : [ \"sh\" , \"-c\" , 'echo \"Hello, Kubernetes!\" && sleep 3600' ] restartPolicy : OnFailure # \u4ee5\u4e0a\u4e3a Pod \u6a21\u7248 \u8d44\u6e90\u5171\u4eab\u548c\u901a\u4fe1 Pod \u4f7f\u5b83\u7684\u6210\u5458\u5bb9\u5668\u95f4\u80fd\u591f\u8fdb\u884c\u6570\u636e\u5171\u4eab\u548c\u901a\u4fe1 Pod \u4e2d\u7684\u5b58\u50a8 \u4e00\u4e2a Pod \u53ef\u4ee5\u8bbe\u7f6e\u4e00\u7ec4\u5171\u4eab\u7684\u5b58\u50a8\u5377 Pod \u8054\u7f51 \u6bcf\u4e2a Pod \u90fd\u5728\u6bcf\u4e2a\u5730\u5740\u65cf\u4e2d\u83b7\u5f97\u4e00\u4e2a\u552f\u4e00\u7684 IP \u5730\u5740\u3002 Pod \u4e2d\u7684\u6bcf\u4e2a\u5bb9\u5668\u5171\u4eab\u7f51\u7edc\u540d\u5b57\u7a7a\u95f4\uff0c\u5305\u62ec IP \u5730\u5740\u548c\u7f51\u7edc\u7aef\u53e3 Pod \u5185 \u7684\u5bb9\u5668\u53ef\u4ee5\u4f7f\u7528 localhost \u4e92\u76f8\u901a\u4fe1\u3002 \u5f53 Pod \u4e2d\u7684\u5bb9\u5668\u4e0e Pod \u4e4b\u5916 \u7684\u5b9e\u4f53\u901a\u4fe1\u65f6\uff0c\u5b83\u4eec\u5fc5\u987b\u534f\u8c03\u5982\u4f55\u4f7f\u7528\u5171\u4eab\u7684\u7f51\u7edc\u8d44\u6e90 \uff08\u4f8b\u5982\u7aef\u53e3\uff09 \u9759\u6001 Pod \u9759\u6001 Pod \u901a\u5e38\u7ed1\u5b9a\u5230\u67d0\u4e2a\u8282\u70b9\u4e0a\u7684 kubelet kubelet \u81ea\u52a8\u5c1d\u8bd5\u4e3a\u6bcf\u4e2a\u9759\u6001 Pod \u5728 Kubernetes API \u670d\u52a1\u5668\u4e0a\u521b\u5efa\u4e00\u4e2a \u955c\u50cf Pod\u3002 \u8fd9\u610f\u5473\u7740\u5728\u8282\u70b9\u4e0a\u8fd0\u884c\u7684 Pod \u5728 API \u670d\u52a1\u5668\u4e0a\u662f\u53ef\u89c1\u7684\uff0c\u4f46\u4e0d\u53ef\u4ee5\u901a\u8fc7 API \u670d\u52a1\u5668\u6765\u63a7\u5236 Pod \u600e\u6837\u7ba1\u7406\u591a\u4e2a\u5bb9\u5668 Pod \u4e2d\u7684\u5bb9\u5668\u88ab\u81ea\u52a8\u5b89\u6392\u5230\u96c6\u7fa4\u4e2d\u7684\u540c\u4e00\u7269\u7406\u673a\u6216\u865a\u62df\u673a\u4e0a\uff0c\u5e76\u53ef\u4ee5\u4e00\u8d77\u8fdb\u884c\u8c03\u5ea6\u3002 \u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u5171\u4eab\u8d44\u6e90\u548c\u4f9d\u8d56\u3001\u5f7c\u6b64\u901a\u4fe1\u3001\u534f\u8c03\u4f55\u65f6\u4ee5\u53ca\u4f55\u79cd\u65b9\u5f0f\u7ec8\u6b62\u81ea\u8eab Pod \u7684\u751f\u547d\u5468\u671f Pod \u9636\u6bb5 PodStatus.phase Pending\uff08\u60ac\u51b3\uff09 Pod \u5df2\u88ab Kubernetes \u7cfb\u7edf\u63a5\u53d7\uff0c\u4f46\u6709\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5bb9\u5668\u5c1a\u672a\u521b\u5efa\u4ea6\u672a\u8fd0\u884c\u3002\u6b64\u9636\u6bb5\u5305\u62ec\u7b49\u5f85 Pod \u88ab\u8c03\u5ea6\u7684\u65f6\u95f4\u548c\u901a\u8fc7\u7f51\u7edc\u4e0b\u8f7d\u955c\u50cf\u7684\u65f6\u95f4\uff0c Running\uff08\u8fd0\u884c\u4e2d\uff09 Pod \u5df2\u7ecf\u7ed1\u5b9a\u5230\u4e86\u67d0\u4e2a\u8282\u70b9\uff0cPod \u4e2d\u6240\u6709\u7684\u5bb9\u5668\u90fd\u5df2\u88ab\u521b\u5efa\u3002\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u4ecd\u5728\u8fd0\u884c\uff0c\u6216\u8005\u6b63\u5904\u4e8e\u542f\u52a8\u6216\u91cd\u542f\u72b6\u6001\u3002 Succeeded\uff08\u6210\u529f\uff09 Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u5df2\u6210\u529f\u7ec8\u6b62\uff0c\u5e76\u4e14\u4e0d\u4f1a\u518d\u91cd\u542f\u3002 Failed\uff08\u5931\u8d25\uff09 Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u5df2\u7ec8\u6b62\uff0c\u5e76\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u662f\u56e0\u4e3a\u5931\u8d25\u7ec8\u6b62\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bb9\u5668\u4ee5\u975e 0 \u72b6\u6001\u9000\u51fa\u6216\u8005\u88ab\u7cfb\u7edf\u7ec8\u6b62\u3002 Unknown\uff08\u672a\u77e5\uff09 \u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\u65e0\u6cd5\u53d6\u5f97 Pod \u7684\u72b6\u6001\u3002\u8fd9\u79cd\u60c5\u51b5\u901a\u5e38\u662f\u56e0\u4e3a\u4e0e Pod \u6240\u5728\u4e3b\u673a\u901a\u4fe1\u5931\u8d25\u3002 \u5bb9\u5668\u72b6\u6001 Waiting \uff08\u7b49\u5f85\uff09\uff0c\u4ecd\u5728\u8fd0\u884c\u5b83\u5b8c\u6210\u542f\u52a8\u6240\u9700\u8981\u7684\u64cd\u4f5c Running\uff08\u8fd0\u884c\u4e2d\uff09\uff0c\u8868\u660e\u5bb9\u5668\u6b63\u5728\u6267\u884c\u72b6\u6001\u5e76\u4e14\u6ca1\u6709\u95ee\u9898\u53d1\u751f Terminated\uff08\u5df2\u7ec8\u6b62\uff09\uff0c\u5f00\u59cb\u6267\u884c\u5e76\u4e14\u6216\u8005\u6b63\u5e38\u7ed3\u675f\u6216\u8005\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\u5931\u8d25 \u5bb9\u5668\u91cd\u542f\u7b56\u7565 spec.restartPolicy\uff1aAlways\u3001OnFailure \u548c Never Pod \u72b6\u51b5 PodStatus.PodConditions PodScheduled\uff1aPod \u5df2\u7ecf\u88ab\u8c03\u5ea6\u5230\u67d0\u8282\u70b9\uff1b ContainersReady\uff1aPod \u4e2d\u6240\u6709\u5bb9\u5668\u90fd\u5df2\u5c31\u7eea\uff1b Initialized\uff1a\u6240\u6709\u7684 Init \u5bb9\u5668 \u90fd\u5df2\u6210\u529f\u542f\u52a8\uff1b Ready\uff1aPod \u53ef\u4ee5\u4e3a\u8bf7\u6c42\u63d0\u4f9b\u670d\u52a1\uff0c\u5e76\u4e14\u5e94\u8be5\u88ab\u6dfb\u52a0\u5230\u5bf9\u5e94\u670d\u52a1\u7684\u8d1f\u8f7d\u5747\u8861\u6c60\u4e2d\u3002 Pod \u5c31\u7eea\u6001 \u901a\u8fc7 spec.readinessGates \u4e3a kubelet \u63d0\u4f9b\u4e00\u7ec4\u989d\u5916\u7684\u72b6\u51b5 \u5c31\u7eea\u6001\u57fa\u4e8e Pod \u7684 status.conditions \u5b57\u6bb5\u7684\u5f53\u524d\u503c\u6765\u505a\u51b3\u5b9a kind : Pod --- spec : readinessGates : - conditionType : \"www.example.com/feature-1\" status : conditions : - type : Ready # \u5185\u7f6e\u7684 Pod \u72b6\u51b5 status : \"False\" lastProbeTime : null lastTransitionTime : 2018-01-01T00:00:00Z - type : \"www.example.com/feature-1\" # \u989d\u5916\u7684 Pod \u72b6\u51b5 status : \"False\" lastProbeTime : null lastTransitionTime : 2018-01-01T00:00:00Z containerStatuses : - containerID : docker://abcd... ready : true \u5bb9\u5668\u63a2\u9488 Probe \u662f\u7531 kubelet \u5bf9\u5bb9\u5668\u6267\u884c\u7684\u5b9a\u671f\u8bca\u65ad\uff1b\u8981\u6267\u884c\u8bca\u65ad\uff0ckubelet \u8c03\u7528\u7531\u5bb9\u5668\u5b9e\u73b0\u7684 Handler \uff08\u5904\u7406\u7a0b\u5e8f\uff09\u3002\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u5904\u7406\u7a0b\u5e8f ExecAction\uff1a \u5728\u5bb9\u5668\u5185\u6267\u884c\u6307\u5b9a\u547d\u4ee4\u3002\u5982\u679c\u547d\u4ee4\u9000\u51fa\u65f6\u8fd4\u56de\u7801\u4e3a 0 \u5219\u8ba4\u4e3a\u8bca\u65ad\u6210\u529f\u3002 TCPSocketAction\uff1a \u5bf9\u5bb9\u5668\u7684 IP \u5730\u5740\u4e0a\u7684\u6307\u5b9a\u7aef\u53e3\u6267\u884c TCP \u68c0\u67e5\u3002\u5982\u679c\u7aef\u53e3\u6253\u5f00\uff0c\u5219\u8bca\u65ad\u88ab\u8ba4\u4e3a\u662f\u6210\u529f\u7684\u3002 HTTPGetAction\uff1a \u5bf9\u5bb9\u5668\u7684 IP \u5730\u5740\u4e0a\u6307\u5b9a\u7aef\u53e3\u548c\u8def\u5f84\u6267\u884c HTTP Get \u8bf7\u6c42\u3002\u5982\u679c\u54cd\u5e94\u7684\u72b6\u6001\u7801\u5927\u4e8e\u7b49\u4e8e 200 \u4e14\u5c0f\u4e8e 400\uff0c\u5219\u8bca\u65ad\u88ab\u8ba4\u4e3a\u662f\u6210\u529f\u7684\u3002 \u6bcf\u6b21\u63a2\u6d4b\u90fd\u5c06\u83b7\u5f97\u4ee5\u4e0b\u4e09\u79cd\u7ed3\u679c\u4e4b\u4e00\uff1a Success\uff08\u6210\u529f\uff09\uff1a\u5bb9\u5668\u901a\u8fc7\u4e86\u8bca\u65ad\u3002 Failure\uff08\u5931\u8d25\uff09\uff1a\u5bb9\u5668\u672a\u901a\u8fc7\u8bca\u65ad\u3002 Unknown\uff08\u672a\u77e5\uff09\uff1a\u8bca\u65ad\u5931\u8d25\uff0c\u56e0\u6b64\u4e0d\u4f1a\u91c7\u53d6\u4efb\u4f55\u884c\u52a8\u3002 \u63a2\u9488\u7c7b\u578b livenessProbe\uff1a\u6307\u793a\u5bb9\u5668\u662f\u5426\u6b63\u5728\u8fd0\u884c readinessProbe\uff1a\u6307\u793a\u5bb9\u5668\u662f\u5426\u51c6\u5907\u597d\u4e3a\u8bf7\u6c42\u63d0\u4f9b\u670d\u52a1 startupProbe: \u6307\u793a\u5bb9\u5668\u4e2d\u7684\u5e94\u7528\u662f\u5426\u5df2\u7ecf\u542f\u52a8 Pod \u7684\u7ec8\u6b62 \u4f53\u9762\u7684\u7ec8\u6b62 \u5bb9\u5668\u8fd0\u884c\u65f6\u4f1a\u53d1\u9001\u4e00\u4e2a TERM \u4fe1\u53f7\u5230\u6bcf\u4e2a\u5bb9\u5668\u4e2d\u7684\u4e3b\u8fdb\u7a0b\u3002 \u5f88\u591a\u5bb9\u5668\u8fd0\u884c\u65f6\u90fd\u80fd\u591f\u6ce8\u610f\u5230\u5bb9\u5668\u955c\u50cf\u4e2d STOPSIGNAL \u7684\u503c\uff0c\u5e76\u53d1\u9001\u8be5\u4fe1\u53f7\u800c\u4e0d\u662f TERM \u4e00\u65e6\u8d85\u51fa\u4e86\u4f53\u9762\u7ec8\u6b62\u9650\u671f\uff0c\u5bb9\u5668\u8fd0\u884c\u65f6\u4f1a\u5411\u6240\u6709\u5269\u4f59\u8fdb\u7a0b\u53d1\u9001 KILL \u4fe1\u53f7\uff0c\u4e4b\u540e Pod \u5c31\u4f1a\u88ab\u4ece API \u670d\u52a1\u5668 \u4e0a\u79fb\u9664 \u4f8b\u5982 \u4f7f\u7528 kubectl \u5de5\u5177\u624b\u52a8\u5220\u9664\u67d0\u4e2a\u7279\u5b9a\u7684 Pod\uff0c\u800c\u8be5 Pod \u7684\u4f53\u9762\u7ec8\u6b62\u9650\u671f\u662f\u9ed8\u8ba4\u503c\uff0830 \u79d2\uff09 API \u670d\u52a1\u5668\u4e2d\u7684 Pod \u5bf9\u8c61\u88ab\u66f4\u65b0\uff0c\u8bb0\u5f55\u6db5\u76d6\u4f53\u9762\u7ec8\u6b62\u9650\u671f\u5728\u5185 Pod \u7684\u6700\u7ec8\u6b7b\u671f\uff0c\u8d85\u51fa\u6240\u8ba1\u7b97\u65f6\u95f4\u70b9\u5219\u8ba4\u4e3a Pod \u5df2\u6b7b\uff08dead\uff09\uff1bdescribe \u4fe1\u606f\u4e2d Pod \u4f1a\u663e\u793a\u4e3a \"Terminating\" \uff08\u6b63\u5728\u7ec8\u6b62\uff09 \u5982\u679c Pod \u4e2d\u7684\u5bb9\u5668\u4e4b\u4e00\u5b9a\u4e49\u4e86 preStop \u56de\u8c03\uff0c kubelet \u5f00\u59cb\u5728\u5bb9\u5668\u5185\u8fd0\u884c\u8be5\u56de\u8c03\u903b\u8f91\u3002\u5982\u679c\u8d85\u51fa\u4f53\u9762\u7ec8\u6b62\u9650\u671f\u65f6\uff0cpreStop \u56de\u8c03\u903b\u8f91 \u4ecd\u5728\u8fd0\u884c\uff0ckubelet \u4f1a\u8bf7\u6c42\u7ed9\u4e88\u8be5 Pod \u7684\u5bbd\u9650\u671f\u4e00\u6b21\u6027\u589e\u52a0 2 \u79d2\u949f\uff1b\u5982\u679c preStop \u56de\u8c03\u6240\u9700\u8981\u7684\u65f6\u95f4\u957f\u4e8e\u9ed8\u8ba4\u7684\u4f53\u9762\u7ec8\u6b62\u9650\u671f\uff0c\u5fc5\u987b\u4fee\u6539 terminationGracePeriodSeconds \u5c5e\u6027\u503c\u6765\u4f7f\u5176\u6b63\u5e38\u5de5\u4f5c kubelet \u63a5\u4e0b\u6765\u89e6\u53d1\u5bb9\u5668\u8fd0\u884c\u65f6\u53d1\u9001 TERM \u4fe1\u53f7\u7ed9\u6bcf\u4e2a\u5bb9\u5668\u4e2d\u7684\u8fdb\u7a0b 1 \u4e0e\u6b64\u540c\u65f6\uff0ckubelet \u542f\u52a8\u4f53\u9762\u5173\u95ed\u903b\u8f91\uff0c\u63a7\u5236\u9762\u4f1a\u5c06 Pod \u4ece\u5bf9\u5e94\u7684\u7aef\u70b9\u5217\u8868\uff08\u4ee5\u53ca\u7aef\u70b9\u5207\u7247\u5217\u8868\uff0c \u5982\u679c\u542f\u7528\u4e86\u7684\u8bdd\uff09\u4e2d\u79fb\u9664\uff1bReplicaSets \u548c\u5176\u4ed6\u5de5\u4f5c\u8d1f\u8f7d\u8d44\u6e90 \u4e0d\u518d\u5c06\u5173\u95ed\u8fdb\u7a0b\u4e2d\u7684 Pod \u89c6\u4e3a\u5408\u6cd5\u7684\u3001\u80fd\u591f\u63d0\u4f9b\u670d\u52a1\u7684\u526f\u672c\u3002\u5173\u95ed\u52a8\u4f5c\u5f88\u6162\u7684 Pod \u4e5f\u65e0\u6cd5\u7ee7\u7eed\u5904\u7406\u8bf7\u6c42\u6570\u636e\uff0c\u56e0\u4e3a\u8d1f\u8f7d\u5747\u8861\u5668\uff08\u4f8b\u5982\u670d\u52a1\u4ee3\u7406\uff09\u5df2\u7ecf\u5728\u7ec8\u6b62\u5bbd\u9650\u671f\u5f00\u59cb\u7684\u65f6\u5019 \u5c06\u5176\u4ece\u7aef\u70b9\u5217\u8868\u4e2d\u79fb\u9664 \u8d85\u51fa\u7ec8\u6b62\u5bbd\u9650\u671f\u9650\u65f6\uff0ckubelet \u4f1a\u89e6\u53d1\u5f3a\u5236\u5173\u95ed\u8fc7\u7a0b\u3002\u5bb9\u5668\u8fd0\u884c\u65f6\u4f1a\u5411 Pod \u4e2d\u6240\u6709\u5bb9\u5668\u5185 \u4ecd\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u53d1\u9001 SIGKILL \u4fe1\u53f7\u3002 kubelet \u4e5f\u4f1a\u6e05\u7406\u9690\u85cf\u7684 pause \u5bb9\u5668\uff0c\u5982\u679c\u5bb9\u5668\u8fd0\u884c\u65f6\u4f7f\u7528\u4e86\u8fd9\u79cd\u5bb9\u5668\u7684\u8bdd kubelet \u89e6\u53d1\u5f3a\u5236\u4ece API \u670d\u52a1\u5668\u4e0a\u5220\u9664 Pod \u5bf9\u8c61\u7684\u903b\u8f91\uff0c\u5e76\u5c06\u4f53\u9762\u7ec8\u6b62\u9650\u671f\u8bbe\u7f6e\u4e3a 0 \uff08\u8fd9\u610f\u5473\u7740\u9a6c\u4e0a\u5220\u9664\uff09 API \u670d\u52a1\u5668\u5220\u9664 Pod \u7684 API \u5bf9\u8c61\uff0c\u4ece\u4efb\u4f55\u5ba2\u6237\u7aef\u90fd\u65e0\u6cd5\u518d\u770b\u5230\u8be5\u5bf9\u8c61 \u5f3a\u5236\u7ec8\u6b62 kubectl delete \u547d\u4ee4\u652f\u6301 --grace-period= \u9009\u9879\uff0c\u5141\u8bb8\u4f60\u91cd\u8f7d\u5bbd\u9650\u671f\u9650\u9ed8\u8ba4\u503c\uff0c \u8bbe\u5b9a\u81ea\u5df1\u5e0c\u671b\u7684\u671f\u9650\u503c \u5c06\u5bbd\u9650\u671f\u9650\u5f3a\u5236\u8bbe\u7f6e\u4e3a 0 \u610f\u5473\u7740\u7acb\u5373\u4ece API \u670d\u52a1\u5668\u5220\u9664 Pod\u3002 \u5982\u679c Pod \u4ecd\u7136\u8fd0\u884c\u4e8e\u67d0\u8282\u70b9\u4e0a\uff0c\u5f3a\u5236\u5220\u9664\u64cd\u4f5c\u4f1a\u89e6\u53d1 kubelet \u7acb\u5373\u6267\u884c\u6e05\u7406\u64cd\u4f5c\uff1b\u5fc5\u987b\u5728\u8bbe\u7f6e --grace-period=0 \u7684\u540c\u65f6\u989d\u5916\u8bbe\u7f6e --force \u53c2\u6570\u624d\u80fd\u53d1\u8d77\u5f3a\u5236\u5220\u9664\u8bf7\u6c42 \u6267\u884c\u5f3a\u5236\u5220\u9664\u64cd\u4f5c\u65f6\uff0cAPI \u670d\u52a1\u5668\u4e0d\u518d\u7b49\u5f85\u6765\u81ea kubelet \u7684\u3001\u5173\u4e8e Pod \u5df2\u7ecf\u5728\u539f\u6765\u8fd0\u884c\u7684\u8282\u70b9\u4e0a\u7ec8\u6b62\u6267\u884c\u7684\u786e\u8ba4\u6d88\u606f\u3002 API \u670d\u52a1\u5668\u76f4\u63a5\u5220\u9664 Pod \u5bf9\u8c61\uff0c\u8fd9\u6837\u65b0\u7684\u4e0e\u4e4b\u540c\u540d\u7684 Pod \u5373\u53ef\u4ee5\u88ab\u521b\u5efa\u3002 \u5728\u8282\u70b9\u4fa7\uff0c\u88ab\u8bbe\u7f6e\u4e3a\u7acb\u5373\u7ec8\u6b62\u7684 Pod \u4ecd\u7136\u4f1a\u5728\u88ab\u5f3a\u884c\u6740\u6b7b\u4e4b\u524d\u83b7\u5f97\u4e00\u70b9\u70b9\u7684\u5bbd\u9650\u65f6\u95f4 \u5931\u6548 Pod \u7684\u5783\u573e\u6536\u96c6 \u5bf9\u4e8e\u5df2\u5931\u8d25\u7684 Pod \u800c\u8a00\uff0c\u5bf9\u5e94\u7684 API \u5bf9\u8c61\u4ecd\u7136\u4f1a\u4fdd\u7559\u5728\u96c6\u7fa4\u7684 API \u670d\u52a1\u5668\u4e0a\uff0c\u76f4\u5230 \u7528\u6237\u6216\u8005\u63a7\u5236\u5668\u8fdb\u7a0b\u663e\u5f0f\u5730 \u5c06\u5176\u5220\u9664 \u63a7\u5236\u5c42\u7ec4\u4ef6\u4f1a\u5728 Pod \u4e2a\u6570\u8d85\u51fa\u6240\u914d\u7f6e\u7684\u9608\u503c \uff08\u6839\u636e kube-controller-manager \u7684 terminated-pod-gc-threshold \u8bbe\u7f6e\uff09\u65f6 \u5220\u9664\u5df2\u7ec8\u6b62\u7684 Pod Init \u5bb9\u5668 \u7406\u89e3 Init \u5bb9\u5668 Pod \u4e5f\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u5148\u4e8e\u5e94\u7528\u5bb9\u5668\u542f\u52a8\u7684 Init \u5bb9\u5668 Init \u5bb9\u5668\u4e0e\u666e\u901a\u5bb9\u5668\u7684\u4e0d\u540c\u70b9 \u5b83\u4eec\u603b\u662f\u8fd0\u884c\u5230\u5b8c\u6210\u3002 \u6bcf\u4e2a\u90fd\u5fc5\u987b\u5728\u4e0b\u4e00\u4e2a\u542f\u52a8\u4e4b\u524d\u6210\u529f\u5b8c\u6210\u3002 Init \u5bb9\u5668\u4e0d\u652f\u6301 lifecycle\u3001livenessProbe\u3001readinessProbe \u548c startupProbe \u5982\u679c Pod \u7684 Init \u5bb9\u5668\u5931\u8d25\uff0ckubelet \u4f1a\u4e0d\u65ad\u5730\u91cd\u542f\u8be5 Init \u5bb9\u5668\u76f4\u5230\u8be5\u5bb9\u5668\u6210\u529f\u4e3a\u6b62\uff1b\u5982\u679c Pod \u5bf9\u5e94\u7684 restartPolicy \u503c\u4e3a \"Never\"\uff0cKubernetes \u4e0d\u4f1a\u91cd\u65b0\u542f\u52a8 Pod \u4e3a Pod \u8bbe\u7f6e Init \u5bb9\u5668\u9700\u8981\u5728 Pod \u7684 spec \u4e2d\u6dfb\u52a0 initContainers \u5b57\u6bb5 \u5982\u679c\u4e3a\u4e00\u4e2a Pod \u6307\u5b9a\u4e86\u591a\u4e2a Init \u5bb9\u5668\uff0c\u8fd9\u4e9b\u5bb9\u5668\u4f1a\u6309\u987a\u5e8f\u9010\u4e2a\u8fd0\u884c\u3002 \u6bcf\u4e2a Init \u5bb9\u5668\u5fc5\u987b\u8fd0\u884c\u6210\u529f\uff0c\u4e0b\u4e00\u4e2a\u624d\u80fd\u591f\u8fd0\u884c\u3002\u5f53\u6240\u6709\u7684 Init \u5bb9\u5668\u8fd0\u884c\u5b8c\u6210\u65f6\uff0c Kubernetes \u624d\u4f1a\u4e3a Pod \u521d\u59cb\u5316\u5e94\u7528\u5bb9\u5668\u5e76\u50cf\u5e73\u5e38\u4e00\u6837\u8fd0\u884c \u4f7f\u7528 Init \u5bb9\u5668 \u4e0b\u9762\u7684\u4f8b\u5b50\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5177\u6709 2 \u4e2a Init \u5bb9\u5668\u7684\u7b80\u5355 Pod \u7b2c\u4e00\u4e2a\u7b49\u5f85 myservice \u542f\u52a8\uff0c \u7b2c\u4e8c\u4e2a\u7b49\u5f85 mydb \u542f\u52a8 \u4e00\u65e6\u8fd9\u4e24\u4e2a Init \u5bb9\u5668 \u90fd\u542f\u52a8\u5b8c\u6210\uff0cPod \u5c06\u542f\u52a8 spec \u8282\u4e2d\u7684\u5e94\u7528\u5bb9\u5668 apiVersion : v1 kind : Pod metadata : name : myapp-pod labels : app : myapp spec : containers : - name : myapp-container image : busybox:1.28 command : [ \"sh\" , \"-c\" , \"echo The app is running! && sleep 3600\" ] initContainers : - name : init-myservice image : busybox:1.28 command : [ \"sh\" , \"-c\" , \"until nslookup myservice.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done\" , ] - name : init-mydb image : busybox:1.28 command : [ \"sh\" , \"-c\" , \"until nslookup mydb.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 2; done\" , ] \u5982\u4e0b\u4e3a\u521b\u5efa\u8fd9\u4e9b Service \u7684\u914d\u7f6e\u6587\u4ef6 --- apiVersion : v1 kind : Service metadata : name : myservice spec : ports : - protocol : TCP port : 80 targetPort : 9376 --- apiVersion : v1 kind : Service metadata : name : mydb spec : ports : - protocol : TCP port : 80 targetPort : 9377 \u67e5\u770b Pod \u5185 Init \u5bb9\u5668\u7684\u65e5\u5fd7 kubectl logs myapp-pod -c init-myservice # \u67e5\u770b\u7b2c\u4e00\u4e2a Init \u5bb9\u5668 kubectl logs myapp-pod -c init-mydb # \u67e5\u770b\u7b2c\u4e8c\u4e2a Init \u5bb9\u5668 \u5177\u4f53\u884c\u4e3a \u6bcf\u4e2a Init \u5bb9\u5668\u4f1a\u5728\u7f51\u7edc\u548c\u6570\u636e\u5377\u521d\u59cb\u5316\u4e4b\u540e\u6309\u987a\u5e8f\u542f\u52a8\uff1b\u6bcf\u4e2a Init \u5bb9\u5668\u6210\u529f\u9000\u51fa\u540e\u624d\u4f1a\u542f\u52a8\u4e0b\u4e00\u4e2a Init \u5bb9\u5668 \u5982\u679c Pod \u91cd\u542f\uff0c\u6240\u6709 Init \u5bb9\u5668\u5fc5\u987b\u91cd\u65b0\u6267\u884c \u56e0\u4e3a Init \u5bb9\u5668\u53ef\u80fd\u4f1a\u88ab\u91cd\u542f\u3001\u91cd\u8bd5\u6216\u8005\u91cd\u65b0\u6267\u884c\uff0c\u6240\u4ee5 Init \u5bb9\u5668\u7684\u4ee3\u7801\u5e94\u8be5\u662f\u5e42\u7b49\u7684 \u8d44\u6e90 \u6240\u6709 Init \u5bb9\u5668\u4e0a\u5b9a\u4e49\u7684\u4efb\u4f55\u7279\u5b9a\u8d44\u6e90\u7684 limit \u6216 request \u7684\u6700\u5927\u503c\uff0c\u4f5c\u4e3a Pod \u6709\u6548\u521d\u59cb request/limit Pod \u5bf9\u8d44\u6e90\u7684 \u6709\u6548 limit/request \u662f\u5982\u4e0b\u4e24\u8005\u7684\u8f83\u5927\u8005\uff1a \u6240\u6709\u5e94\u7528\u5bb9\u5668\u5bf9\u67d0\u4e2a\u8d44\u6e90\u7684 limit/request \u4e4b\u548c \u5bf9\u67d0\u4e2a\u8d44\u6e90\u7684\u6709\u6548\u521d\u59cb limit/request \u57fa\u4e8e\u6709\u6548 limit/request \u5b8c\u6210\u8c03\u5ea6\uff0c\u8fd9\u610f\u5473\u7740 Init \u5bb9\u5668\u80fd\u591f\u4e3a\u521d\u59cb\u5316\u8fc7\u7a0b\u9884\u7559\u8d44\u6e90\uff0c \u8fd9\u4e9b\u8d44\u6e90\u5728 Pod \u751f\u547d\u5468\u671f\u8fc7\u7a0b\u4e2d\u5e76\u6ca1\u6709\u88ab\u4f7f\u7528\u3002 Pod \u7684 \u6709\u6548 QoS \u5c42 \uff0c\u4e0e Init \u5bb9\u5668\u548c\u5e94\u7528\u5bb9\u5668\u7684\u4e00\u6837\u3002 Pod \u91cd\u542f\u7684\u539f\u56e0 \u7528\u6237\u66f4\u65b0 Pod \u7684\u89c4\u7ea6\u5bfc\u81f4 Init \u5bb9\u5668\u955c\u50cf\u53d1\u751f\u6539\u53d8\u3002Init \u5bb9\u5668\u955c\u50cf\u7684\u53d8\u66f4\u4f1a\u5f15\u8d77 Pod \u91cd\u542f\u3002 \u5e94\u7528\u5bb9\u5668\u955c\u50cf\u7684\u53d8\u66f4\u4ec5\u4f1a\u91cd\u542f\u5e94\u7528\u5bb9\u5668\u3002 Pod \u7684\u57fa\u7840\u8bbe\u65bd\u5bb9\u5668 (\u8bd1\u8005\u6ce8\uff1a\u5982 pause \u5bb9\u5668) \u88ab\u91cd\u542f\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0d\u591a\u89c1\uff0c \u5fc5\u987b\u7531\u5177\u5907 root \u6743\u9650\u8bbf\u95ee\u8282\u70b9\u7684\u4eba\u5458\u6765\u5b8c\u6210\u3002 \u5f53 restartPolicy \u8bbe\u7f6e\u4e3a \"Always\"\uff0cPod \u4e2d\u6240\u6709\u5bb9\u5668\u4f1a\u7ec8\u6b62\u800c\u5f3a\u5236\u91cd\u542f\u3002 \u7531\u4e8e\u5783\u573e\u6536\u96c6\u673a\u5236\u7684\u539f\u56e0\uff0cInit \u5bb9\u5668\u7684\u5b8c\u6210\u8bb0\u5f55\u5c06\u4f1a\u4e22\u5931\u3002 Pod \u62d3\u6251\u5206\u5e03\u7ea6\u675f \u901a\u8fc7\u62d3\u6251\u5206\u5e03\u7ea6\u675f\u6765\u63a7\u5236 Pods \u5728\u96c6\u7fa4\u5185\u6545\u969c\u57df \u4e4b\u95f4\u7684\u5206\u5e03\uff0c\u4f8b\u5982\u533a\u57df\uff08Region\uff09\u3001\u53ef\u7528\u533a\uff08Zone\uff09\u3001\u8282\u70b9\u548c\u5176\u4ed6\u7528\u6237\u81ea\u5b9a\u4e49\u62d3\u6251\u57df \u4f9d\u8d56\u4e8e\u8282\u70b9\u6807\u7b7e\u6765\u6807\u8bc6\u6bcf\u4e2a\u8282\u70b9\u6240\u5728\u7684\u62d3\u6251\u57df Pod \u7684\u5206\u5e03\u7ea6\u675f \u5b57\u6bb5 maxSkew\uff1a\u63cf\u8ff0 Pod \u5206\u5e03\u4e0d\u5747\u7684\u7a0b\u5ea6\u3002\u8fd9\u662f\u7ed9\u5b9a\u62d3\u6251\u7c7b\u578b\u4e2d\u4efb\u610f\u4e24\u4e2a\u62d3\u6251\u57df\u4e2d \u5339\u914d\u7684 pod \u4e4b\u95f4\u7684\u6700\u5927\u5141\u8bb8\u5dee\u503c\uff0c\u5fc5\u987b\u5927\u4e8e\u96f6 \u5f53 whenUnsatisfiable \u7b49\u4e8e \"DoNotSchedule\" \u65f6\uff0cmaxSkew \u662f\u76ee\u6807\u62d3\u6251\u57df \u4e2d\u5339\u914d\u7684 Pod \u6570\u4e0e\u5168\u5c40\u6700\u5c0f\u503c\u4e4b\u95f4\u53ef\u5b58\u5728\u7684\u5dee\u5f02 \u5f53 whenUnsatisfiable \u7b49\u4e8e \"ScheduleAnyway\" \u65f6\uff0c\u8c03\u5ea6\u5668\u4f1a\u66f4\u4e3a\u504f\u5411\u80fd\u591f\u964d\u4f4e\u504f\u5dee\u503c\u7684\u62d3\u6251\u57df topologyKey \u662f\u8282\u70b9\u6807\u7b7e\u7684\u952e\u3002\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u4f7f\u7528\u6b64\u952e\u6807\u8bb0\u5e76\u4e14\u5177\u6709\u76f8\u540c\u7684\u6807\u7b7e\u503c\uff0c \u5219\u8c03\u5ea6\u5668\u4f1a\u5c06\u8fd9\u4e24\u4e2a\u8282\u70b9\u89c6\u4e3a\u5904\u4e8e\u540c\u4e00\u62d3\u6251\u57df\u4e2d\u3002\u8c03\u5ea6\u5668\u8bd5\u56fe\u5728\u6bcf\u4e2a\u62d3\u6251\u57df\u4e2d\u653e\u7f6e\u6570\u91cf\u5747\u8861\u7684 Pod whenUnsatisfiable \u6307\u793a\u5982\u679c Pod \u4e0d\u6ee1\u8db3\u5206\u5e03\u7ea6\u675f\u65f6\u5982\u4f55\u5904\u7406\uff1a DoNotSchedule\uff08\u9ed8\u8ba4\uff09\u544a\u8bc9\u8c03\u5ea6\u5668\u4e0d\u8981\u8c03\u5ea6 ScheduleAnyway \u544a\u8bc9\u8c03\u5ea6\u5668\u4ecd\u7136\u7ee7\u7eed\u8c03\u5ea6\uff0c\u53ea\u662f\u6839\u636e\u5982\u4f55\u80fd\u5c06\u504f\u5dee\u6700\u5c0f\u5316\u6765\u5bf9 \u8282\u70b9\u8fdb\u884c\u6392\u5e8f labelSelector \u7528\u4e8e\u67e5\u627e\u5339\u914d\u7684 pod\u3002\u5339\u914d\u6b64\u6807\u7b7e\u7684 Pod \u5c06\u88ab\u7edf\u8ba1\uff0c\u4ee5\u786e\u5b9a\u76f8\u5e94 \u62d3\u6251\u57df\u4e2d Pod \u7684\u6570\u91cf \u793a\u4f8b\u5982\u4e0b kind : Pod apiVersion : v1 metadata : name : mypod labels : foo : bar spec : topologySpreadConstraints : - maxSkew : 1 topologyKey : zone whenUnsatisfiable : DoNotSchedule labelSelector : matchLabels : foo : bar containers : - name : pause image : k8s.gcr.io/pause:3.1 topologyKey: zone\uff0c\u610f\u5473\u7740\u5747\u5300\u5206\u5e03\u5c06\u53ea\u5e94\u7528\u4e8e\u5b58\u5728\u6807\u7b7e\u952e\u503c\u5bf9\u4e3a \"zone: \" \u7684\u8282\u70b9 whenUnsatisfiable: DoNotSchedule \u544a\u8bc9\u8c03\u5ea6\u5668\u5982\u679c\u65b0\u7684 Pod \u4e0d\u6ee1\u8db3\u7ea6\u675f\uff0c \u5219\u8ba9\u5b83\u4fdd\u6301\u60ac\u51b3\u72b6\u6001 \u591a\u4e2a TopologySpreadConstraints \u793a\u4f8b kind : Pod apiVersion : v1 metadata : name : mypod labels : foo : bar spec : topologySpreadConstraints : - maxSkew : 1 topologyKey : zone whenUnsatisfiable : DoNotSchedule labelSelector : matchLabels : foo : bar - maxSkew : 1 topologyKey : node whenUnsatisfiable : DoNotSchedule labelSelector : matchLabels : foo : bar containers : - name : pause image : k8s.gcr.io/pause:3.1 \u591a\u4e2a\u7ea6\u675f\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u51b2\u7a81 \u7ea6\u5b9a \u53ea\u6709\u4e0e\u65b0\u7684 Pod \u5177\u6709\u76f8\u540c\u547d\u540d\u7a7a\u95f4\u7684 Pod \u624d\u80fd\u4f5c\u4e3a\u5339\u914d\u5019\u9009\u8005 \u6ca1\u6709 topologySpreadConstraints[*].topologyKey \u7684\u8282\u70b9\u5c06\u88ab\u5ffd\u7565 \u4f4d\u4e8e\u8fd9\u4e9b\u8282\u70b9\u4e0a\u7684 Pod \u4e0d\u5f71\u54cd maxSkew \u7684\u8ba1\u7b97 \u65b0\u7684 Pod \u6ca1\u6709\u673a\u4f1a\u88ab\u8c03\u5ea6\u5230\u8fd9\u7c7b\u8282\u70b9\u4e0a \u5982\u679c\u65b0 Pod \u7684 topologySpreadConstraints[*].labelSelector \u4e0e\u81ea\u8eab\u7684\u6807\u7b7e\u4e0d\u5339\u914d\uff0c\u5728\u8c03\u5ea6\u4e4b\u540e\uff0c\u96c6\u7fa4\u7684\u4e0d\u5e73\u8861\u7a0b\u5ea6\u4fdd\u6301\u4e0d\u53d8 \u5982\u679c\u65b0 Pod \u5b9a\u4e49\u4e86 spec.nodeSelector \u6216 spec.affinity.nodeAffinity\uff0c\u5219\u4e0d\u5339\u914d\u7684\u8282\u70b9\u4f1a\u88ab\u5ffd\u7565 \u96c6\u7fa4\u7ea7\u522b\u7684\u9ed8\u8ba4\u7ea6\u675f \u4e3a\u96c6\u7fa4\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u62d3\u6251\u5206\u5e03\u7ea6\u675f\u4e5f\u662f\u53ef\u80fd\u7684\u3002\u9ed8\u8ba4\u62d3\u6251\u5206\u5e03\u7ea6\u675f\u5728\u4e14\u4ec5\u5728\u4ee5\u4e0b\u6761\u4ef6\u6ee1\u8db3 \u65f6\u624d\u4f1a\u5e94\u7528\u5230 Pod \u4e0a Pod \u6ca1\u6709\u5728\u5176 .spec.topologySpreadConstraints \u8bbe\u7f6e\u4efb\u4f55\u7ea6\u675f Pod \u96b6\u5c5e\u4e8e\u67d0\u4e2a\u670d\u52a1\u3001\u526f\u672c\u63a7\u5236\u5668\u3001ReplicaSet \u6216 StatefulSet \u793a\u4f8b apiVersion : kubescheduler.config.k8s.io/v1beta1 kind : KubeSchedulerConfiguration profiles : - pluginConfig : - name : PodTopologySpread args : defaultConstraints : - maxSkew : 1 topologyKey : topology.kubernetes.io/zone whenUnsatisfiable : ScheduleAnyway \u5185\u90e8\u9ed8\u8ba4\u7ea6\u675f \u5f53\u542f\u7528\u4e86 DefaultPodTopologySpread \u7279\u6027\u95e8\u63a7\u65f6\uff0c\u539f\u6765\u7684 SelectorSpread \u63d2\u4ef6\u4f1a\u88ab\u7981\u7528\uff0ckube-scheduler \u4f1a\u4f7f\u7528\u4e0b\u9762\u7684\u9ed8\u8ba4\u62d3\u6251\u7ea6\u675f\u4f5c\u4e3a PodTopologySpread \u63d2\u4ef6\u7684\u914d\u7f6e defaultConstraints : - maxSkew : 3 topologyKey : \"kubernetes.io/hostname\" whenUnsatisfiable : ScheduleAnyway - maxSkew : 5 topologyKey : \"topology.kubernetes.io/zone\" whenUnsatisfiable : ScheduleAnyway \u4e0e PodAffinity/PodAntiAffinity \u76f8\u6bd4\u8f83 \u4e0e\u201c\u4eb2\u548c\u6027\u201d\u76f8\u5173\u7684\u6307\u4ee4\u63a7\u5236 Pod \u7684\u8c03\u5ea6\u65b9\u5f0f \u5bf9\u4e8e PodAffinity\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u4efb\u610f\u6570\u91cf\u7684 Pod \u96c6\u4e2d\u5230\u7b26\u5408\u6761\u4ef6\u7684\u62d3\u6251\u57df\u4e2d \u5bf9\u4e8e PodAntiAffinity\uff0c\u53ea\u80fd\u5c06\u4e00\u4e2a Pod \u8c03\u5ea6\u5230\u67d0\u4e2a\u62d3\u6251\u57df\u4e2d \u5e72\u6270 \u81ea\u613f\u5e72\u6270\u548c\u975e\u81ea\u613f\u5e72\u6270 \u975e\u81ea\u613f\u5e72\u6270\uff1aPod \u4e0d\u4f1a\u6d88\u5931\uff0c\u9664\u975e\u6709\u4eba\uff08\u7528\u6237\u6216\u63a7\u5236\u5668\uff09\u5c06\u5176\u9500\u6bc1\uff0c\u6216\u8005\u51fa\u73b0\u4e86\u4e0d\u53ef\u907f\u514d\u7684\u786c\u4ef6\u6216\u8f6f\u4ef6\u7cfb\u7edf\u9519\u8bef \u8282\u70b9\u4e0b\u5c42\u7269\u7406\u673a\u7684\u786c\u4ef6\u6545\u969c \u96c6\u7fa4\u7ba1\u7406\u5458\u9519\u8bef\u5730\u5220\u9664\u865a\u62df\u673a\uff08\u5b9e\u4f8b\uff09 \u4e91\u63d0\u4f9b\u5546\u6216\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u4e2d\u7684\u6545\u969c\u5bfc\u81f4\u7684\u865a\u62df\u673a\u6d88\u5931 \u5185\u6838\u9519\u8bef \u8282\u70b9\u7531\u4e8e\u96c6\u7fa4\u7f51\u7edc\u9694\u79bb\u4ece\u96c6\u7fa4\u4e2d\u6d88\u5931 \u7531\u4e8e\u8282\u70b9\u8d44\u6e90\u4e0d\u8db3\u5bfc\u81f4 pod \u88ab\u9a71\u9010 \u81ea\u613f\u5e72\u6270 \u5220\u9664 Deployment \u6216\u5176\u4ed6\u7ba1\u7406 Pod \u7684\u63a7\u5236\u5668 \u66f4\u65b0\u4e86 Deployment \u7684 Pod \u6a21\u677f\u5bfc\u81f4 Pod \u91cd\u542f \u76f4\u63a5\u5220\u9664 Pod\uff08\u4f8b\u5982\uff0c\u56e0\u4e3a\u8bef\u64cd\u4f5c\uff09 \u6392\u7a7a\uff08drain\uff09\u8282\u70b9\u8fdb\u884c\u4fee\u590d\u6216\u5347\u7ea7\u3002 \u4ece\u96c6\u7fa4\u4e2d\u6392\u7a7a\u8282\u70b9\u4ee5\u7f29\u5c0f\u96c6\u7fa4\uff08\u4e86\u89e3\u96c6\u7fa4\u81ea\u52a8\u6269\u7f29\uff09 \u4ece\u8282\u70b9\u4e2d\u79fb\u9664\u4e00\u4e2a Pod\uff0c\u4ee5\u5141\u8bb8\u5176\u4ed6 Pod \u4f7f\u7528\u8be5\u8282\u70b9 \u5904\u7406\u5e72\u6270 \u786e\u4fdd Pod \u5728\u8bf7\u6c42\u4e2d\u7ed9\u51fa\u6240\u9700\u8d44\u6e90 \u5982\u679c\u9700\u8981\u66f4\u9ad8\u7684\u53ef\u7528\u6027\uff0c\u8bf7\u590d\u5236\u5e94\u7528\u7a0b\u5e8f\u3002 \uff08\u4e86\u89e3\u6709\u5173\u8fd0\u884c\u591a\u526f\u672c\u7684\u65e0\u72b6\u6001 \u548c\u6709\u72b6\u6001\u5e94\u7528\u7a0b\u5e8f\u7684\u4fe1\u606f\uff09 \u4e3a\u4e86\u5728\u8fd0\u884c\u590d\u5236\u5e94\u7528\u7a0b\u5e8f\u65f6\u83b7\u5f97\u66f4\u9ad8\u7684\u53ef\u7528\u6027\uff0c\u8bf7\u8de8\u673a\u67b6\uff08\u4f7f\u7528 \u53cd\u4eb2\u548c\u6027\uff09\u6216\u8de8\u533a\u57df \uff08\u5982\u679c\u4f7f\u7528\u591a\u533a\u57df\u96c6\u7fa4\uff09\u6269\u5c55\u5e94\u7528\u7a0b\u5e8f \u5e72\u6270\u9884\u7b97 \u5e94\u7528\u7a0b\u5e8f\u6240\u6709\u8005\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa PodDisruptionBudget \u5bf9\u8c61\uff08PDB\uff09\uff0cPDB \u5c06\u9650\u5236\u5728\u540c\u4e00\u65f6\u95f4\u56e0\u81ea\u613f\u5e72\u6270\u5bfc\u81f4\u7684\u590d\u5236\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b95\u673a\u7684 pod \u6570\u91cf \u4f8b\u5982\uff0c\u57fa\u4e8e\u7968\u9009\u673a\u5236\u7684\u5e94\u7528\u7a0b\u5e8f\u5e0c\u671b\u786e\u4fdd\u8fd0\u884c\u7684\u526f\u672c\u6570\u6c38\u8fdc\u4e0d\u4f1a\u4f4e\u4e8e\u4ef2\u88c1\u6240\u9700\u7684\u6570\u91cf \u96c6\u7fa4\u7ba1\u7406\u5458\u548c\u6258\u7ba1\u63d0\u4f9b\u5546\u5e94\u8be5\u4f7f\u7528\u9075\u5faa Pod Disruption Budgets \u7684\u63a5\u53e3 \uff08\u901a\u8fc7\u8c03\u7528 Eviction API\uff09\uff0c \u800c\u4e0d\u662f\u76f4\u63a5\u5220\u9664 Pod \u6216 Deployment \u4f8b\u5982\uff0ckubectl drain \u547d\u4ee4\u53ef\u4ee5\u7528\u6765\u6807\u8bb0\u67d0\u4e2a\u8282\u70b9\u5373\u5c06\u505c\u6b62\u670d\u52a1\u3002 \u8fd0\u884c kubectl drain \u547d\u4ee4\u65f6\uff0c\u5de5\u5177\u4f1a\u5c1d\u8bd5\u9a71\u9010\u673a\u5668\u4e0a\u7684\u6240\u6709 Pod PDB \u6307\u5b9a\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5bb9\u5fcd\u7684\u526f\u672c\u6570\u91cf\uff08\u76f8\u5f53\u4e8e\u5e94\u8be5\u6709\u591a\u5c11\u526f\u672c\uff09 \u4f8b\u5982\uff0c\u5177\u6709 .spec.replicas: 5 \u7684 Deployment \u5728\u4efb\u4f55\u65f6\u95f4\u90fd\u5e94\u8be5\u6709 5 \u4e2a Pod\u3002 \u5982\u679c PDB \u5141\u8bb8\u5176\u5728\u67d0\u4e00\u65f6\u523b\u6709 4 \u4e2a\u526f\u672c\uff0c\u90a3\u4e48\u9a71\u9010 API \u5c06\u5141\u8bb8\u540c\u4e00\u65f6\u523b\u4ec5\u6709\u4e00\u4e2a\u800c\u4e0d\u662f\u4e24\u4e2a Pod \u81ea\u613f\u5e72\u6270 \u4f7f\u7528\u6807\u7b7e\u9009\u62e9\u5668\u6765\u6307\u5b9a\u6784\u6210\u5e94\u7528\u7a0b\u5e8f\u7684\u4e00\u7ec4 Pod\uff0c\u8fd9\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u63a7\u5236\u5668\uff08Deployment\uff0cStatefulSet \u7b49\uff09 \u9009\u62e9 Pod \u7684\u903b\u8f91\u4e00\u6837\uff1bPod \u63a7\u5236\u5668\u7684 .spec.replicas \u8ba1\u7b97\u201c\u9884\u671f\u7684\u201d Pod \u6570\u91cf\u3002 \u6839\u636e Pod \u5bf9\u8c61\u7684 .metadata.ownerReferences \u5b57\u6bb5\u6765\u53d1\u73b0\u63a7\u5236\u5668 PDB \u4e0d\u80fd\u963b\u6b62\u975e\u81ea\u613f\u5e72\u6270\u7684\u53d1\u751f\uff0c\u4f46\u662f\u786e\u5b9e\u4f1a\u8ba1\u5165 \u9884\u7b97 \u4e34\u65f6\u5bb9\u5668 \u7531\u4e8e Pod \u662f\u4e00\u6b21\u6027\u4e14\u53ef\u66ff\u6362\u7684\uff0c\u56e0\u6b64\u4e00\u65e6 Pod \u521b\u5efa\uff0c\u5c31\u65e0\u6cd5\u5c06\u5bb9\u5668\u52a0\u5165\u5230 Pod \u4e2d \u6709\u65f6\u6709\u5fc5\u8981\u68c0\u67e5\u73b0\u6709 Pod \u7684\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u96be\u4ee5\u590d\u73b0\u7684\u6545\u969c\u8fdb\u884c\u6392\u67e5\u3002 \u5728\u8fd9\u4e9b\u573a\u666f\u4e2d\uff0c\u53ef\u4ee5\u5728\u73b0\u6709 Pod \u4e2d\u8fd0\u884c\u4e34\u65f6\u5bb9\u5668\u6765\u68c0\u67e5\u5176\u72b6\u6001\u5e76\u8fd0\u884c\u4efb\u610f\u547d\u4ee4 \u4e34\u65f6\u5bb9\u5668 \u4e34\u65f6\u5bb9\u5668\u7f3a\u5c11\u5bf9\u8d44\u6e90\u6216\u6267\u884c\u7684\u4fdd\u8bc1\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u81ea\u52a8\u91cd\u542f\uff0c \u56e0\u6b64\u4e0d\u9002\u7528\u4e8e\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\uff0c\u540c\u6837\u4f7f\u7528 ContainerSpec \u63cf\u8ff0\uff0c\u4f46\u8bb8\u591a\u5b57\u6bb5\u662f\u4e0d\u517c\u5bb9\u548c\u4e0d\u5141\u8bb8\u7684 \u4e34\u65f6\u5bb9\u5668\u6ca1\u6709\u7aef\u53e3\u914d\u7f6e\uff0c\u56e0\u6b64\u50cf ports\uff0clivenessProbe\uff0creadinessProbe \u8fd9\u6837\u7684\u5b57\u6bb5\u662f\u4e0d\u5141\u8bb8\u7684 Pod \u8d44\u6e90\u5206\u914d\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u56e0\u6b64 resources \u914d\u7f6e\u662f\u4e0d\u5141\u8bb8\u7684 \u66f4\u591a\u89c1 EphemeralContainer \u53c2\u8003\u6587\u6863 \u4e34\u65f6\u5bb9\u5668\u662f\u4f7f\u7528 API \u4e2d\u7684\u4e00\u79cd\u7279\u6b8a\u7684 ephemeralcontainers \u5904\u7406\u5668\u8fdb\u884c\u521b\u5efa\u7684\uff0c \u800c\u4e0d\u662f\u76f4\u63a5\u6dfb\u52a0\u5230 pod.spec \u6bb5\uff0c\u56e0\u6b64\u65e0\u6cd5\u4f7f\u7528 kubectl edit \u6765\u6dfb\u52a0\u4e00\u4e2a\u4e34\u65f6\u5bb9\u5668 \u4e0e\u5e38\u89c4\u5bb9\u5668\u4e00\u6837\uff0c\u5c06\u4e34\u65f6\u5bb9\u5668\u6dfb\u52a0\u5230 Pod \u540e\uff0c\u5c06\u4e0d\u80fd\u66f4\u6539\u6216\u5220\u9664\u4e34\u65f6\u5bb9\u5668 \u7528\u9014 \u5f53\u7531\u4e8e\u5bb9\u5668\u5d29\u6e83\u6216\u5bb9\u5668\u955c\u50cf\u4e0d\u5305\u542b\u8c03\u8bd5\u5de5\u5177\u800c\u5bfc\u81f4 kubectl exec \u65e0\u7528\u65f6\uff0c \u4e34\u65f6\u5bb9\u5668\u5bf9\u4e8e\u4ea4\u4e92\u5f0f\u6545\u969c\u6392\u67e5\u5f88\u6709\u7528 \u793a\u4f8b { \"apiVersion\" : \"v1\" , \"kind\" : \"EphemeralContainers\" , \"metadata\" : { \"name\" : \"example-pod\" }, \"ephemeralContainers\" : [ { \"command\" : [ \"sh\" ], \"image\" : \"busybox\" , \"imagePullPolicy\" : \"IfNotPresent\" , \"name\" : \"debugger\" , \"stdin\" : true , \"tty\" : true , \"terminationMessagePolicy\" : \"File\" } ] } \u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u66f4\u65b0\u5df2\u8fd0\u884c\u7684\u4e34\u65f6\u5bb9\u5668 example-pod kubectl replace --raw /api/v1/namespaces/default/pods/example-pod/ephemeralcontainers -f ec.json \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fde\u63a5\u5230\u65b0\u7684\u4e34\u65f6\u5bb9\u5668 kubectl attach -it example-pod -c debugger","title":"\u57fa\u7840"},{"location":"K8S/basic/#kubernetes","text":"","title":"Kubernetes \u57fa\u7840"},{"location":"K8S/basic/#kubernetes_1","text":"","title":"Kubernetes \u7ec4\u4ef6"},{"location":"K8S/basic/#_1","text":"kube-apiserver \u63d0\u4f9b HTTTP Rest \u63a5\u53e3 etcd \u4e00\u81f4\u6027\u548c\u9ad8\u53ef\u7528\u6027\u7684\u952e\u503c\u6570\u636e\u5e93\uff0c\u4fdd\u5b58 Kubernetes \u6240\u6709\u96c6\u7fa4\u6570\u636e\u7684\u540e\u53f0\u6570\u636e\u5e93 kube-scheduler \u8d1f\u8d23\u8d44\u6e90\u8c03\u5ea6 kube-controller-manager \u5728\u4e3b\u8282\u70b9\u4e0a\u8fd0\u884c\u63a7\u5236\u5668\u7684\u7ec4\u4ef6\uff0c\u6bcf\u4e2a\u63a7\u5236\u5668\u90fd\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\uff0c \u4f46\u662f\u4e3a\u4e86\u964d\u4f4e\u590d\u6742\u6027\uff0c\u5b83\u4eec\u90fd\u88ab\u7f16\u8bd1\u5230\u540c\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c \u63a7\u5236\u5668\u5305\u62ec \u8282\u70b9\u63a7\u5236\u5668\uff08Node Controller\uff09: \u8d1f\u8d23\u5728\u8282\u70b9\u51fa\u73b0\u6545\u969c\u65f6\u8fdb\u884c\u901a\u77e5\u548c\u54cd\u5e94 \u526f\u672c\u63a7\u5236\u5668\uff08Replication Controller\uff09: \u8d1f\u8d23\u4e3a\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u526f\u672c\u63a7\u5236\u5668\u5bf9\u8c61\u7ef4\u62a4\u6b63\u786e\u6570\u91cf\u7684 Pod \u7aef\u70b9\u63a7\u5236\u5668\uff08Endpoints Controller\uff09: \u586b\u5145\u7aef\u70b9(Endpoints)\u5bf9\u8c61(\u5373\u52a0\u5165 Service \u4e0e Pod) \u670d\u52a1\u5e10\u6237\u548c\u4ee4\u724c\u63a7\u5236\u5668\uff08Service Account & Token Controllers\uff09: \u4e3a\u65b0\u7684\u547d\u540d\u7a7a\u95f4\u521b\u5efa\u9ed8\u8ba4\u5e10\u6237\u548c API \u8bbf\u95ee\u4ee4\u724c cloud-controller-manager \u5d4c\u5165\u7279\u5b9a\u4e91\u7684\u63a7\u5236\u903b\u8f91\u7684\u63a7\u5236\u5c42\u7ec4\u4ef6 \u63a7\u5236\u5668\u5305\u62ec \u8282\u70b9\u63a7\u5236\u5668\uff08Node Controller\uff09: \u7528\u4e8e\u5728\u8282\u70b9\u7ec8\u6b62\u54cd\u5e94\u540e\u68c0\u67e5\u4e91\u63d0\u4f9b\u5546\u4ee5\u786e\u5b9a\u8282\u70b9\u662f\u5426\u5df2\u88ab\u5220\u9664 \u8def\u7531\u63a7\u5236\u5668\uff08Route Controller\uff09: \u7528\u4e8e\u5728\u5e95\u5c42\u4e91\u57fa\u7840\u67b6\u6784\u4e2d\u8bbe\u7f6e\u8def\u7531 \u670d\u52a1\u63a7\u5236\u5668\uff08Service Controller\uff09: \u7528\u4e8e\u521b\u5efa\u3001\u66f4\u65b0\u548c\u5220\u9664\u4e91\u63d0\u4f9b\u5546\u8d1f\u8f7d\u5747\u8861\u5668","title":"\u63a7\u5236\u5c42\u7ec4\u4ef6"},{"location":"K8S/basic/#node","text":"\u4f5c\u7528\uff1a\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\uff0c\u7ef4\u62a4\u8fd0\u884c\u7684 Pod \u5e76\u63d0\u4f9b Kubernetes \u8fd0\u884c\u73af\u5883 kubelet \u4e00\u4e2a\u5728\u96c6\u7fa4\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u7684\u4ee3\u7406\u3002 \u5b83\u4fdd\u8bc1\u5bb9\u5668\u90fd\u8fd0\u884c\u5728 Pod \u4e2d\uff1b kubelet \u63a5\u6536\u4e00\u7ec4\u901a\u8fc7\u5404\u7c7b\u673a\u5236\u63d0\u4f9b\u7ed9\u5b83\u7684 PodSpecs\uff0c\u786e\u4fdd\u8fd9\u4e9b PodSpecs \u4e2d\u63cf\u8ff0\u7684\u5bb9\u5668\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u4e14\u5065\u5eb7 kube-proxy \u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u7684\u7f51\u7edc\u4ee3\u7406\uff0c\u7ef4\u62a4\u8282\u70b9\u4e0a\u7684\u7f51\u7edc\u89c4\u5219 Container Runtime \u8d1f\u8d23\u8fd0\u884c\u5bb9\u5668 Kubernetes \u652f\u6301\u591a\u4e2a\u5bb9\u5668\u8fd0\u884c\u73af\u5883: Docker\u3001 containerd\u3001CRI-O \u4ee5\u53ca\u4efb\u4f55\u5b9e\u73b0 Kubernetes CRI (\u5bb9\u5668\u8fd0\u884c\u73af\u5883\u63a5\u53e3)\u7684\u5bb9\u5668\u73af\u5883 \u63d2\u4ef6\uff08Addons\uff09 \u4f7f\u7528 Kubernetes \u8d44\u6e90\uff08DaemonSet\u3001 Deployment \u7b49\uff09\u5b9e\u73b0\u96c6\u7fa4\u529f\u80fd\u3002 \u56e0\u4e3a\u8fd9\u4e9b\u63d2\u4ef6\u63d0\u4f9b\u96c6\u7fa4\u7ea7\u522b\u7684\u529f\u80fd\uff0c\u63d2\u4ef6\u4e2d\u547d\u540d\u7a7a\u95f4\u57df\u7684\u8d44\u6e90\u5c5e\u4e8e kube-system \u547d\u540d\u7a7a\u95f4 \u5e38\u89c1\u63d2\u4ef6\u5982\u4e0b DNS \u4eea\u8868\u76d8 \u5bb9\u5668\u8d44\u6e90\u76d1\u63a7 \u96c6\u7fa4\u5c42\u9762\u65e5\u5fd7","title":"Node \u7ec4\u4ef6"},{"location":"K8S/basic/#kubernetes_2","text":"","title":"Kubernetes \u5bf9\u8c61"},{"location":"K8S/basic/#kubernetes_3","text":"Kubernetes \u5bf9\u8c61 \u662f\u6301\u4e45\u5316\u7684\u5b9e\u4f53\u4f7f\u7528\u8fd9\u4e9b\u5b9e\u4f53\u53bb\u8868\u793a\u6574\u4e2a\u96c6\u7fa4\u7684\u72b6\u6001\uff0c\u5b83\u4eec\u63cf\u8ff0\u4e86\u5982\u4e0b\u4fe1\u606f \u54ea\u4e9b\u5bb9\u5668\u5316\u5e94\u7528\u5728\u8fd0\u884c\uff08\u4ee5\u53ca\u5728\u54ea\u4e9b\u8282\u70b9\u4e0a\uff09 \u53ef\u4ee5\u88ab\u5e94\u7528\u4f7f\u7528\u7684\u8d44\u6e90 \u5173\u4e8e\u5e94\u7528\u8fd0\u884c\u65f6\u8868\u73b0\u7684\u7b56\u7565\uff0c\u6bd4\u5982\u91cd\u542f\u7b56\u7565\u3001\u5347\u7ea7\u7b56\u7565\uff0c\u4ee5\u53ca\u5bb9\u9519\u7b56\u7565 \u5bf9\u8c61\u89c4\u7ea6\uff08Spec\uff09\u4e0e\u72b6\u6001\uff08Status\uff09 spec\uff1a\u63cf\u8ff0\u4f60\u5e0c\u671b\u5bf9\u8c61\u6240\u5177\u6709\u7684\u7279\u5f81\uff1a \u671f\u671b\u72b6\u6001\uff08Desired State\uff09\uff0c\u5982\u9700\u8981\u6709 3 \u4e2a\u526f\u672c\u8fd0\u884c status\uff1a\u63cf\u8ff0\u4e86\u5bf9\u8c61\u7684 \u5f53\u524d\u72b6\u6001\uff08Current State\uff09\uff0c\u7531 Kubernetes \u7cfb\u7edf\u548c\u7ec4\u4ef6 \u8bbe\u7f6e\u5e76\u66f4\u65b0 \u63cf\u8ff0 Kubernetes \u5bf9\u8c61 application/deployment.yaml apiVersion : apps/v1 # for versions before 1.9.0 use apps/v1beta2 kind : Deployment metadata : name : nginx-deployment spec : selector : matchLabels : app : nginx replicas : 2 # tells deployment to run 2 pods matching the template template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.14.2 ports : - containerPort : 80 \u4f7f\u7528\u59ff\u52bf\uff1akubectl apply -f application/deployment.yaml --record \u5fc5\u9700\u5b57\u6bb5 apiVersion - \u521b\u5efa\u8be5\u5bf9\u8c61\u6240\u4f7f\u7528\u7684 Kubernetes API \u7684\u7248\u672c kind - \u60f3\u8981\u521b\u5efa\u7684\u5bf9\u8c61\u7684\u7c7b\u522b metadata - \u5e2e\u52a9\u552f\u4e00\u6027\u6807\u8bc6\u5bf9\u8c61\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u5305\u62ec\u4e00\u4e2a name \u5b57\u7b26\u4e32\u3001UID \u548c\u53ef\u9009\u7684 namespace spec","title":"\u7406\u89e3 Kubernetes \u5bf9\u8c61"},{"location":"K8S/basic/#kubernetes_4","text":"\u7ba1\u7406\u6280\u5de7 \u547d\u4ee4\u5f0f \u7528\u6237\u5c06\u64cd\u4f5c\u4f20\u7ed9 kubectl \u547d\u4ee4\u4f5c\u4e3a\u53c2\u6570\u6216\u6807\u5fd7 \u4f8b\u5982\uff1akubectl run nginx --image nginx \u547d\u4ee4\u5f0f\u5bf9\u8c61\u914d\u7f6e kubectl \u547d\u4ee4\u6307\u5b9a\u64cd\u4f5c\uff08\u521b\u5efa\uff0c\u66ff\u6362\u7b49\uff09\uff0c\u53ef\u9009\u6807\u5fd7\u548c\u81f3\u5c11\u4e00\u4e2a\u6587\u4ef6\u540d\u3002\u6307\u5b9a\u7684\u6587\u4ef6\u5fc5\u987b\u5305\u542b YAML \u6216 JSON \u683c\u5f0f\u7684\u5bf9\u8c61\u7684\u5b8c\u6574\u5b9a\u4e49 \u4f8b\u5982\uff1akubectl apply -f application/deployment.yaml --record \u58f0\u660e\u5f0f\u5bf9\u8c61\u914d\u7f6e \u914d\u7f6e\u53ef\u4ee5\u5728\u76ee\u5f55\u4e0a\u5de5\u4f5c\uff0c\u6839\u636e\u76ee\u5f55\u4e2d\u914d\u7f6e\u6587\u4ef6\u5bf9\u4e0d\u540c\u7684\u5bf9\u8c61\u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c \u4f8b\u5982\uff1akubectl apply -f configs/","title":"Kubernetes \u5bf9\u8c61\u7ba1\u7406"},{"location":"K8S/basic/#ids","text":"\u540d\u79f0 \u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u540d\u79f0 \u6765\u6807\u8bc6\u5728\u540c\u7c7b\u8d44\u6e90\u4e2d\u7684\u552f\u4e00\u6027 \u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\uff0c\u5f15\u7528\u8d44\u6e90 url \u4e2d\u7684\u5bf9\u8c61\uff0c\u5982/api/v1/pods/some name UID Kubernetes \u7cfb\u7edf\u751f\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u552f\u4e00\u6807\u8bc6\u5bf9\u8c61","title":"\u5bf9\u8c61\u540d\u79f0\u548c IDs"},{"location":"K8S/basic/#_2","text":"Kubernetes \u652f\u6301\u591a\u4e2a\u865a\u62df\u96c6\u7fa4\uff0c\u5b83\u4eec\u5e95\u5c42\u4f9d\u8d56\u4e8e\u540c\u4e00\u4e2a\u7269\u7406\u96c6\u7fa4\u3002 \u8fd9\u4e9b\u865a\u62df\u96c6\u7fa4\u88ab\u79f0\u4e3a\u547d\u540d\u7a7a\u95f4 \u547d\u540d\u7a7a\u95f4\u4e3a\u540d\u79f0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8303\u56f4\u3002\u8d44\u6e90\u7684\u540d\u79f0\u9700\u8981\u5728\u547d\u540d\u7a7a\u95f4\u5185\u662f\u552f\u4e00\u7684\uff0c\u4f46\u4e0d\u80fd\u8de8\u547d\u540d\u7a7a\u95f4\uff0c\u4e5f\u4e0d\u80fd\u76f8\u4e92\u5d4c\u5957 \u521d\u59cb\u547d\u540d\u7a7a\u95f4 default \u6ca1\u6709\u6307\u660e\u4f7f\u7528\u5176\u5b83\u547d\u540d\u7a7a\u95f4\u7684\u5bf9\u8c61\u6240\u4f7f\u7528\u7684\u9ed8\u8ba4\u547d\u540d\u7a7a\u95f4 kube-system Kubernetes \u7cfb\u7edf\u521b\u5efa\u5bf9\u8c61\u6240\u4f7f\u7528\u7684\u547d\u540d\u7a7a\u95f4 kube-public \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u662f\u81ea\u52a8\u521b\u5efa\u7684\uff0c\u6240\u6709\u7528\u6237\uff08\u5305\u62ec\u672a\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\uff09\u90fd\u53ef\u4ee5\u8bfb\u53d6\u5b83\u3002 \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e3b\u8981\u7528\u4e8e\u96c6\u7fa4\u4f7f\u7528\uff0c\u4ee5\u9632\u67d0\u4e9b\u8d44\u6e90\u5728\u6574\u4e2a\u96c6\u7fa4\u4e2d\u5e94\u8be5\u662f\u53ef\u89c1\u548c\u53ef\u8bfb\u7684\u3002 \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u7684\u516c\u5171\u65b9\u9762\u53ea\u662f\u4e00\u79cd\u7ea6\u5b9a\uff0c\u800c\u4e0d\u662f\u8981\u6c42\u3002 kube-node-lease \u6b64\u547d\u540d\u7a7a\u95f4\u7528\u4e8e\u4e0e\u5404\u4e2a\u8282\u70b9\u76f8\u5173\u7684\u79df\u671f\uff08Lease\uff09\u5bf9\u8c61\uff1b \u6b64\u5bf9\u8c61\u7684\u8bbe\u8ba1\u4f7f\u5f97\u96c6\u7fa4\u89c4\u6a21\u5f88\u5927\u65f6\u8282\u70b9\u5fc3\u8df3\u68c0\u6d4b\u6027\u80fd\u5f97\u5230\u63d0\u5347 \u4f7f\u7528 \u67e5\u770b kubectl get namespace \u8bbe\u7f6e kubectl run nginx --image=nginx --namespace=<\u547d\u540d\u7a7a\u95f4\u540d\u79f0> kubectl get pods --namespace=<\u547d\u540d\u7a7a\u95f4\u540d\u79f0> \u8bbe\u7f6e\u547d\u540d\u7a7a\u95f4\u504f\u597d----\u6c38\u4e45\u4fdd\u5b58\u547d\u540d\u7a7a\u95f4\uff0c\u4ee5\u7528\u4e8e\u5bf9\u5e94\u4e0a\u4e0b\u6587\u4e2d\u6240\u6709\u540e\u7eed kubectl \u547d\u4ee4 kubectl config set-context --current --namespace=<\u547d\u540d\u7a7a\u95f4\u540d\u79f0> \u547d\u540d\u7a7a\u95f4\u548c DNS \u521b\u5efa\u4e00\u4e2a Service \u65f6\uff0c Kubernetes \u4f1a\u521b\u5efa\u4e00\u4e2a\u76f8\u5e94\u7684 DNS \u6761\u76ee \u8be5\u6761\u76ee\u7684\u5f62\u5f0f\u662f <\u670d\u52a1\u540d\u79f0>.<\u547d\u540d\u7a7a\u95f4\u540d\u79f0>.svc.cluster.local\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u5bb9\u5668\u53ea\u4f7f\u7528 <\u670d\u52a1\u540d\u79f0>\uff0c\u5b83\u5c06\u88ab\u89e3\u6790\u5230\u672c\u5730\u547d\u540d\u7a7a\u95f4\u7684\u670d\u52a1 \u5e76\u975e\u6240\u6709\u5bf9\u8c61\u90fd\u5728\u547d\u540d\u7a7a\u95f4\u4e2d \u67e5\u770b\u54ea\u4e9b Kubernetes \u8d44\u6e90\u5728\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u54ea\u4e9b\u4e0d\u5728\u547d\u540d\u7a7a\u95f4\u4e2d kubectl api-resources --namespaced=true kubectl api-resources --namespaced=false","title":"\u547d\u540d\u7a7a\u95f4"},{"location":"K8S/basic/#label-selector","text":"\u6807\u7b7e\uff08Labels\uff09 \u662f\u9644\u52a0\u5230 Kubernetes \u5bf9\u8c61\uff08\u6bd4\u5982 Pods\uff09\u4e0a\u7684\u952e\u503c\u5bf9\uff0c\u7528\u4e8e\u6307\u5b9a\u5bf9\u7528\u6237\u6709\u610f\u4e49\u4e14\u76f8\u5173\u7684\u5bf9\u8c61\u7684\u6807\u8bc6\u5c5e\u6027\uff0c\u4f46\u4e0d\u76f4\u63a5\u5bf9\u6838\u5fc3\u7cfb\u7edf\u6709\u8bed\u4e49\u542b\u4e49 apiVersion : v1 kind : Pod metadata : name : annotations-demo labels : env : dev spec : containers : - name : nginx image : nginx:1.7.9 ports : - containerPort : 80 Selector \u901a\u8fc7 Selector\uff0c\u7528\u6237\u53ef\u4ee5\u8bc6\u522b\u4e00\u7ec4\u5bf9\u8c61 \u57fa\u4e8e\u7b49\u503c\u7684\u9009\u62e9\u5668 \u8fd0\u7b97\u7b26\u6709=\u3001== \u548c != \u5982 env=dev \u57fa\u4e8e\u96c6\u5408\u7684\u9009\u62e9\u5668 \u64cd\u4f5c\u7b26\uff1ain\u3001notin \u548c exists \u5982 env in (dev, qa) API kubectl get pods -l env=dev kubectl get pods -l 'env in (production, qa),tier in (frontend)' \u63a8\u8350\u4f7f\u7528\u7684\u6807\u7b7e \u952e \u63cf\u8ff0 \u793a\u4f8b \u7c7b\u578b app.kubernetes.io/name \u5e94\u7528\u7a0b\u5e8f\u7684\u540d\u79f0 mysql \u5b57\u7b26\u4e32 app.kubernetes.io/instance \u7528\u4e8e\u552f\u4e00\u786e\u5b9a\u5e94\u7528\u5b9e\u4f8b\u7684\u540d\u79f0 mysql-abcxzy \u5b57\u7b26\u4e32 app.kubernetes.io/version \u5e94\u7528\u7a0b\u5e8f\u7684\u5f53\u524d\u7248\u672c\uff08\u4f8b\u5982\uff0c\u8bed\u4e49\u7248\u672c\uff0c\u4fee\u8ba2\u7248\u54c8\u5e0c\u7b49\uff09 5.7.21 \u5b57\u7b26\u4e32 app.kubernetes.io/component \u67b6\u6784\u4e2d\u7684\u7ec4\u4ef6 database \u5b57\u7b26\u4e32 app.kubernetes.io/part-of \u6b64\u7ea7\u522b\u7684\u66f4\u9ad8\u7ea7\u522b\u5e94\u7528\u7a0b\u5e8f\u7684\u540d\u79f0 wordpress \u5b57\u7b26\u4e32 app.kubernetes.io/managed-by \u7528\u4e8e\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u5de5\u5177 helm \u5b57\u7b26\u4e32","title":"Label \u4e0e Selector"},{"location":"K8S/basic/#_3","text":"\u4e3a\u5bf9\u8c61\u9644\u52a0\u4efb\u610f\u7684\u975e\u6807\u8bc6\u7684\u5143\u6570\u636e apiVersion : v1 kind : Pod metadata : name : annotations-demo annotations : imageregistry : \"https://hub.docker.com/\" spec : containers : - name : nginx image : nginx:1.7.9 ports : - containerPort : 80","title":"\u6ce8\u89e3"},{"location":"K8S/basic/#field-selectors","text":"\u5141\u8bb8\u4f60\u6839\u636e\u4e00\u4e2a\u6216\u591a\u4e2a\u8d44\u6e90\u5b57\u6bb5\u7684\u503c \u7b5b\u9009 Kubernetes \u8d44\u6e90\uff0c\u4f8b\u5982 metadata.name=my-service metadata.namespace!=default status.phase=Pending kubectl get pods --field-selector status.phase=Running \u652f\u6301\u7684\u5b57\u6bb5 \u6240\u6709\u8d44\u6e90\u7c7b\u578b\u90fd\u652f\u6301 metadata.name \u548c metadata.namespace \u5b57\u6bb5 \u652f\u6301\u7684\u64cd\u4f5c\u7b26 =\u3001==\u548c != \u94fe\u5f0f\u9009\u62e9\u5668 kubectl get pods --field-selector=status.phase!=Running,spec.restartPolicy=Always \u591a\u79cd\u8d44\u6e90\u7c7b\u578b kubectl get statefulsets,services --all-namespaces --field-selector metadata.namespace!=default","title":"\u5b57\u6bb5\u9009\u62e9\u5668\uff08Field selectors\uff09"},{"location":"K8S/basic/#kubernetes_5","text":"","title":"Kubernetes \u67b6\u6784"},{"location":"K8S/basic/#_4","text":"","title":"\u8282\u70b9"},{"location":"K8S/basic/#_5","text":"\u8282\u70b9\u53ef\u4ee5\u662f\u4e00\u4e2a\u865a\u62df\u673a\u6216\u8005\u7269\u7406\u673a\u5668\uff0c\u53d6\u51b3\u4e8e\u6240\u5728\u7684\u96c6\u7fa4\u914d\u7f6e \u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u7528\u4e8e\u8fd0\u884c Pod\uff08\u5bb9\u5668\u8fd0\u884c\u4e8e Pod \u4e2d\uff09 \u6240\u9700\u8981\u7684\u670d\u52a1\uff0c\u8fd9\u4e9b\u670d\u52a1\u7531 \u63a7\u5236\u5c42\u8d1f\u8d23\u7ba1\u7406 \u8282\u70b9\u4e0a\u7684\u7ec4\u4ef6\u5305\u62ec kubelet\u3001 Container Runtime \u4ee5\u53ca kube-proxy","title":"\u6982\u5ff5"},{"location":"K8S/basic/#_6","text":"\u5411 API Server \u6dfb\u52a0\u8282\u70b9\u7684\u65b9\u5f0f\u4e3b\u8981\u6709\u4e24\u79cd \u8282\u70b9\u4e0a\u7684 kubelet \u5411\u63a7\u5236\u9762\u6267\u884c\u81ea\u6ce8\u518c \u624b\u52a8\u6ce8\u518c \u4f8b\u5982\u4f7f\u7528\u4e0b\u9762\u7684 JSON \u5bf9\u8c61\u6765\u521b\u5efa Node \u5bf9\u8c61 { \"kind\" : \"Node\" , \"apiVersion\" : \"v1\" , \"metadata\" : { \"name\" : \"10.240.79.157\" , \"labels\" : { \"name\" : \"my-first-k8s-node\" } } } Kubernetes \u4f1a\u5728\u5185\u90e8\u521b\u5efa\u4e00\u4e2a Node \u5bf9\u8c61\u4f5c\u4e3a\u8282\u70b9\u7684\u8868\u793a\u3002Kubernetes \u68c0\u67e5 kubelet \u5411 API \u670d\u52a1\u5668\u6ce8\u518c\u8282\u70b9\u65f6\u4f7f\u7528\u7684 metadata.name \u5b57\u6bb5\u662f\u5426\u5339\u914d \u8282\u70b9\u81ea\u6ce8\u518c \u5f53 kubelet \u6807\u5fd7 --register-node \u4e3a true\uff08\u9ed8\u8ba4\uff09\u65f6\uff0c\u5b83\u4f1a\u5c1d\u8bd5\u5411 API \u670d\u52a1\u6ce8\u518c\u81ea\u5df1 \u5bf9\u4e8e\u81ea\u6ce8\u518c\u6a21\u5f0f\uff0ckubelet \u4f7f\u7528\u4e0b\u5217\u53c2\u6570\u542f\u52a8 --kubeconfig - \u7528\u4e8e\u5411 API \u670d\u52a1\u5668\u8868\u660e\u8eab\u4efd\u7684\u51ed\u636e\u8def\u5f84 --cloud-provider - \u4e0e\u67d0\u4e91\u9a71\u52a8 \u8fdb\u884c\u901a\u4fe1\u4ee5\u8bfb\u53d6\u4e0e\u81ea\u8eab\u76f8\u5173\u7684\u5143\u6570\u636e\u7684\u65b9\u5f0f --register-node - \u81ea\u52a8\u5411 API \u670d\u52a1\u6ce8\u518c --register-with-taints - \u4f7f\u7528\u6240\u7ed9\u7684\u6c61\u70b9\u5217\u8868\uff08\u9017\u53f7\u5206\u9694\u7684 = : \uff09\u6ce8\u518c\u8282\u70b9\u3002 \u5f53 register-node \u4e3a false \u65f6\u65e0\u6548 --node-ip - \u8282\u70b9 IP \u5730\u5740 --node-labels - \u5728\u96c6\u7fa4\u4e2d\u6ce8\u518c\u8282\u70b9\u65f6\u8981\u6dfb\u52a0\u7684 \u6807\u7b7e\u3002 \uff08\u53c2\u89c1 NodeRestriction \u51c6\u5165\u63a7\u5236\u63d2\u4ef6\u6240\u5b9e\u65bd\u7684\u6807\u7b7e\u9650\u5236\uff09 --node-status-update-frequency - \u6307\u5b9a kubelet \u5411\u63a7\u5236\u9762\u53d1\u9001\u72b6\u6001\u7684\u9891\u7387 \u624b\u52a8\u8282\u70b9\u7ba1\u7406 \u624b\u52a8\u521b\u5efa\u8282\u70b9\u5bf9\u8c61\u65f6\uff0c\u8bbe\u7f6e kubelet \u6807\u5fd7 --register-node=false kubectl cordon \u4f1a\u5c06\u8282\u70b9\u6807\u8bb0\u4e3a\u201c\u4e0d\u53ef\u8c03\u5ea6\uff08Unschedulable\uff09 \u8282\u70b9\u72b6\u6001 \u4e2a\u8282\u70b9\u7684\u72b6\u6001\u5305\u542b\u4ee5\u4e0b\u4fe1\u606f\uff0c\u67e5\u8be2\u547d\u4ee4\uff1akubectl describe node <\u8282\u70b9\u540d\u79f0> \u5730\u5740 HostName\uff1a\u7531\u8282\u70b9\u7684\u5185\u6838\u8bbe\u7f6e\u3002\u53ef\u4ee5\u901a\u8fc7 kubelet \u7684 --hostname-override \u53c2\u6570\u8986\u76d6\u3002 ExternalIP\uff1a\u901a\u5e38\u662f\u8282\u70b9\u7684\u53ef\u5916\u90e8\u8def\u7531\uff08\u4ece\u96c6\u7fa4\u5916\u53ef\u8bbf\u95ee\uff09\u7684 IP \u5730\u5740\u3002 InternalIP\uff1a\u901a\u5e38\u662f\u8282\u70b9\u7684\u4ec5\u53ef\u5728\u96c6\u7fa4\u5185\u90e8\u8def\u7531\u7684 IP \u5730\u5740\u3002 \u72b6\u51b5\uff08conditions\uff09\uff1a\u63cf\u8ff0\u4e86\u6240\u6709 Running \u8282\u70b9\u7684\u72b6\u6001 \u5bb9\u91cf\u4e0e\u53ef\u5206\u914d \u4fe1\u606f","title":"\u7ba1\u7406"},{"location":"K8S/basic/#_7","text":"\u8282\u70b9\u5230\u63a7\u5236\u5c42 \u60f3\u8981\u8fde\u63a5\u5230 apiserver \u7684 Pod \u53ef\u4ee5\u4f7f\u7528\u670d\u52a1\u8d26\u53f7\u5b89\u5168\u5730\u8fdb\u884c\u8fde\u63a5\u3002 \u5f53 Pod \u88ab\u5b9e\u4f8b\u5316\u65f6\uff0cKubernetes \u81ea\u52a8\u628a\u516c\u5171\u6839\u8bc1\u4e66\u548c\u4e00\u4e2a\u6709\u6548\u7684\u6301\u6709\u8005\u4ee4\u724c\u6ce8\u5165\u5230 Pod \u91cc kubernetes \u670d\u52a1\uff08\u4f4d\u4e8e\u6240\u6709\u547d\u540d\u7a7a\u95f4\u4e2d\uff09\u914d\u7f6e\u4e86\u4e00\u4e2a\u865a\u62df IP \u5730\u5740\uff0c\u7528\u4e8e\uff08\u901a\u8fc7 kube-proxy\uff09\u8f6c\u53d1 \u8bf7\u6c42\u5230 apiserver \u7684 HTTPS \u672b\u7aef \u63a7\u5236\u5c42\u5230\u8282\u70b9 \u6709\u4e24\u79cd\u4e3b\u8981\u7684\u901a\u4fe1\u8def\u5f84 \u4ece apiserver \u5230\u96c6\u7fa4\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u7684 kubelet \u8fdb\u7a0b \u7528\u4e8e \u83b7\u53d6 Pod \u65e5\u5fd7 \u6302\u63a5\uff08\u901a\u8fc7 kubectl\uff09\u5230\u8fd0\u884c\u4e2d\u7684 Pod \u63d0\u4f9b kubelet \u7684\u7aef\u53e3\u8f6c\u53d1\u529f\u80fd \u4ece apiserver \u901a\u8fc7\u5b83\u7684\u4ee3\u7406\u529f\u80fd\u8fde\u63a5\u5230\u4efb\u4f55\u8282\u70b9\u3001Pod \u6216\u8005\u670d\u52a1 \u9ed8\u8ba4\u4e3a\u7eaf HTTP \u65b9\u5f0f\uff0c\u56e0\u6b64\u65e2\u6ca1\u6709\u8ba4\u8bc1\uff0c\u4e5f\u6ca1\u6709\u52a0\u5bc6 \u5176\u4ed6\u65b9\u5f0f SSH \u96a7\u9053\uff08\u76ee\u524d\u5df2\u88ab\u5e9f\u5f03\uff09 apiserver \u5efa\u7acb\u4e00\u4e2a\u5230\u96c6\u7fa4\u4e2d\u5404\u8282\u70b9\u7684 SSH \u96a7\u9053\uff08\u8fde\u63a5\u5230\u5728 22 \u7aef\u53e3\u76d1\u542c\u7684 SSH \u670d\u52a1\uff09 \u5e76\u901a\u8fc7\u8fd9\u4e2a\u96a7\u9053\u4f20\u8f93\u6240\u6709\u5230 kubelet\u3001\u8282\u70b9\u3001Pod \u6216\u670d\u52a1\u7684\u8bf7\u6c42 Konnectivity \u670d\u52a1 Konnectivity \u670d\u52a1\u63d0\u4f9b TCP \u5c42\u7684\u4ee3\u7406\uff0c\u4ee5\u4fbf\u652f\u6301\u4ece\u63a7\u5236\u9762\u5230\u96c6\u7fa4\u7684\u901a\u4fe1","title":"\u63a7\u5236\u5c42\u5230\u8282\u70b9\u901a\u4fe1"},{"location":"K8S/basic/#_8","text":"\u5728 Kubernetes \u4e2d\uff0c\u63a7\u5236\u5668\u901a\u8fc7\u76d1\u63a7\u96c6\u7fa4 \u7684\u516c\u5171\u72b6\u6001\uff0c\u5e76\u81f4\u529b\u4e8e\u5c06\u5f53\u524d\u72b6\u6001\u8f6c\u53d8\u4e3a\u671f\u671b\u7684\u72b6\u6001","title":"\u63a7\u5236\u5668"},{"location":"K8S/basic/#_9","text":"\u63a7\u5236\u5668\u6a21\u5f0f \u901a\u8fc7 API \u670d\u52a1\u5668\u6765\u63a7\u5236 Deployment \u63a7\u5236\u5668\u548c Job \u63a7\u5236\u5668\u662f Kubernetes \u5185\u7f6e\u63a7\u5236\u5668\u7684\u5178\u578b\u4f8b\u5b50\uff0c \u5185\u7f6e\u63a7\u5236\u5668\u901a\u8fc7\u548c\u96c6\u7fa4 API \u670d\u52a1\u5668\u4ea4\u4e92\u6765\u7ba1\u7406\u72b6\u6001 \u76f4\u63a5\u63a7\u5236 \u76f8\u6bd4 Job \u63a7\u5236\u5668\uff0c\u6709\u4e9b\u63a7\u5236\u5668\u9700\u8981\u5bf9\u96c6\u7fa4\u5916\u7684\u4e00\u4e9b\u4e1c\u897f\u8fdb\u884c\u4fee\u6539\uff0c\u548c\u5916\u90e8\u72b6\u6001\u4ea4\u4e92\u7684\u63a7\u5236\u5668\u4ece API \u670d\u52a1\u5668\u83b7\u53d6\u5230\u5b83\u60f3\u8981\u7684\u72b6\u6001\uff0c\u7136\u540e\u76f4\u63a5\u548c\u5916\u90e8\u7cfb\u7edf\u8fdb\u884c\u901a\u4fe1 \u5e76\u4f7f\u5f53\u524d\u72b6\u6001\u66f4\u63a5\u8fd1\u671f\u671b\u72b6\u6001 \u8fd0\u884c\u63a7\u5236\u5668\u7684\u65b9\u5f0f Kubernetes \u5185\u7f6e\u4e00\u7ec4\u63a7\u5236\u5668\uff0c\u8fd0\u884c\u5728 kube-controller-manager \u5185\u3002 \u8fd9\u4e9b\u5185\u7f6e\u7684\u63a7\u5236\u5668\u63d0\u4f9b\u4e86\u91cd\u8981\u7684\u6838\u5fc3\u529f\u80fd Deployment \u63a7\u5236\u5668\u548c Job \u63a7\u5236\u5668\u662f Kubernetes \u5185\u7f6e\u63a7\u5236\u5668\u7684\u5178\u578b\u4f8b\u5b50","title":"\u63a7\u5236\u5668\u6a21\u5f0f"},{"location":"K8S/basic/#_10","text":"// TODO","title":"\u4e91\u63a7\u5236\u5668\u7ba1\u7406\u5668"},{"location":"K8S/basic/#_11","text":"","title":"\u5bb9\u5668"},{"location":"K8S/basic/#_12","text":"\u955c\u50cf\u62c9\u53d6\u7b56\u7565\uff08IfNotPresent\uff09 \u8bbe\u7f6e\u5bb9\u5668\u7684 imagePullPolicy \u4e3a Always \u7701\u7565 imagePullPolicy\uff0c\u5e76\u4f7f\u7528 :latest \u4f5c\u4e3a\u8981\u4f7f\u7528\u7684\u955c\u50cf\u7684\u6807\u7b7e \u7701\u7565 imagePullPolicy \u548c\u8981\u4f7f\u7528\u7684\u955c\u50cf\u6807\u7b7e \u542f\u7528 AlwaysPullImages \u51c6\u5165\u63a7\u5236\u5668\uff08Admission Controller\uff09 \u4f7f\u7528\u79c1\u6709\u4ed3\u5e93 \u914d\u7f6e Node \u5bf9\u79c1\u6709\u4ed3\u5e93\u8ba4\u8bc1 Docker \u5c06\u79c1\u6709\u4ed3\u5e93\u7684\u5bc6\u94a5\u4fdd\u5b58\u5728 $HOME/.dockercfg \u6216 $HOME/.docker/config.json \u6587\u4ef6\u4e2d\uff0ckubelet \u4f1a\u5728\u62c9\u53d6\u955c\u50cf\u65f6\u5c06\u5176\u7528\u4f5c\u51ed\u636e\u6570\u636e\u6765\u6e90 \u521b\u5efa\u4f7f\u7528\u79c1\u6709\u955c\u50cf\u7684 Pod \u6765\u9a8c\u8bc1\uff0c\u4f8b\u5982 kubectl apply -f - <<EOF apiVersion: v1 kind: Pod metadata: name: private-image-test-1 spec: containers: - name: uses-private-image image: $PRIVATE_IMAGE_NAME imagePullPolicy: Always command: [ \"echo\", \"SUCCESS\" ] EOF \u4f7f\u7528 Docker Config \u521b\u5efa Secret kubectl create secret docker-registry <\u540d\u79f0> \\ --docker-server = DOCKER_REGISTRY_SERVER \\ --docker-username = DOCKER_USER \\ --docker-password = DOCKER_PASSWORD \\ --docker-email = DOCKER_EMAIL \u5728 Pod \u4e2d\u5f15\u7528 ImagePullSecrets cat <<EOF > pod.yaml apiVersion: v1 kind: Pod metadata: name: foo namespace: awesomeapps spec: containers: - name: foo image: janedoe/awesomeapp:v1 imagePullSecrets: - name: myregistrykey EOF cat <<EOF >> ./kustomization.yaml resources: - pod.yaml EOF","title":"\u955c\u50cf"},{"location":"K8S/basic/#_13","text":"\u5bb9\u5668\u73af\u5883\u7ed9\u5bb9\u5668\u63d0\u4f9b\u4e86\u51e0\u4e2a\u91cd\u8981\u7684\u8d44\u6e90 \u6587\u4ef6\u7cfb\u7edf\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u955c\u50cf \u548c\u4e00\u4e2a\u6216\u591a\u4e2a\u7684\u5377 \u5bb9\u5668\u81ea\u8eab\u7684\u4fe1\u606f \u96c6\u7fa4\u4e2d\u5176\u4ed6\u5bf9\u8c61\u7684\u4fe1\u606f","title":"\u5bb9\u5668\u73af\u5883"},{"location":"K8S/basic/#runtime-class","text":"RuntimeClass \u662f\u4e00\u4e2a\u7528\u4e8e\u9009\u62e9\u5bb9\u5668\u8fd0\u884c\u65f6\u914d\u7f6e\u7684\u7279\u6027\uff0c\u5bb9\u5668\u8fd0\u884c\u65f6\u914d\u7f6e\u7528\u4e8e\u8fd0\u884c Pod \u4e2d\u7684\u5bb9\u5668 \u53ef\u4ee5\u5728\u4e0d\u540c\u7684 Pod \u8bbe\u7f6e\u4e0d\u540c\u7684 RuntimeClass\uff0c\u4ee5\u63d0\u4f9b\u6027\u80fd\u4e0e\u5b89\u5168\u6027\u4e4b\u95f4\u7684\u5e73\u8861\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u7684\u90e8\u5206\u5de5\u4f5c\u8d1f\u8f7d\u9700\u8981\u9ad8\u7ea7\u522b\u7684\u4fe1\u606f\u5b89\u5168\u4fdd\u8bc1\uff0c\u4f60\u53ef\u4ee5\u51b3\u5b9a\u5728\u8c03\u5ea6\u8fd9\u4e9b Pod \u65f6\u5c3d\u91cf\u4f7f\u5b83\u4eec\u5728\u4f7f\u7528\u786c\u4ef6\u865a\u62df\u5316\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\u4e2d\u8fd0\u884c \u8bbe\u7f6e \u5728\u8282\u70b9\u4e0a\u914d\u7f6e CRI \u5b9e\u73b0 RuntimeClass \u7684\u914d\u7f6e\u4f9d\u8d56\u4e8e \u8fd0\u884c\u65f6\u63a5\u53e3\uff08CRI\uff09\u7684\u5b9e\u73b0\uff0c\u6240\u6709\u8fd9\u4e9b\u914d\u7f6e\u90fd\u5177\u6709\u76f8\u5e94\u7684 handler \u540d\uff0c\u5e76\u88ab RuntimeClass \u5f15\u7528 \u521b\u5efa\u76f8\u5e94\u7684 RuntimeClass \u8d44\u6e90 \u5b9a\u4e49 apiVersion : node.k8s.io/v1beta1 # RuntimeClass \u5b9a\u4e49\u4e8e node.k8s.io API \u7ec4 kind : RuntimeClass metadata : name : myclass # \u7528\u6765\u5f15\u7528 RuntimeClass \u7684\u540d\u5b57 # RuntimeClass \u662f\u4e00\u4e2a\u96c6\u7fa4\u5c42\u9762\u7684\u8d44\u6e90 handler : myconfiguration # \u5bf9\u5e94\u7684 CRI \u914d\u7f6e\u7684\u540d\u79f0 \u4f7f\u7528\u8bf4\u660e \u5728 Pod spec \u4e2d\u6307\u5b9a runtimeClassName \u5373\u53ef\uff0c\u8fd9\u4e00\u8bbe\u7f6e\u4f1a\u544a\u8bc9 kubelet \u4f7f\u7528\u6240\u6307\u7684 RuntimeClass \u6765\u8fd0\u884c\u8be5 pod apiVersion : v1 kind : Pod metadata : name : mypod spec : runtimeClassName : myclass # ... CRI \u914d\u7f6e","title":"\u5bb9\u5668\u8fd0\u884c\u65f6\u7c7b(Runtime Class)"},{"location":"K8S/basic/#_14","text":"\u5bb9\u5668\u56de\u8c03 PostStart \u8fd9\u4e2a\u56de\u8c03\u5728\u5bb9\u5668\u88ab\u521b\u5efa\u4e4b\u540e\u7acb\u5373\u88ab\u6267\u884c\u3002 \u4f46\u662f\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u56de\u8c03\u4f1a\u5728\u5bb9\u5668\u5165\u53e3\u70b9\uff08ENTRYPOINT\uff09\u4e4b\u524d\u6267\u884c\u3002 \u6ca1\u6709\u53c2\u6570\u4f20\u9012\u7ed9\u5904\u7406\u7a0b\u5e8f PreStop \u5728\u5bb9\u5668\u56e0 API \u8bf7\u6c42\u6216\u8005\u7ba1\u7406\u4e8b\u4ef6\uff08\u8bf8\u5982\u5b58\u6d3b\u6001\u63a2\u9488\u5931\u8d25\u3001\u8d44\u6e90\u62a2\u5360\u3001\u8d44\u6e90\u7ade\u4e89\u7b49\uff09\u800c\u88ab\u7ec8\u6b62\u4e4b\u524d\uff0c \u6b64\u56de\u8c03\u4f1a\u88ab\u8c03\u7528 \u5982\u679c\u5bb9\u5668\u5df2\u7ecf\u5904\u4e8e\u7ec8\u6b62\u6216\u8005\u5b8c\u6210\u72b6\u6001\uff0c\u5219\u5bf9 preStop \u56de\u8c03\u7684\u8c03\u7528\u5c06\u5931\u8d25 \u6b64\u8c03\u7528\u662f\u963b\u585e\u7684\uff0c\u4e5f\u662f\u540c\u6b65\u8c03\u7528\uff0c\u56e0\u6b64\u5fc5\u987b\u5728\u53d1\u51fa\u5220\u9664\u5bb9\u5668\u7684\u4fe1\u53f7\u4e4b\u524d\u5b8c\u6210 \u56de\u8c03\u5904\u7406\u7a0b\u5e8f\u7684\u5b9e\u73b0 Exec - \u5728\u5bb9\u5668\u7684 cgroups \u548c\u540d\u79f0\u7a7a\u95f4\u4e2d\u6267\u884c\u7279\u5b9a\u7684\u547d\u4ee4\uff08\u4f8b\u5982 pre-stop.sh\uff09\u3002 \u547d\u4ee4\u6240\u6d88\u8017\u7684\u8d44\u6e90\u8ba1\u5165\u5bb9\u5668\u7684\u8d44\u6e90\u6d88\u8017\u3002 HTTP - \u5bf9\u5bb9\u5668\u4e0a\u7684\u7279\u5b9a\u7aef\u70b9\u6267\u884c HTTP \u8bf7\u6c42\u3002 \u56de\u8c03\u5904\u7406\u7a0b\u5e8f\u6267\u884c Kubernetes \u7ba1\u7406\u7cfb\u7edf\u6839\u636e\u56de\u8c03\u52a8\u4f5c\u6267\u884c\u5176\u5904\u7406\u7a0b\u5e8f\uff0c exec \u548c tcpSocket \u5728\u5bb9\u5668\u5185\u6267\u884c\uff0c\u800c httpGet \u5219\u7531 kubelet \u8fdb\u7a0b\u6267\u884c \u56de\u8c03\u5904\u7406\u7a0b\u5e8f\u5c3d\u53ef\u80fd\u7684\u8f7b\u91cf\u7ea7\uff0c\u9700\u8981\u8003\u8651\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u60c5\u51b5 \u56de\u8c03\u9012\u9001\u4fdd\u8bc1 \u56de\u8c03\u7684\u9012\u9001\u5e94\u8be5\u662f \u81f3\u5c11\u4e00\u6b21\uff0c\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u7684\u4e8b\u4ef6\uff0c \u4f8b\u5982 PostStart \u6216 PreStop\uff0c\u56de\u8c03\u53ef\u4ee5\u88ab\u8c03\u7528\u591a\u6b21\u3002 \u5982\u4f55\u6b63\u786e\u5904\u7406\u88ab\u591a\u6b21\u8c03\u7528\u7684\u60c5\u51b5\uff0c\u662f\u56de\u8c03\u5b9e\u73b0\u6240\u8981\u8003\u8651\u7684\u95ee\u9898 \u8c03\u8bd5\u56de\u8c03\u5904\u7406\u7a0b\u5e8f \u56de\u8c03\u5904\u7406\u7a0b\u5e8f\u7684\u65e5\u5fd7\u4e0d\u4f1a\u5728 Pod \u4e8b\u4ef6\u4e2d\u516c\u5f00\u3002 \u5982\u679c\u5904\u7406\u7a0b\u5e8f\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u5931\u8d25\uff0c\u5b83\u5c06\u6dfb\u52a0\u4e00\u4e2a\u4e8b\u4ef6","title":"\u5bb9\u5668\u751f\u547d\u5468\u671f\u56de\u8c03"},{"location":"K8S/basic/#_15","text":"","title":"\u5de5\u4f5c\u8d1f\u8f7d"},{"location":"K8S/basic/#pods","text":"Pod \u662f\u53ef\u4ee5\u5728 Kubernetes \u4e2d\u521b\u5efa\u548c\u7ba1\u7406\u7684\u3001\u6700\u5c0f\u7684\u53ef\u90e8\u7f72\u7684\u8ba1\u7b97\u5355\u5143\uff1b\u662f\u4e00\u7ec4\uff08\u4e00\u4e2a\u6216\u591a\u4e2a\uff09 \u5bb9\u5668\uff0c\u8fd9\u4e9b\u5bb9\u5668\u5171\u4eab\u5b58\u50a8\u3001\u7f51\u7edc\u3001\u4ee5\u53ca\u600e\u6837\u8fd0\u884c\u8fd9\u4e9b\u5bb9\u5668\u7684\u58f0\u660e Pod \u7684\u5171\u4eab\u4e0a\u4e0b\u6587\u5305\u62ec\u4e00\u7ec4 Linux \u540d\u5b57\u7a7a\u95f4\u3001\u63a7\u5236\u7ec4\uff08cgroup\uff09\u548c\u53ef\u80fd\u4e00\u4e9b\u5176\u4ed6\u7684\u9694\u79bb \u65b9\u9762\uff0c\u5373\u7528\u6765\u9694\u79bb Docker \u5bb9\u5668\u7684\u6280\u672f Pod \u4e2d\u7684\u5185\u5bb9\u603b\u662f\u5e76\u7f6e\uff08colocated\uff09\u7684\u5e76\u4e14\u4e00\u540c\u8c03\u5ea6\uff0c\u5728\u5171\u4eab\u7684\u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c \u9664\u4e86\u5e94\u7528\u5bb9\u5668\uff0cPod \u8fd8\u53ef\u4ee5\u5305\u542b\u5728 Pod \u542f\u52a8\u671f\u95f4\u8fd0\u884c\u7684 Init \u5bb9\u5668\uff0cInit \u5bb9\u5668\u4f1a\u5728\u542f\u52a8\u5e94\u7528\u5bb9\u5668\u4e4b\u524d\u8fd0\u884c\u5e76\u5b8c\u6210","title":"Pods"},{"location":"K8S/basic/#pod","text":"\u4e0d\u9700\u8981\u76f4\u63a5\u521b\u5efa Pod\uff0c\u751a\u81f3\u5355\u5b9e\u4f8b Pod\uff0c \u800c\u662f\u4f1a\u4f7f\u7528\u8bf8\u5982 Deployment \u6216 Job \u8fd9\u7c7b\u5de5\u4f5c\u8d1f\u8f7d\u8d44\u6e90 \u6765\u521b\u5efa Pod\u3002\u5982\u679c Pod \u9700\u8981\u8ddf\u8e2a\u72b6\u6001\uff0c\u53ef\u4ee5\u8003\u8651 StatefulSet \u8d44\u6e90 Kubernetes \u96c6\u7fa4\u4e2d\u7684 Pod \u4e3b\u8981\u6709\u4e24\u79cd\u7528\u6cd5 \u8fd0\u884c\u5355\u4e2a\u5bb9\u5668\u7684 Pod \u6bcf\u4e2a Pod \u4e00\u4e2a\u5bb9\u5668\"\u6a21\u578b\u662f\u6700\u5e38\u89c1\u7684 Kubernetes \u7528\u4f8b\uff0cKubernetes \u76f4\u63a5\u7ba1\u7406 Pod\uff0c\u800c\u4e0d\u662f\u5bb9\u5668 \u8fd0\u884c\u591a\u4e2a\u534f\u540c\u5de5\u4f5c\u7684\u5bb9\u5668\u7684 Pod Pod \u53ef\u80fd\u5c01\u88c5\u7531\u591a\u4e2a\u7d27\u5bc6\u8026\u5408\u4e14\u9700\u8981\u5171\u4eab\u8d44\u6e90\u7684\u5171\u5904\u5bb9\u5668\u7ec4\u6210\u7684\u5e94\u7528\u7a0b\u5e8f Pod \u6a21\u7248 Pod \u6a21\u677f\u662f\u5305\u542b\u5728\u5de5\u4f5c\u8d1f\u8f7d\u5bf9\u8c61\u4e2d\u7684\u89c4\u8303\uff0c\u7528\u6765\u521b\u5efa Pod\u3002\u8fd9\u7c7b\u8d1f\u8f7d\u8d44\u6e90\u5305\u62ec Deployment\u3001 Job \u548c DaemonSets \u7b49 \u5de5\u4f5c\u8d1f\u8f7d\u7684\u63a7\u5236\u5668\u4f1a\u4f7f\u7528\u8d1f\u8f7d\u5bf9\u8c61\u4e2d\u7684 PodTemplate \u6765\u751f\u6210\u5b9e\u9645\u7684 Pod apiVersion : batch/v1 kind : Job metadata : name : hello spec : template : # \u8fd9\u91cc\u662f Pod \u6a21\u7248 spec : containers : - name : hello image : busybox command : [ \"sh\" , \"-c\" , 'echo \"Hello, Kubernetes!\" && sleep 3600' ] restartPolicy : OnFailure # \u4ee5\u4e0a\u4e3a Pod \u6a21\u7248 \u8d44\u6e90\u5171\u4eab\u548c\u901a\u4fe1 Pod \u4f7f\u5b83\u7684\u6210\u5458\u5bb9\u5668\u95f4\u80fd\u591f\u8fdb\u884c\u6570\u636e\u5171\u4eab\u548c\u901a\u4fe1 Pod \u4e2d\u7684\u5b58\u50a8 \u4e00\u4e2a Pod \u53ef\u4ee5\u8bbe\u7f6e\u4e00\u7ec4\u5171\u4eab\u7684\u5b58\u50a8\u5377 Pod \u8054\u7f51 \u6bcf\u4e2a Pod \u90fd\u5728\u6bcf\u4e2a\u5730\u5740\u65cf\u4e2d\u83b7\u5f97\u4e00\u4e2a\u552f\u4e00\u7684 IP \u5730\u5740\u3002 Pod \u4e2d\u7684\u6bcf\u4e2a\u5bb9\u5668\u5171\u4eab\u7f51\u7edc\u540d\u5b57\u7a7a\u95f4\uff0c\u5305\u62ec IP \u5730\u5740\u548c\u7f51\u7edc\u7aef\u53e3 Pod \u5185 \u7684\u5bb9\u5668\u53ef\u4ee5\u4f7f\u7528 localhost \u4e92\u76f8\u901a\u4fe1\u3002 \u5f53 Pod \u4e2d\u7684\u5bb9\u5668\u4e0e Pod \u4e4b\u5916 \u7684\u5b9e\u4f53\u901a\u4fe1\u65f6\uff0c\u5b83\u4eec\u5fc5\u987b\u534f\u8c03\u5982\u4f55\u4f7f\u7528\u5171\u4eab\u7684\u7f51\u7edc\u8d44\u6e90 \uff08\u4f8b\u5982\u7aef\u53e3\uff09","title":"\u4f7f\u7528 Pod"},{"location":"K8S/basic/#pod_1","text":"\u9759\u6001 Pod \u901a\u5e38\u7ed1\u5b9a\u5230\u67d0\u4e2a\u8282\u70b9\u4e0a\u7684 kubelet kubelet \u81ea\u52a8\u5c1d\u8bd5\u4e3a\u6bcf\u4e2a\u9759\u6001 Pod \u5728 Kubernetes API \u670d\u52a1\u5668\u4e0a\u521b\u5efa\u4e00\u4e2a \u955c\u50cf Pod\u3002 \u8fd9\u610f\u5473\u7740\u5728\u8282\u70b9\u4e0a\u8fd0\u884c\u7684 Pod \u5728 API \u670d\u52a1\u5668\u4e0a\u662f\u53ef\u89c1\u7684\uff0c\u4f46\u4e0d\u53ef\u4ee5\u901a\u8fc7 API \u670d\u52a1\u5668\u6765\u63a7\u5236","title":"\u9759\u6001 Pod"},{"location":"K8S/basic/#pod_2","text":"Pod \u4e2d\u7684\u5bb9\u5668\u88ab\u81ea\u52a8\u5b89\u6392\u5230\u96c6\u7fa4\u4e2d\u7684\u540c\u4e00\u7269\u7406\u673a\u6216\u865a\u62df\u673a\u4e0a\uff0c\u5e76\u53ef\u4ee5\u4e00\u8d77\u8fdb\u884c\u8c03\u5ea6\u3002 \u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u5171\u4eab\u8d44\u6e90\u548c\u4f9d\u8d56\u3001\u5f7c\u6b64\u901a\u4fe1\u3001\u534f\u8c03\u4f55\u65f6\u4ee5\u53ca\u4f55\u79cd\u65b9\u5f0f\u7ec8\u6b62\u81ea\u8eab","title":"Pod \u600e\u6837\u7ba1\u7406\u591a\u4e2a\u5bb9\u5668"},{"location":"K8S/basic/#pod_3","text":"Pod \u9636\u6bb5 PodStatus.phase Pending\uff08\u60ac\u51b3\uff09 Pod \u5df2\u88ab Kubernetes \u7cfb\u7edf\u63a5\u53d7\uff0c\u4f46\u6709\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5bb9\u5668\u5c1a\u672a\u521b\u5efa\u4ea6\u672a\u8fd0\u884c\u3002\u6b64\u9636\u6bb5\u5305\u62ec\u7b49\u5f85 Pod \u88ab\u8c03\u5ea6\u7684\u65f6\u95f4\u548c\u901a\u8fc7\u7f51\u7edc\u4e0b\u8f7d\u955c\u50cf\u7684\u65f6\u95f4\uff0c Running\uff08\u8fd0\u884c\u4e2d\uff09 Pod \u5df2\u7ecf\u7ed1\u5b9a\u5230\u4e86\u67d0\u4e2a\u8282\u70b9\uff0cPod \u4e2d\u6240\u6709\u7684\u5bb9\u5668\u90fd\u5df2\u88ab\u521b\u5efa\u3002\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u4ecd\u5728\u8fd0\u884c\uff0c\u6216\u8005\u6b63\u5904\u4e8e\u542f\u52a8\u6216\u91cd\u542f\u72b6\u6001\u3002 Succeeded\uff08\u6210\u529f\uff09 Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u5df2\u6210\u529f\u7ec8\u6b62\uff0c\u5e76\u4e14\u4e0d\u4f1a\u518d\u91cd\u542f\u3002 Failed\uff08\u5931\u8d25\uff09 Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u5df2\u7ec8\u6b62\uff0c\u5e76\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u662f\u56e0\u4e3a\u5931\u8d25\u7ec8\u6b62\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bb9\u5668\u4ee5\u975e 0 \u72b6\u6001\u9000\u51fa\u6216\u8005\u88ab\u7cfb\u7edf\u7ec8\u6b62\u3002 Unknown\uff08\u672a\u77e5\uff09 \u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\u65e0\u6cd5\u53d6\u5f97 Pod \u7684\u72b6\u6001\u3002\u8fd9\u79cd\u60c5\u51b5\u901a\u5e38\u662f\u56e0\u4e3a\u4e0e Pod \u6240\u5728\u4e3b\u673a\u901a\u4fe1\u5931\u8d25\u3002 \u5bb9\u5668\u72b6\u6001 Waiting \uff08\u7b49\u5f85\uff09\uff0c\u4ecd\u5728\u8fd0\u884c\u5b83\u5b8c\u6210\u542f\u52a8\u6240\u9700\u8981\u7684\u64cd\u4f5c Running\uff08\u8fd0\u884c\u4e2d\uff09\uff0c\u8868\u660e\u5bb9\u5668\u6b63\u5728\u6267\u884c\u72b6\u6001\u5e76\u4e14\u6ca1\u6709\u95ee\u9898\u53d1\u751f Terminated\uff08\u5df2\u7ec8\u6b62\uff09\uff0c\u5f00\u59cb\u6267\u884c\u5e76\u4e14\u6216\u8005\u6b63\u5e38\u7ed3\u675f\u6216\u8005\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\u5931\u8d25 \u5bb9\u5668\u91cd\u542f\u7b56\u7565 spec.restartPolicy\uff1aAlways\u3001OnFailure \u548c Never Pod \u72b6\u51b5 PodStatus.PodConditions PodScheduled\uff1aPod \u5df2\u7ecf\u88ab\u8c03\u5ea6\u5230\u67d0\u8282\u70b9\uff1b ContainersReady\uff1aPod \u4e2d\u6240\u6709\u5bb9\u5668\u90fd\u5df2\u5c31\u7eea\uff1b Initialized\uff1a\u6240\u6709\u7684 Init \u5bb9\u5668 \u90fd\u5df2\u6210\u529f\u542f\u52a8\uff1b Ready\uff1aPod \u53ef\u4ee5\u4e3a\u8bf7\u6c42\u63d0\u4f9b\u670d\u52a1\uff0c\u5e76\u4e14\u5e94\u8be5\u88ab\u6dfb\u52a0\u5230\u5bf9\u5e94\u670d\u52a1\u7684\u8d1f\u8f7d\u5747\u8861\u6c60\u4e2d\u3002 Pod \u5c31\u7eea\u6001 \u901a\u8fc7 spec.readinessGates \u4e3a kubelet \u63d0\u4f9b\u4e00\u7ec4\u989d\u5916\u7684\u72b6\u51b5 \u5c31\u7eea\u6001\u57fa\u4e8e Pod \u7684 status.conditions \u5b57\u6bb5\u7684\u5f53\u524d\u503c\u6765\u505a\u51b3\u5b9a kind : Pod --- spec : readinessGates : - conditionType : \"www.example.com/feature-1\" status : conditions : - type : Ready # \u5185\u7f6e\u7684 Pod \u72b6\u51b5 status : \"False\" lastProbeTime : null lastTransitionTime : 2018-01-01T00:00:00Z - type : \"www.example.com/feature-1\" # \u989d\u5916\u7684 Pod \u72b6\u51b5 status : \"False\" lastProbeTime : null lastTransitionTime : 2018-01-01T00:00:00Z containerStatuses : - containerID : docker://abcd... ready : true \u5bb9\u5668\u63a2\u9488 Probe \u662f\u7531 kubelet \u5bf9\u5bb9\u5668\u6267\u884c\u7684\u5b9a\u671f\u8bca\u65ad\uff1b\u8981\u6267\u884c\u8bca\u65ad\uff0ckubelet \u8c03\u7528\u7531\u5bb9\u5668\u5b9e\u73b0\u7684 Handler \uff08\u5904\u7406\u7a0b\u5e8f\uff09\u3002\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u5904\u7406\u7a0b\u5e8f ExecAction\uff1a \u5728\u5bb9\u5668\u5185\u6267\u884c\u6307\u5b9a\u547d\u4ee4\u3002\u5982\u679c\u547d\u4ee4\u9000\u51fa\u65f6\u8fd4\u56de\u7801\u4e3a 0 \u5219\u8ba4\u4e3a\u8bca\u65ad\u6210\u529f\u3002 TCPSocketAction\uff1a \u5bf9\u5bb9\u5668\u7684 IP \u5730\u5740\u4e0a\u7684\u6307\u5b9a\u7aef\u53e3\u6267\u884c TCP \u68c0\u67e5\u3002\u5982\u679c\u7aef\u53e3\u6253\u5f00\uff0c\u5219\u8bca\u65ad\u88ab\u8ba4\u4e3a\u662f\u6210\u529f\u7684\u3002 HTTPGetAction\uff1a \u5bf9\u5bb9\u5668\u7684 IP \u5730\u5740\u4e0a\u6307\u5b9a\u7aef\u53e3\u548c\u8def\u5f84\u6267\u884c HTTP Get \u8bf7\u6c42\u3002\u5982\u679c\u54cd\u5e94\u7684\u72b6\u6001\u7801\u5927\u4e8e\u7b49\u4e8e 200 \u4e14\u5c0f\u4e8e 400\uff0c\u5219\u8bca\u65ad\u88ab\u8ba4\u4e3a\u662f\u6210\u529f\u7684\u3002 \u6bcf\u6b21\u63a2\u6d4b\u90fd\u5c06\u83b7\u5f97\u4ee5\u4e0b\u4e09\u79cd\u7ed3\u679c\u4e4b\u4e00\uff1a Success\uff08\u6210\u529f\uff09\uff1a\u5bb9\u5668\u901a\u8fc7\u4e86\u8bca\u65ad\u3002 Failure\uff08\u5931\u8d25\uff09\uff1a\u5bb9\u5668\u672a\u901a\u8fc7\u8bca\u65ad\u3002 Unknown\uff08\u672a\u77e5\uff09\uff1a\u8bca\u65ad\u5931\u8d25\uff0c\u56e0\u6b64\u4e0d\u4f1a\u91c7\u53d6\u4efb\u4f55\u884c\u52a8\u3002 \u63a2\u9488\u7c7b\u578b livenessProbe\uff1a\u6307\u793a\u5bb9\u5668\u662f\u5426\u6b63\u5728\u8fd0\u884c readinessProbe\uff1a\u6307\u793a\u5bb9\u5668\u662f\u5426\u51c6\u5907\u597d\u4e3a\u8bf7\u6c42\u63d0\u4f9b\u670d\u52a1 startupProbe: \u6307\u793a\u5bb9\u5668\u4e2d\u7684\u5e94\u7528\u662f\u5426\u5df2\u7ecf\u542f\u52a8 Pod \u7684\u7ec8\u6b62 \u4f53\u9762\u7684\u7ec8\u6b62 \u5bb9\u5668\u8fd0\u884c\u65f6\u4f1a\u53d1\u9001\u4e00\u4e2a TERM \u4fe1\u53f7\u5230\u6bcf\u4e2a\u5bb9\u5668\u4e2d\u7684\u4e3b\u8fdb\u7a0b\u3002 \u5f88\u591a\u5bb9\u5668\u8fd0\u884c\u65f6\u90fd\u80fd\u591f\u6ce8\u610f\u5230\u5bb9\u5668\u955c\u50cf\u4e2d STOPSIGNAL \u7684\u503c\uff0c\u5e76\u53d1\u9001\u8be5\u4fe1\u53f7\u800c\u4e0d\u662f TERM \u4e00\u65e6\u8d85\u51fa\u4e86\u4f53\u9762\u7ec8\u6b62\u9650\u671f\uff0c\u5bb9\u5668\u8fd0\u884c\u65f6\u4f1a\u5411\u6240\u6709\u5269\u4f59\u8fdb\u7a0b\u53d1\u9001 KILL \u4fe1\u53f7\uff0c\u4e4b\u540e Pod \u5c31\u4f1a\u88ab\u4ece API \u670d\u52a1\u5668 \u4e0a\u79fb\u9664 \u4f8b\u5982 \u4f7f\u7528 kubectl \u5de5\u5177\u624b\u52a8\u5220\u9664\u67d0\u4e2a\u7279\u5b9a\u7684 Pod\uff0c\u800c\u8be5 Pod \u7684\u4f53\u9762\u7ec8\u6b62\u9650\u671f\u662f\u9ed8\u8ba4\u503c\uff0830 \u79d2\uff09 API \u670d\u52a1\u5668\u4e2d\u7684 Pod \u5bf9\u8c61\u88ab\u66f4\u65b0\uff0c\u8bb0\u5f55\u6db5\u76d6\u4f53\u9762\u7ec8\u6b62\u9650\u671f\u5728\u5185 Pod \u7684\u6700\u7ec8\u6b7b\u671f\uff0c\u8d85\u51fa\u6240\u8ba1\u7b97\u65f6\u95f4\u70b9\u5219\u8ba4\u4e3a Pod \u5df2\u6b7b\uff08dead\uff09\uff1bdescribe \u4fe1\u606f\u4e2d Pod \u4f1a\u663e\u793a\u4e3a \"Terminating\" \uff08\u6b63\u5728\u7ec8\u6b62\uff09 \u5982\u679c Pod \u4e2d\u7684\u5bb9\u5668\u4e4b\u4e00\u5b9a\u4e49\u4e86 preStop \u56de\u8c03\uff0c kubelet \u5f00\u59cb\u5728\u5bb9\u5668\u5185\u8fd0\u884c\u8be5\u56de\u8c03\u903b\u8f91\u3002\u5982\u679c\u8d85\u51fa\u4f53\u9762\u7ec8\u6b62\u9650\u671f\u65f6\uff0cpreStop \u56de\u8c03\u903b\u8f91 \u4ecd\u5728\u8fd0\u884c\uff0ckubelet \u4f1a\u8bf7\u6c42\u7ed9\u4e88\u8be5 Pod \u7684\u5bbd\u9650\u671f\u4e00\u6b21\u6027\u589e\u52a0 2 \u79d2\u949f\uff1b\u5982\u679c preStop \u56de\u8c03\u6240\u9700\u8981\u7684\u65f6\u95f4\u957f\u4e8e\u9ed8\u8ba4\u7684\u4f53\u9762\u7ec8\u6b62\u9650\u671f\uff0c\u5fc5\u987b\u4fee\u6539 terminationGracePeriodSeconds \u5c5e\u6027\u503c\u6765\u4f7f\u5176\u6b63\u5e38\u5de5\u4f5c kubelet \u63a5\u4e0b\u6765\u89e6\u53d1\u5bb9\u5668\u8fd0\u884c\u65f6\u53d1\u9001 TERM \u4fe1\u53f7\u7ed9\u6bcf\u4e2a\u5bb9\u5668\u4e2d\u7684\u8fdb\u7a0b 1 \u4e0e\u6b64\u540c\u65f6\uff0ckubelet \u542f\u52a8\u4f53\u9762\u5173\u95ed\u903b\u8f91\uff0c\u63a7\u5236\u9762\u4f1a\u5c06 Pod \u4ece\u5bf9\u5e94\u7684\u7aef\u70b9\u5217\u8868\uff08\u4ee5\u53ca\u7aef\u70b9\u5207\u7247\u5217\u8868\uff0c \u5982\u679c\u542f\u7528\u4e86\u7684\u8bdd\uff09\u4e2d\u79fb\u9664\uff1bReplicaSets \u548c\u5176\u4ed6\u5de5\u4f5c\u8d1f\u8f7d\u8d44\u6e90 \u4e0d\u518d\u5c06\u5173\u95ed\u8fdb\u7a0b\u4e2d\u7684 Pod \u89c6\u4e3a\u5408\u6cd5\u7684\u3001\u80fd\u591f\u63d0\u4f9b\u670d\u52a1\u7684\u526f\u672c\u3002\u5173\u95ed\u52a8\u4f5c\u5f88\u6162\u7684 Pod \u4e5f\u65e0\u6cd5\u7ee7\u7eed\u5904\u7406\u8bf7\u6c42\u6570\u636e\uff0c\u56e0\u4e3a\u8d1f\u8f7d\u5747\u8861\u5668\uff08\u4f8b\u5982\u670d\u52a1\u4ee3\u7406\uff09\u5df2\u7ecf\u5728\u7ec8\u6b62\u5bbd\u9650\u671f\u5f00\u59cb\u7684\u65f6\u5019 \u5c06\u5176\u4ece\u7aef\u70b9\u5217\u8868\u4e2d\u79fb\u9664 \u8d85\u51fa\u7ec8\u6b62\u5bbd\u9650\u671f\u9650\u65f6\uff0ckubelet \u4f1a\u89e6\u53d1\u5f3a\u5236\u5173\u95ed\u8fc7\u7a0b\u3002\u5bb9\u5668\u8fd0\u884c\u65f6\u4f1a\u5411 Pod \u4e2d\u6240\u6709\u5bb9\u5668\u5185 \u4ecd\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u53d1\u9001 SIGKILL \u4fe1\u53f7\u3002 kubelet \u4e5f\u4f1a\u6e05\u7406\u9690\u85cf\u7684 pause \u5bb9\u5668\uff0c\u5982\u679c\u5bb9\u5668\u8fd0\u884c\u65f6\u4f7f\u7528\u4e86\u8fd9\u79cd\u5bb9\u5668\u7684\u8bdd kubelet \u89e6\u53d1\u5f3a\u5236\u4ece API \u670d\u52a1\u5668\u4e0a\u5220\u9664 Pod \u5bf9\u8c61\u7684\u903b\u8f91\uff0c\u5e76\u5c06\u4f53\u9762\u7ec8\u6b62\u9650\u671f\u8bbe\u7f6e\u4e3a 0 \uff08\u8fd9\u610f\u5473\u7740\u9a6c\u4e0a\u5220\u9664\uff09 API \u670d\u52a1\u5668\u5220\u9664 Pod \u7684 API \u5bf9\u8c61\uff0c\u4ece\u4efb\u4f55\u5ba2\u6237\u7aef\u90fd\u65e0\u6cd5\u518d\u770b\u5230\u8be5\u5bf9\u8c61 \u5f3a\u5236\u7ec8\u6b62 kubectl delete \u547d\u4ee4\u652f\u6301 --grace-period= \u9009\u9879\uff0c\u5141\u8bb8\u4f60\u91cd\u8f7d\u5bbd\u9650\u671f\u9650\u9ed8\u8ba4\u503c\uff0c \u8bbe\u5b9a\u81ea\u5df1\u5e0c\u671b\u7684\u671f\u9650\u503c \u5c06\u5bbd\u9650\u671f\u9650\u5f3a\u5236\u8bbe\u7f6e\u4e3a 0 \u610f\u5473\u7740\u7acb\u5373\u4ece API \u670d\u52a1\u5668\u5220\u9664 Pod\u3002 \u5982\u679c Pod \u4ecd\u7136\u8fd0\u884c\u4e8e\u67d0\u8282\u70b9\u4e0a\uff0c\u5f3a\u5236\u5220\u9664\u64cd\u4f5c\u4f1a\u89e6\u53d1 kubelet \u7acb\u5373\u6267\u884c\u6e05\u7406\u64cd\u4f5c\uff1b\u5fc5\u987b\u5728\u8bbe\u7f6e --grace-period=0 \u7684\u540c\u65f6\u989d\u5916\u8bbe\u7f6e --force \u53c2\u6570\u624d\u80fd\u53d1\u8d77\u5f3a\u5236\u5220\u9664\u8bf7\u6c42 \u6267\u884c\u5f3a\u5236\u5220\u9664\u64cd\u4f5c\u65f6\uff0cAPI \u670d\u52a1\u5668\u4e0d\u518d\u7b49\u5f85\u6765\u81ea kubelet \u7684\u3001\u5173\u4e8e Pod \u5df2\u7ecf\u5728\u539f\u6765\u8fd0\u884c\u7684\u8282\u70b9\u4e0a\u7ec8\u6b62\u6267\u884c\u7684\u786e\u8ba4\u6d88\u606f\u3002 API \u670d\u52a1\u5668\u76f4\u63a5\u5220\u9664 Pod \u5bf9\u8c61\uff0c\u8fd9\u6837\u65b0\u7684\u4e0e\u4e4b\u540c\u540d\u7684 Pod \u5373\u53ef\u4ee5\u88ab\u521b\u5efa\u3002 \u5728\u8282\u70b9\u4fa7\uff0c\u88ab\u8bbe\u7f6e\u4e3a\u7acb\u5373\u7ec8\u6b62\u7684 Pod \u4ecd\u7136\u4f1a\u5728\u88ab\u5f3a\u884c\u6740\u6b7b\u4e4b\u524d\u83b7\u5f97\u4e00\u70b9\u70b9\u7684\u5bbd\u9650\u65f6\u95f4 \u5931\u6548 Pod \u7684\u5783\u573e\u6536\u96c6 \u5bf9\u4e8e\u5df2\u5931\u8d25\u7684 Pod \u800c\u8a00\uff0c\u5bf9\u5e94\u7684 API \u5bf9\u8c61\u4ecd\u7136\u4f1a\u4fdd\u7559\u5728\u96c6\u7fa4\u7684 API \u670d\u52a1\u5668\u4e0a\uff0c\u76f4\u5230 \u7528\u6237\u6216\u8005\u63a7\u5236\u5668\u8fdb\u7a0b\u663e\u5f0f\u5730 \u5c06\u5176\u5220\u9664 \u63a7\u5236\u5c42\u7ec4\u4ef6\u4f1a\u5728 Pod \u4e2a\u6570\u8d85\u51fa\u6240\u914d\u7f6e\u7684\u9608\u503c \uff08\u6839\u636e kube-controller-manager \u7684 terminated-pod-gc-threshold \u8bbe\u7f6e\uff09\u65f6 \u5220\u9664\u5df2\u7ec8\u6b62\u7684 Pod","title":"Pod \u7684\u751f\u547d\u5468\u671f"},{"location":"K8S/basic/#init","text":"","title":"Init \u5bb9\u5668"},{"location":"K8S/basic/#init_1","text":"Pod \u4e5f\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u5148\u4e8e\u5e94\u7528\u5bb9\u5668\u542f\u52a8\u7684 Init \u5bb9\u5668 Init \u5bb9\u5668\u4e0e\u666e\u901a\u5bb9\u5668\u7684\u4e0d\u540c\u70b9 \u5b83\u4eec\u603b\u662f\u8fd0\u884c\u5230\u5b8c\u6210\u3002 \u6bcf\u4e2a\u90fd\u5fc5\u987b\u5728\u4e0b\u4e00\u4e2a\u542f\u52a8\u4e4b\u524d\u6210\u529f\u5b8c\u6210\u3002 Init \u5bb9\u5668\u4e0d\u652f\u6301 lifecycle\u3001livenessProbe\u3001readinessProbe \u548c startupProbe \u5982\u679c Pod \u7684 Init \u5bb9\u5668\u5931\u8d25\uff0ckubelet \u4f1a\u4e0d\u65ad\u5730\u91cd\u542f\u8be5 Init \u5bb9\u5668\u76f4\u5230\u8be5\u5bb9\u5668\u6210\u529f\u4e3a\u6b62\uff1b\u5982\u679c Pod \u5bf9\u5e94\u7684 restartPolicy \u503c\u4e3a \"Never\"\uff0cKubernetes \u4e0d\u4f1a\u91cd\u65b0\u542f\u52a8 Pod \u4e3a Pod \u8bbe\u7f6e Init \u5bb9\u5668\u9700\u8981\u5728 Pod \u7684 spec \u4e2d\u6dfb\u52a0 initContainers \u5b57\u6bb5 \u5982\u679c\u4e3a\u4e00\u4e2a Pod \u6307\u5b9a\u4e86\u591a\u4e2a Init \u5bb9\u5668\uff0c\u8fd9\u4e9b\u5bb9\u5668\u4f1a\u6309\u987a\u5e8f\u9010\u4e2a\u8fd0\u884c\u3002 \u6bcf\u4e2a Init \u5bb9\u5668\u5fc5\u987b\u8fd0\u884c\u6210\u529f\uff0c\u4e0b\u4e00\u4e2a\u624d\u80fd\u591f\u8fd0\u884c\u3002\u5f53\u6240\u6709\u7684 Init \u5bb9\u5668\u8fd0\u884c\u5b8c\u6210\u65f6\uff0c Kubernetes \u624d\u4f1a\u4e3a Pod \u521d\u59cb\u5316\u5e94\u7528\u5bb9\u5668\u5e76\u50cf\u5e73\u5e38\u4e00\u6837\u8fd0\u884c","title":"\u7406\u89e3 Init \u5bb9\u5668"},{"location":"K8S/basic/#init_2","text":"\u4e0b\u9762\u7684\u4f8b\u5b50\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5177\u6709 2 \u4e2a Init \u5bb9\u5668\u7684\u7b80\u5355 Pod \u7b2c\u4e00\u4e2a\u7b49\u5f85 myservice \u542f\u52a8\uff0c \u7b2c\u4e8c\u4e2a\u7b49\u5f85 mydb \u542f\u52a8 \u4e00\u65e6\u8fd9\u4e24\u4e2a Init \u5bb9\u5668 \u90fd\u542f\u52a8\u5b8c\u6210\uff0cPod \u5c06\u542f\u52a8 spec \u8282\u4e2d\u7684\u5e94\u7528\u5bb9\u5668 apiVersion : v1 kind : Pod metadata : name : myapp-pod labels : app : myapp spec : containers : - name : myapp-container image : busybox:1.28 command : [ \"sh\" , \"-c\" , \"echo The app is running! && sleep 3600\" ] initContainers : - name : init-myservice image : busybox:1.28 command : [ \"sh\" , \"-c\" , \"until nslookup myservice.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done\" , ] - name : init-mydb image : busybox:1.28 command : [ \"sh\" , \"-c\" , \"until nslookup mydb.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 2; done\" , ] \u5982\u4e0b\u4e3a\u521b\u5efa\u8fd9\u4e9b Service \u7684\u914d\u7f6e\u6587\u4ef6 --- apiVersion : v1 kind : Service metadata : name : myservice spec : ports : - protocol : TCP port : 80 targetPort : 9376 --- apiVersion : v1 kind : Service metadata : name : mydb spec : ports : - protocol : TCP port : 80 targetPort : 9377 \u67e5\u770b Pod \u5185 Init \u5bb9\u5668\u7684\u65e5\u5fd7 kubectl logs myapp-pod -c init-myservice # \u67e5\u770b\u7b2c\u4e00\u4e2a Init \u5bb9\u5668 kubectl logs myapp-pod -c init-mydb # \u67e5\u770b\u7b2c\u4e8c\u4e2a Init \u5bb9\u5668 \u5177\u4f53\u884c\u4e3a \u6bcf\u4e2a Init \u5bb9\u5668\u4f1a\u5728\u7f51\u7edc\u548c\u6570\u636e\u5377\u521d\u59cb\u5316\u4e4b\u540e\u6309\u987a\u5e8f\u542f\u52a8\uff1b\u6bcf\u4e2a Init \u5bb9\u5668\u6210\u529f\u9000\u51fa\u540e\u624d\u4f1a\u542f\u52a8\u4e0b\u4e00\u4e2a Init \u5bb9\u5668 \u5982\u679c Pod \u91cd\u542f\uff0c\u6240\u6709 Init \u5bb9\u5668\u5fc5\u987b\u91cd\u65b0\u6267\u884c \u56e0\u4e3a Init \u5bb9\u5668\u53ef\u80fd\u4f1a\u88ab\u91cd\u542f\u3001\u91cd\u8bd5\u6216\u8005\u91cd\u65b0\u6267\u884c\uff0c\u6240\u4ee5 Init \u5bb9\u5668\u7684\u4ee3\u7801\u5e94\u8be5\u662f\u5e42\u7b49\u7684 \u8d44\u6e90 \u6240\u6709 Init \u5bb9\u5668\u4e0a\u5b9a\u4e49\u7684\u4efb\u4f55\u7279\u5b9a\u8d44\u6e90\u7684 limit \u6216 request \u7684\u6700\u5927\u503c\uff0c\u4f5c\u4e3a Pod \u6709\u6548\u521d\u59cb request/limit Pod \u5bf9\u8d44\u6e90\u7684 \u6709\u6548 limit/request \u662f\u5982\u4e0b\u4e24\u8005\u7684\u8f83\u5927\u8005\uff1a \u6240\u6709\u5e94\u7528\u5bb9\u5668\u5bf9\u67d0\u4e2a\u8d44\u6e90\u7684 limit/request \u4e4b\u548c \u5bf9\u67d0\u4e2a\u8d44\u6e90\u7684\u6709\u6548\u521d\u59cb limit/request \u57fa\u4e8e\u6709\u6548 limit/request \u5b8c\u6210\u8c03\u5ea6\uff0c\u8fd9\u610f\u5473\u7740 Init \u5bb9\u5668\u80fd\u591f\u4e3a\u521d\u59cb\u5316\u8fc7\u7a0b\u9884\u7559\u8d44\u6e90\uff0c \u8fd9\u4e9b\u8d44\u6e90\u5728 Pod \u751f\u547d\u5468\u671f\u8fc7\u7a0b\u4e2d\u5e76\u6ca1\u6709\u88ab\u4f7f\u7528\u3002 Pod \u7684 \u6709\u6548 QoS \u5c42 \uff0c\u4e0e Init \u5bb9\u5668\u548c\u5e94\u7528\u5bb9\u5668\u7684\u4e00\u6837\u3002 Pod \u91cd\u542f\u7684\u539f\u56e0 \u7528\u6237\u66f4\u65b0 Pod \u7684\u89c4\u7ea6\u5bfc\u81f4 Init \u5bb9\u5668\u955c\u50cf\u53d1\u751f\u6539\u53d8\u3002Init \u5bb9\u5668\u955c\u50cf\u7684\u53d8\u66f4\u4f1a\u5f15\u8d77 Pod \u91cd\u542f\u3002 \u5e94\u7528\u5bb9\u5668\u955c\u50cf\u7684\u53d8\u66f4\u4ec5\u4f1a\u91cd\u542f\u5e94\u7528\u5bb9\u5668\u3002 Pod \u7684\u57fa\u7840\u8bbe\u65bd\u5bb9\u5668 (\u8bd1\u8005\u6ce8\uff1a\u5982 pause \u5bb9\u5668) \u88ab\u91cd\u542f\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0d\u591a\u89c1\uff0c \u5fc5\u987b\u7531\u5177\u5907 root \u6743\u9650\u8bbf\u95ee\u8282\u70b9\u7684\u4eba\u5458\u6765\u5b8c\u6210\u3002 \u5f53 restartPolicy \u8bbe\u7f6e\u4e3a \"Always\"\uff0cPod \u4e2d\u6240\u6709\u5bb9\u5668\u4f1a\u7ec8\u6b62\u800c\u5f3a\u5236\u91cd\u542f\u3002 \u7531\u4e8e\u5783\u573e\u6536\u96c6\u673a\u5236\u7684\u539f\u56e0\uff0cInit \u5bb9\u5668\u7684\u5b8c\u6210\u8bb0\u5f55\u5c06\u4f1a\u4e22\u5931\u3002","title":"\u4f7f\u7528 Init \u5bb9\u5668"},{"location":"K8S/basic/#pod_4","text":"\u901a\u8fc7\u62d3\u6251\u5206\u5e03\u7ea6\u675f\u6765\u63a7\u5236 Pods \u5728\u96c6\u7fa4\u5185\u6545\u969c\u57df \u4e4b\u95f4\u7684\u5206\u5e03\uff0c\u4f8b\u5982\u533a\u57df\uff08Region\uff09\u3001\u53ef\u7528\u533a\uff08Zone\uff09\u3001\u8282\u70b9\u548c\u5176\u4ed6\u7528\u6237\u81ea\u5b9a\u4e49\u62d3\u6251\u57df \u4f9d\u8d56\u4e8e\u8282\u70b9\u6807\u7b7e\u6765\u6807\u8bc6\u6bcf\u4e2a\u8282\u70b9\u6240\u5728\u7684\u62d3\u6251\u57df","title":"Pod \u62d3\u6251\u5206\u5e03\u7ea6\u675f"},{"location":"K8S/basic/#pod_5","text":"\u5b57\u6bb5 maxSkew\uff1a\u63cf\u8ff0 Pod \u5206\u5e03\u4e0d\u5747\u7684\u7a0b\u5ea6\u3002\u8fd9\u662f\u7ed9\u5b9a\u62d3\u6251\u7c7b\u578b\u4e2d\u4efb\u610f\u4e24\u4e2a\u62d3\u6251\u57df\u4e2d \u5339\u914d\u7684 pod \u4e4b\u95f4\u7684\u6700\u5927\u5141\u8bb8\u5dee\u503c\uff0c\u5fc5\u987b\u5927\u4e8e\u96f6 \u5f53 whenUnsatisfiable \u7b49\u4e8e \"DoNotSchedule\" \u65f6\uff0cmaxSkew \u662f\u76ee\u6807\u62d3\u6251\u57df \u4e2d\u5339\u914d\u7684 Pod \u6570\u4e0e\u5168\u5c40\u6700\u5c0f\u503c\u4e4b\u95f4\u53ef\u5b58\u5728\u7684\u5dee\u5f02 \u5f53 whenUnsatisfiable \u7b49\u4e8e \"ScheduleAnyway\" \u65f6\uff0c\u8c03\u5ea6\u5668\u4f1a\u66f4\u4e3a\u504f\u5411\u80fd\u591f\u964d\u4f4e\u504f\u5dee\u503c\u7684\u62d3\u6251\u57df topologyKey \u662f\u8282\u70b9\u6807\u7b7e\u7684\u952e\u3002\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u4f7f\u7528\u6b64\u952e\u6807\u8bb0\u5e76\u4e14\u5177\u6709\u76f8\u540c\u7684\u6807\u7b7e\u503c\uff0c \u5219\u8c03\u5ea6\u5668\u4f1a\u5c06\u8fd9\u4e24\u4e2a\u8282\u70b9\u89c6\u4e3a\u5904\u4e8e\u540c\u4e00\u62d3\u6251\u57df\u4e2d\u3002\u8c03\u5ea6\u5668\u8bd5\u56fe\u5728\u6bcf\u4e2a\u62d3\u6251\u57df\u4e2d\u653e\u7f6e\u6570\u91cf\u5747\u8861\u7684 Pod whenUnsatisfiable \u6307\u793a\u5982\u679c Pod \u4e0d\u6ee1\u8db3\u5206\u5e03\u7ea6\u675f\u65f6\u5982\u4f55\u5904\u7406\uff1a DoNotSchedule\uff08\u9ed8\u8ba4\uff09\u544a\u8bc9\u8c03\u5ea6\u5668\u4e0d\u8981\u8c03\u5ea6 ScheduleAnyway \u544a\u8bc9\u8c03\u5ea6\u5668\u4ecd\u7136\u7ee7\u7eed\u8c03\u5ea6\uff0c\u53ea\u662f\u6839\u636e\u5982\u4f55\u80fd\u5c06\u504f\u5dee\u6700\u5c0f\u5316\u6765\u5bf9 \u8282\u70b9\u8fdb\u884c\u6392\u5e8f labelSelector \u7528\u4e8e\u67e5\u627e\u5339\u914d\u7684 pod\u3002\u5339\u914d\u6b64\u6807\u7b7e\u7684 Pod \u5c06\u88ab\u7edf\u8ba1\uff0c\u4ee5\u786e\u5b9a\u76f8\u5e94 \u62d3\u6251\u57df\u4e2d Pod \u7684\u6570\u91cf \u793a\u4f8b\u5982\u4e0b kind : Pod apiVersion : v1 metadata : name : mypod labels : foo : bar spec : topologySpreadConstraints : - maxSkew : 1 topologyKey : zone whenUnsatisfiable : DoNotSchedule labelSelector : matchLabels : foo : bar containers : - name : pause image : k8s.gcr.io/pause:3.1 topologyKey: zone\uff0c\u610f\u5473\u7740\u5747\u5300\u5206\u5e03\u5c06\u53ea\u5e94\u7528\u4e8e\u5b58\u5728\u6807\u7b7e\u952e\u503c\u5bf9\u4e3a \"zone: \" \u7684\u8282\u70b9 whenUnsatisfiable: DoNotSchedule \u544a\u8bc9\u8c03\u5ea6\u5668\u5982\u679c\u65b0\u7684 Pod \u4e0d\u6ee1\u8db3\u7ea6\u675f\uff0c \u5219\u8ba9\u5b83\u4fdd\u6301\u60ac\u51b3\u72b6\u6001 \u591a\u4e2a TopologySpreadConstraints \u793a\u4f8b kind : Pod apiVersion : v1 metadata : name : mypod labels : foo : bar spec : topologySpreadConstraints : - maxSkew : 1 topologyKey : zone whenUnsatisfiable : DoNotSchedule labelSelector : matchLabels : foo : bar - maxSkew : 1 topologyKey : node whenUnsatisfiable : DoNotSchedule labelSelector : matchLabels : foo : bar containers : - name : pause image : k8s.gcr.io/pause:3.1 \u591a\u4e2a\u7ea6\u675f\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u51b2\u7a81 \u7ea6\u5b9a \u53ea\u6709\u4e0e\u65b0\u7684 Pod \u5177\u6709\u76f8\u540c\u547d\u540d\u7a7a\u95f4\u7684 Pod \u624d\u80fd\u4f5c\u4e3a\u5339\u914d\u5019\u9009\u8005 \u6ca1\u6709 topologySpreadConstraints[*].topologyKey \u7684\u8282\u70b9\u5c06\u88ab\u5ffd\u7565 \u4f4d\u4e8e\u8fd9\u4e9b\u8282\u70b9\u4e0a\u7684 Pod \u4e0d\u5f71\u54cd maxSkew \u7684\u8ba1\u7b97 \u65b0\u7684 Pod \u6ca1\u6709\u673a\u4f1a\u88ab\u8c03\u5ea6\u5230\u8fd9\u7c7b\u8282\u70b9\u4e0a \u5982\u679c\u65b0 Pod \u7684 topologySpreadConstraints[*].labelSelector \u4e0e\u81ea\u8eab\u7684\u6807\u7b7e\u4e0d\u5339\u914d\uff0c\u5728\u8c03\u5ea6\u4e4b\u540e\uff0c\u96c6\u7fa4\u7684\u4e0d\u5e73\u8861\u7a0b\u5ea6\u4fdd\u6301\u4e0d\u53d8 \u5982\u679c\u65b0 Pod \u5b9a\u4e49\u4e86 spec.nodeSelector \u6216 spec.affinity.nodeAffinity\uff0c\u5219\u4e0d\u5339\u914d\u7684\u8282\u70b9\u4f1a\u88ab\u5ffd\u7565 \u96c6\u7fa4\u7ea7\u522b\u7684\u9ed8\u8ba4\u7ea6\u675f \u4e3a\u96c6\u7fa4\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u62d3\u6251\u5206\u5e03\u7ea6\u675f\u4e5f\u662f\u53ef\u80fd\u7684\u3002\u9ed8\u8ba4\u62d3\u6251\u5206\u5e03\u7ea6\u675f\u5728\u4e14\u4ec5\u5728\u4ee5\u4e0b\u6761\u4ef6\u6ee1\u8db3 \u65f6\u624d\u4f1a\u5e94\u7528\u5230 Pod \u4e0a Pod \u6ca1\u6709\u5728\u5176 .spec.topologySpreadConstraints \u8bbe\u7f6e\u4efb\u4f55\u7ea6\u675f Pod \u96b6\u5c5e\u4e8e\u67d0\u4e2a\u670d\u52a1\u3001\u526f\u672c\u63a7\u5236\u5668\u3001ReplicaSet \u6216 StatefulSet \u793a\u4f8b apiVersion : kubescheduler.config.k8s.io/v1beta1 kind : KubeSchedulerConfiguration profiles : - pluginConfig : - name : PodTopologySpread args : defaultConstraints : - maxSkew : 1 topologyKey : topology.kubernetes.io/zone whenUnsatisfiable : ScheduleAnyway \u5185\u90e8\u9ed8\u8ba4\u7ea6\u675f \u5f53\u542f\u7528\u4e86 DefaultPodTopologySpread \u7279\u6027\u95e8\u63a7\u65f6\uff0c\u539f\u6765\u7684 SelectorSpread \u63d2\u4ef6\u4f1a\u88ab\u7981\u7528\uff0ckube-scheduler \u4f1a\u4f7f\u7528\u4e0b\u9762\u7684\u9ed8\u8ba4\u62d3\u6251\u7ea6\u675f\u4f5c\u4e3a PodTopologySpread \u63d2\u4ef6\u7684\u914d\u7f6e defaultConstraints : - maxSkew : 3 topologyKey : \"kubernetes.io/hostname\" whenUnsatisfiable : ScheduleAnyway - maxSkew : 5 topologyKey : \"topology.kubernetes.io/zone\" whenUnsatisfiable : ScheduleAnyway \u4e0e PodAffinity/PodAntiAffinity \u76f8\u6bd4\u8f83 \u4e0e\u201c\u4eb2\u548c\u6027\u201d\u76f8\u5173\u7684\u6307\u4ee4\u63a7\u5236 Pod \u7684\u8c03\u5ea6\u65b9\u5f0f \u5bf9\u4e8e PodAffinity\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u4efb\u610f\u6570\u91cf\u7684 Pod \u96c6\u4e2d\u5230\u7b26\u5408\u6761\u4ef6\u7684\u62d3\u6251\u57df\u4e2d \u5bf9\u4e8e PodAntiAffinity\uff0c\u53ea\u80fd\u5c06\u4e00\u4e2a Pod \u8c03\u5ea6\u5230\u67d0\u4e2a\u62d3\u6251\u57df\u4e2d","title":"Pod \u7684\u5206\u5e03\u7ea6\u675f"},{"location":"K8S/basic/#_16","text":"\u81ea\u613f\u5e72\u6270\u548c\u975e\u81ea\u613f\u5e72\u6270 \u975e\u81ea\u613f\u5e72\u6270\uff1aPod \u4e0d\u4f1a\u6d88\u5931\uff0c\u9664\u975e\u6709\u4eba\uff08\u7528\u6237\u6216\u63a7\u5236\u5668\uff09\u5c06\u5176\u9500\u6bc1\uff0c\u6216\u8005\u51fa\u73b0\u4e86\u4e0d\u53ef\u907f\u514d\u7684\u786c\u4ef6\u6216\u8f6f\u4ef6\u7cfb\u7edf\u9519\u8bef \u8282\u70b9\u4e0b\u5c42\u7269\u7406\u673a\u7684\u786c\u4ef6\u6545\u969c \u96c6\u7fa4\u7ba1\u7406\u5458\u9519\u8bef\u5730\u5220\u9664\u865a\u62df\u673a\uff08\u5b9e\u4f8b\uff09 \u4e91\u63d0\u4f9b\u5546\u6216\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u4e2d\u7684\u6545\u969c\u5bfc\u81f4\u7684\u865a\u62df\u673a\u6d88\u5931 \u5185\u6838\u9519\u8bef \u8282\u70b9\u7531\u4e8e\u96c6\u7fa4\u7f51\u7edc\u9694\u79bb\u4ece\u96c6\u7fa4\u4e2d\u6d88\u5931 \u7531\u4e8e\u8282\u70b9\u8d44\u6e90\u4e0d\u8db3\u5bfc\u81f4 pod \u88ab\u9a71\u9010 \u81ea\u613f\u5e72\u6270 \u5220\u9664 Deployment \u6216\u5176\u4ed6\u7ba1\u7406 Pod \u7684\u63a7\u5236\u5668 \u66f4\u65b0\u4e86 Deployment \u7684 Pod \u6a21\u677f\u5bfc\u81f4 Pod \u91cd\u542f \u76f4\u63a5\u5220\u9664 Pod\uff08\u4f8b\u5982\uff0c\u56e0\u4e3a\u8bef\u64cd\u4f5c\uff09 \u6392\u7a7a\uff08drain\uff09\u8282\u70b9\u8fdb\u884c\u4fee\u590d\u6216\u5347\u7ea7\u3002 \u4ece\u96c6\u7fa4\u4e2d\u6392\u7a7a\u8282\u70b9\u4ee5\u7f29\u5c0f\u96c6\u7fa4\uff08\u4e86\u89e3\u96c6\u7fa4\u81ea\u52a8\u6269\u7f29\uff09 \u4ece\u8282\u70b9\u4e2d\u79fb\u9664\u4e00\u4e2a Pod\uff0c\u4ee5\u5141\u8bb8\u5176\u4ed6 Pod \u4f7f\u7528\u8be5\u8282\u70b9 \u5904\u7406\u5e72\u6270 \u786e\u4fdd Pod \u5728\u8bf7\u6c42\u4e2d\u7ed9\u51fa\u6240\u9700\u8d44\u6e90 \u5982\u679c\u9700\u8981\u66f4\u9ad8\u7684\u53ef\u7528\u6027\uff0c\u8bf7\u590d\u5236\u5e94\u7528\u7a0b\u5e8f\u3002 \uff08\u4e86\u89e3\u6709\u5173\u8fd0\u884c\u591a\u526f\u672c\u7684\u65e0\u72b6\u6001 \u548c\u6709\u72b6\u6001\u5e94\u7528\u7a0b\u5e8f\u7684\u4fe1\u606f\uff09 \u4e3a\u4e86\u5728\u8fd0\u884c\u590d\u5236\u5e94\u7528\u7a0b\u5e8f\u65f6\u83b7\u5f97\u66f4\u9ad8\u7684\u53ef\u7528\u6027\uff0c\u8bf7\u8de8\u673a\u67b6\uff08\u4f7f\u7528 \u53cd\u4eb2\u548c\u6027\uff09\u6216\u8de8\u533a\u57df \uff08\u5982\u679c\u4f7f\u7528\u591a\u533a\u57df\u96c6\u7fa4\uff09\u6269\u5c55\u5e94\u7528\u7a0b\u5e8f \u5e72\u6270\u9884\u7b97 \u5e94\u7528\u7a0b\u5e8f\u6240\u6709\u8005\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa PodDisruptionBudget \u5bf9\u8c61\uff08PDB\uff09\uff0cPDB \u5c06\u9650\u5236\u5728\u540c\u4e00\u65f6\u95f4\u56e0\u81ea\u613f\u5e72\u6270\u5bfc\u81f4\u7684\u590d\u5236\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b95\u673a\u7684 pod \u6570\u91cf \u4f8b\u5982\uff0c\u57fa\u4e8e\u7968\u9009\u673a\u5236\u7684\u5e94\u7528\u7a0b\u5e8f\u5e0c\u671b\u786e\u4fdd\u8fd0\u884c\u7684\u526f\u672c\u6570\u6c38\u8fdc\u4e0d\u4f1a\u4f4e\u4e8e\u4ef2\u88c1\u6240\u9700\u7684\u6570\u91cf \u96c6\u7fa4\u7ba1\u7406\u5458\u548c\u6258\u7ba1\u63d0\u4f9b\u5546\u5e94\u8be5\u4f7f\u7528\u9075\u5faa Pod Disruption Budgets \u7684\u63a5\u53e3 \uff08\u901a\u8fc7\u8c03\u7528 Eviction API\uff09\uff0c \u800c\u4e0d\u662f\u76f4\u63a5\u5220\u9664 Pod \u6216 Deployment \u4f8b\u5982\uff0ckubectl drain \u547d\u4ee4\u53ef\u4ee5\u7528\u6765\u6807\u8bb0\u67d0\u4e2a\u8282\u70b9\u5373\u5c06\u505c\u6b62\u670d\u52a1\u3002 \u8fd0\u884c kubectl drain \u547d\u4ee4\u65f6\uff0c\u5de5\u5177\u4f1a\u5c1d\u8bd5\u9a71\u9010\u673a\u5668\u4e0a\u7684\u6240\u6709 Pod PDB \u6307\u5b9a\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5bb9\u5fcd\u7684\u526f\u672c\u6570\u91cf\uff08\u76f8\u5f53\u4e8e\u5e94\u8be5\u6709\u591a\u5c11\u526f\u672c\uff09 \u4f8b\u5982\uff0c\u5177\u6709 .spec.replicas: 5 \u7684 Deployment \u5728\u4efb\u4f55\u65f6\u95f4\u90fd\u5e94\u8be5\u6709 5 \u4e2a Pod\u3002 \u5982\u679c PDB \u5141\u8bb8\u5176\u5728\u67d0\u4e00\u65f6\u523b\u6709 4 \u4e2a\u526f\u672c\uff0c\u90a3\u4e48\u9a71\u9010 API \u5c06\u5141\u8bb8\u540c\u4e00\u65f6\u523b\u4ec5\u6709\u4e00\u4e2a\u800c\u4e0d\u662f\u4e24\u4e2a Pod \u81ea\u613f\u5e72\u6270 \u4f7f\u7528\u6807\u7b7e\u9009\u62e9\u5668\u6765\u6307\u5b9a\u6784\u6210\u5e94\u7528\u7a0b\u5e8f\u7684\u4e00\u7ec4 Pod\uff0c\u8fd9\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u63a7\u5236\u5668\uff08Deployment\uff0cStatefulSet \u7b49\uff09 \u9009\u62e9 Pod \u7684\u903b\u8f91\u4e00\u6837\uff1bPod \u63a7\u5236\u5668\u7684 .spec.replicas \u8ba1\u7b97\u201c\u9884\u671f\u7684\u201d Pod \u6570\u91cf\u3002 \u6839\u636e Pod \u5bf9\u8c61\u7684 .metadata.ownerReferences \u5b57\u6bb5\u6765\u53d1\u73b0\u63a7\u5236\u5668 PDB \u4e0d\u80fd\u963b\u6b62\u975e\u81ea\u613f\u5e72\u6270\u7684\u53d1\u751f\uff0c\u4f46\u662f\u786e\u5b9e\u4f1a\u8ba1\u5165 \u9884\u7b97","title":"\u5e72\u6270"},{"location":"K8S/basic/#_17","text":"\u7531\u4e8e Pod \u662f\u4e00\u6b21\u6027\u4e14\u53ef\u66ff\u6362\u7684\uff0c\u56e0\u6b64\u4e00\u65e6 Pod \u521b\u5efa\uff0c\u5c31\u65e0\u6cd5\u5c06\u5bb9\u5668\u52a0\u5165\u5230 Pod \u4e2d \u6709\u65f6\u6709\u5fc5\u8981\u68c0\u67e5\u73b0\u6709 Pod \u7684\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u96be\u4ee5\u590d\u73b0\u7684\u6545\u969c\u8fdb\u884c\u6392\u67e5\u3002 \u5728\u8fd9\u4e9b\u573a\u666f\u4e2d\uff0c\u53ef\u4ee5\u5728\u73b0\u6709 Pod \u4e2d\u8fd0\u884c\u4e34\u65f6\u5bb9\u5668\u6765\u68c0\u67e5\u5176\u72b6\u6001\u5e76\u8fd0\u884c\u4efb\u610f\u547d\u4ee4 \u4e34\u65f6\u5bb9\u5668 \u4e34\u65f6\u5bb9\u5668\u7f3a\u5c11\u5bf9\u8d44\u6e90\u6216\u6267\u884c\u7684\u4fdd\u8bc1\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u81ea\u52a8\u91cd\u542f\uff0c \u56e0\u6b64\u4e0d\u9002\u7528\u4e8e\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\uff0c\u540c\u6837\u4f7f\u7528 ContainerSpec \u63cf\u8ff0\uff0c\u4f46\u8bb8\u591a\u5b57\u6bb5\u662f\u4e0d\u517c\u5bb9\u548c\u4e0d\u5141\u8bb8\u7684 \u4e34\u65f6\u5bb9\u5668\u6ca1\u6709\u7aef\u53e3\u914d\u7f6e\uff0c\u56e0\u6b64\u50cf ports\uff0clivenessProbe\uff0creadinessProbe \u8fd9\u6837\u7684\u5b57\u6bb5\u662f\u4e0d\u5141\u8bb8\u7684 Pod \u8d44\u6e90\u5206\u914d\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u56e0\u6b64 resources \u914d\u7f6e\u662f\u4e0d\u5141\u8bb8\u7684 \u66f4\u591a\u89c1 EphemeralContainer \u53c2\u8003\u6587\u6863 \u4e34\u65f6\u5bb9\u5668\u662f\u4f7f\u7528 API \u4e2d\u7684\u4e00\u79cd\u7279\u6b8a\u7684 ephemeralcontainers \u5904\u7406\u5668\u8fdb\u884c\u521b\u5efa\u7684\uff0c \u800c\u4e0d\u662f\u76f4\u63a5\u6dfb\u52a0\u5230 pod.spec \u6bb5\uff0c\u56e0\u6b64\u65e0\u6cd5\u4f7f\u7528 kubectl edit \u6765\u6dfb\u52a0\u4e00\u4e2a\u4e34\u65f6\u5bb9\u5668 \u4e0e\u5e38\u89c4\u5bb9\u5668\u4e00\u6837\uff0c\u5c06\u4e34\u65f6\u5bb9\u5668\u6dfb\u52a0\u5230 Pod \u540e\uff0c\u5c06\u4e0d\u80fd\u66f4\u6539\u6216\u5220\u9664\u4e34\u65f6\u5bb9\u5668 \u7528\u9014 \u5f53\u7531\u4e8e\u5bb9\u5668\u5d29\u6e83\u6216\u5bb9\u5668\u955c\u50cf\u4e0d\u5305\u542b\u8c03\u8bd5\u5de5\u5177\u800c\u5bfc\u81f4 kubectl exec \u65e0\u7528\u65f6\uff0c \u4e34\u65f6\u5bb9\u5668\u5bf9\u4e8e\u4ea4\u4e92\u5f0f\u6545\u969c\u6392\u67e5\u5f88\u6709\u7528 \u793a\u4f8b { \"apiVersion\" : \"v1\" , \"kind\" : \"EphemeralContainers\" , \"metadata\" : { \"name\" : \"example-pod\" }, \"ephemeralContainers\" : [ { \"command\" : [ \"sh\" ], \"image\" : \"busybox\" , \"imagePullPolicy\" : \"IfNotPresent\" , \"name\" : \"debugger\" , \"stdin\" : true , \"tty\" : true , \"terminationMessagePolicy\" : \"File\" } ] } \u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u66f4\u65b0\u5df2\u8fd0\u884c\u7684\u4e34\u65f6\u5bb9\u5668 example-pod kubectl replace --raw /api/v1/namespaces/default/pods/example-pod/ephemeralcontainers -f ec.json \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fde\u63a5\u5230\u65b0\u7684\u4e34\u65f6\u5bb9\u5668 kubectl attach -it example-pod -c debugger","title":"\u4e34\u65f6\u5bb9\u5668"},{"location":"K8S/resources/","tags":["K8S"],"text":"Kubernetes \u5de5\u4f5c\u8d44\u6e90 \u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u670d\u52a1 \u4e3a\u4e86\u5b66\u4e60 Kubernetes \u5de5\u4f5c\u8d44\u6e90\u4f7f\u7528\u59ff\u52bf\uff0c\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a Http \u670d\u52a1\uff0c\u4ee3\u7801\u5982\u4e0b package main import ( \"fmt\" \"net/http\" ) func indexHandler ( w http . ResponseWriter , r * http . Request ) { fmt . Fprintf ( w , \"<h1>Test Homepage</h1>\" ) } func main () { http . HandleFunc ( \"/\" , indexHandler ) http . ListenAndServe ( \":8080\" , nil ) } Dockerfile \u5982\u4e0b FROM golang:latest AS build WORKDIR /app ENV CGO_ENABLED = 0 ENV GOPROXY = https://mirrors.aliyun.com/goproxy/,direct ENV GO111MODULE = on ENV GOOS = linux COPY . . RUN go mod tidy RUN go build -o app . FROM alpine:latest WORKDIR /root/ COPY --from = build /app . CMD [ \"./app\" ] \u5b8c\u6574\u4ee3\u7801\u5730\u5740 Pod apiVersion : v1 kind : Pod metadata : name : app labels : - name : app spec : # hostAliases: # - ip: \"10.1.2.3\" # hostnames: # - \"foo.remote\" # - \"bar.remote\" shareProcessNamespace : true containers : - name : app image : app:1.0.0 imagePullPolicy : Never lifecycle : postStart : exec : command : [ \"/bin/sh\" , \"-c\" , \"echo Hello Test Start> /tmp/mylog\" ] preStop : exec : command : [ \"/bin/sh\" , \"-c\" , \"echo Hello Test End> /tmp/app/mylog\" ] volumeMounts : - mountPath : /tmp/app name : app-volume ports : - containerPort : 8080 hostPort : 8080 livenessProbe : exec : command : - cat - /tmp/app/healthy initialDelaySeconds : 5 periodSeconds : 5 volumes : - name : app-volume emptyDir : {} ReplicaSet RepicaSet \u662f\u901a\u8fc7\u4e00\u7ec4\u5b57\u6bb5\u6765\u5b9a\u4e49\u7684\uff0c\u5305\u62ec\u4e00\u4e2a\u7528\u6765\u8bc6\u522b\u53ef\u83b7\u5f97\u7684 Pod \u7684\u96c6\u5408\u7684\u9009\u62e9\u7b97\u7b26\u3001\u4e00\u4e2a\u7528\u6765\u6807\u660e\u5e94\u8be5\u7ef4\u62a4\u7684\u526f\u672c\u4e2a\u6570\u7684\u6570\u503c\u3001\u4e00\u4e2a\u7528\u6765\u6307\u5b9a\u5e94\u8be5\u521b\u5efa\u65b0 Pod \u4ee5\u6ee1\u8db3\u526f\u672c\u4e2a\u6570\u6761\u4ef6\u65f6\u8981\u4f7f\u7528\u7684 Pod \u6a21\u677f\u7b49\u7b49\u3002 \u6bcf\u4e2a ReplicaSet \u90fd\u901a\u8fc7\u6839\u636e\u9700\u8981\u521b\u5efa\u548c \u5220\u9664 Pod \u4ee5\u4f7f\u5f97\u526f\u672c\u4e2a\u6570\u8fbe\u5230\u671f\u671b\u503c\uff0c \u8fdb\u800c\u5b9e\u73b0\u5176\u5b58\u5728\u4ef7\u503c\u3002\u5f53 ReplicaSet \u9700\u8981\u521b\u5efa\u65b0\u7684 Pod \u65f6\uff0c\u4f1a\u4f7f\u7528\u6240\u63d0\u4f9b\u7684 Pod \u6a21\u677f\u3002 ReplicaSet \u901a\u8fc7 Pod \u4e0a\u7684 metadata.ownerReferences \u5b57\u6bb5\u8fde\u63a5\u5230\u9644\u5c5e Pod\uff0c\u8be5\u5b57\u6bb5\u7ed9\u51fa\u5f53\u524d\u5bf9\u8c61\u7684\u5c5e\u4e3b\u8d44\u6e90\u3002 ReplicaSet \u6240\u83b7\u5f97\u7684 Pod \u90fd\u5728\u5176 ownerReferences \u5b57\u6bb5\u4e2d\u5305\u542b\u4e86\u5c5e\u4e3b ReplicaSet \u7684\u6807\u8bc6\u4fe1\u606f\u3002\u6b63\u662f\u901a\u8fc7\u8fd9\u4e00\u8fde\u63a5\uff0cReplicaSet \u77e5\u9053\u5b83\u6240\u7ef4\u62a4\u7684 Pod \u96c6\u5408\u7684\u72b6\u6001\uff0c \u5e76\u636e\u6b64\u8ba1\u5212\u5176\u64cd\u4f5c\u884c\u4e3a ReplicaSet \u4f7f\u7528\u5176\u9009\u62e9\u7b97\u7b26\u6765\u8fa8\u8bc6\u8981\u83b7\u5f97\u7684 Pod \u96c6\u5408 apiVersion : apps/v1 kind : ReplicaSet metadata : name : app-rs labels : app : app-rs tier : app-rs spec : # modify replicas according to your case replicas : 3 selector : matchLabels : tier : app-rs template : metadata : labels : tier : app-rs spec : containers : - name : app image : app:1.0.0 imagePullPolicy : Never ReplicaSet \u53ef\u4ee5\u88ab HPA \u81ea\u52a8\u7f29\u653e apiVersion : autoscaling/v1 kind : HorizontalPodAutoscaler metadata : name : frontend-scaler spec : scaleTargetRef : kind : ReplicaSet name : frontend minReplicas : 3 maxReplicas : 10 targetCPUUtilizationPercentage : 50 Deployments Deployment \u63a7\u5236\u5668\u4e3a Pods \u548c ReplicaSets \u63d0\u4f9b\u58f0\u660e\u5f0f\u7684\u66f4\u65b0\u80fd\u529b Deployment \u63a7\u5236\u5668\u6bcf\u6b21\u6ce8\u610f\u5230\u65b0\u7684 Deployment \u65f6\uff0c\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a ReplicaSet \u4ee5\u542f\u52a8\u6240\u9700\u7684 Pods \u5982\u679c\u66f4\u65b0\u4e86 Deployment\uff0c\u5219\u63a7\u5236\u6807\u7b7e\u5339\u914d .spec.selector \u4f46\u6a21\u677f\u4e0d\u5339\u914d .spec.template \u7684 Pods \u7684\u73b0\u6709 ReplicaSet \u88ab\u7f29\u5bb9\u3002\u6700\u7ec8\uff0c\u65b0\u7684 ReplicaSet \u7f29\u653e\u4e3a .spec.replicas \u4e2a\u526f\u672c\uff0c \u6240\u6709\u65e7 ReplicaSets \u7f29\u653e\u4e3a 0 \u4e2a\u526f\u672c apiVersion : apps/v1 kind : Deployment metadata : name : app-deployment labels : app : app spec : replicas : 3 selector : matchLabels : app : app template : metadata : labels : app : app spec : containers : - name : app image : app:1.0.0 ports : - containerPort : 8080 \u279c ~: k get deployment NAME READY UP-TO-DATE AVAILABLE AGE app-deployment 3 /3 3 3 7s \u279c ~: k get ReplicaSet NAME DESIRED CURRENT READY AGE app-deployment-77d4987499 3 3 3 10s \u279c ~: k get pod NAME READY STATUS RESTARTS AGE app-deployment-77d4987499-5jkj2 1 /1 Running 0 23s app-deployment-77d4987499-g7wcn 1 /1 Running 0 23s app-deployment-77d4987499-h2qsm 1 /1 Running 0 23s \u66f4\u65b0 Deplyment \u66f4\u65b0\u955c\u50cf \u65b9\u5f0f 1 kubectl --record deployment.v1.apps/app-deployment set image deployment.v1.apps/app-deployment app = app:1.0.1 \u65b9\u5f0f 2 kubectl set image deployment/app-deployment app = app:1.0.2 --record \u65b9\u5f0f 3 kubectl edit deployment.v1.apps/app-deployment deployment \u4e8b\u4ef6\u8bb0\u5f55\u5982\u4e0b NewReplicaSet: app-deployment-76fb7489cd ( 3 /3 replicas created ) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 17m deployment-controller Scaled up replica set app-deployment-77d4987499 to 3 Normal ScalingReplicaSet 4m30s deployment-controller Scaled up replica set app-deployment-64fcd57fb to 1 Normal ScalingReplicaSet 4m28s deployment-controller Scaled down replica set app-deployment-77d4987499 to 2 Normal ScalingReplicaSet 4m28s deployment-controller Scaled up replica set app-deployment-64fcd57fb to 2 Normal ScalingReplicaSet 4m27s deployment-controller Scaled down replica set app-deployment-77d4987499 to 1 Normal ScalingReplicaSet 4m27s deployment-controller Scaled up replica set app-deployment-64fcd57fb to 3 Normal ScalingReplicaSet 4m26s deployment-controller Scaled down replica set app-deployment-77d4987499 to 0 Normal ScalingReplicaSet 107s deployment-controller Scaled up replica set app-deployment-647bb69489 to 1 Normal ScalingReplicaSet 106s deployment-controller Scaled down replica set app-deployment-64fcd57fb to 2 Normal ScalingReplicaSet 106s deployment-controller Scaled up replica set app-deployment-647bb69489 to 2 \u5f53\u7b2c\u4e00\u6b21\u521b\u5efa Deployment \u65f6\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a ReplicaSet \u5e76\u5c06\u5176\u76f4\u63a5\u6269\u5bb9\u81f3 3 \u4e2a\u526f\u672c \u66f4\u65b0 Deployment \u65f6\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 ReplicaSet \uff0c\u5e76\u5c06\u5176\u6269\u5bb9\u4e3a 1\uff0c\u7136\u540e\u5c06\u65e7 ReplicaSet \u7f29\u5bb9\u5230 2\uff0c \u4ee5\u4fbf\u81f3\u5c11\u6709 2 \u4e2a Pod \u53ef\u7528\u4e14\u6700\u591a\u521b\u5efa 4 \u4e2a Pod \u7136\u540e\uff0c\u5b83\u4f7f\u7528\u76f8\u540c\u7684\u6eda\u52a8\u66f4\u65b0\u7b56\u7565\u7ee7\u7eed\u5bf9\u65b0\u7684 ReplicaSet \u6269\u5bb9\u5e76\u5bf9\u65e7\u7684 ReplicaSet \u7f29\u5bb9\u3002 \u6700\u540e\uff0c\u4f60\u5c06\u6709 3 \u4e2a\u53ef\u7528\u7684\u526f\u672c\u5728\u65b0\u7684 ReplicaSet \u4e2d\uff0c\u65e7 ReplicaSet \u5c06\u7f29\u5bb9\u5230 0 \u56de\u6eda Deployment \u68c0\u67e5\u4e0a\u7ebf\u7248\u672c \u279c ~: kubectl rollout history deployment.v1.apps/app-deployment deployment.apps/app-deployment REVISION CHANGE-CAUSE 1 <none> 2 kubectl deployment.v1.apps/app-deployment set image deployment.v1.apps/app-deployment app = app:1.0.1 --record = true 3 kubectl set image deployment/app-deployment app = app:1.0.2 --record = true 4 kubectl set image deployment/app-deployment app = app:1.0.2 --record = true \u67e5\u770b\u4fee\u8ba2\u5386\u53f2\u7684\u8be6\u7ec6\u4fe1\u606f \u279c ~: kubectl rollout history deployment.v1.apps/app-deployment --revision = 2 deployment.apps/app-deployment with revision #2 Pod Template: Labels: app = app pod-template-hash = 64fcd57fb Annotations: kubernetes.io/change-cause: kubectl deployment.v1.apps/app-deployment set image deployment.v1.apps/app-deployment app = app:1.0.1 --record = true Containers: app: Image: app:1.0.1 Port: 8080 /TCP Host Port: 0 /TCP Environment: <none> Mounts: <none> Volumes: <none> \u56de\u6eda\u5230\u4e4b\u524d\u7684\u4fee\u8ba2\u7248\u672c \u64a4\u6d88\u5f53\u524d\u4e0a\u7ebf\u5e76\u56de\u6eda\u5230\u4ee5\u524d\u7684\u4fee\u8ba2\u7248\u672c \u279c ~: kubectl rollout undo deployment.v1.apps/app-deployment deployment.apps/app-deployment rolled back \u4f1a\u6eda\u5230\u6307\u5b9a\u7248\u672c \u279c ~: kubectl rollout undo deployment.v1.apps/app-deployment --to-revision = 2 deployment.apps/app-deployment rolled back \u7f29\u653e Deployment \u7f29\u653e \u547d\u4ee4 \u279c ~: kubectl scale deployment.v1.apps/app-deployment --replicas = 3 \u6c34\u5e73\u81ea\u52a8\u7f29\u653e \u279c ~: kubectl autoscale deployment.v1.apps/app-deployment --min = 10 --max = 15 --cpu-percent = 80 \u6bd4\u4f8b\u7f29\u653e RollingUpdate \u7684 Deployment \u652f\u6301\u540c\u65f6\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u591a\u4e2a\u7248\u672c\u3002\u5f53\u81ea\u52a8\u7f29\u653e\u5668\u7f29\u653e\u5904\u4e8e\u4e0a\u7ebf\u8fdb\u7a0b\uff08\u4ecd\u5728\u8fdb\u884c\u4e2d\u6216\u6682\u505c\uff09\u4e2d\u7684 RollingUpdate Deployment \u65f6\uff0c Deployment \u63a7\u5236\u5668\u4f1a\u5e73\u8861\u73b0\u6709\u7684\u6d3b\u8dc3\u72b6\u6001\u7684 ReplicaSets\uff08\u542b Pods \u7684 ReplicaSets\uff09\u4e2d\u7684\u989d\u5916\u526f\u672c\uff0c \u4ee5\u964d\u4f4e\u98ce\u9669\u3002\u8fd9\u79f0\u4e3a \u6bd4\u4f8b\u7f29\u653e\uff08Proportional Scaling\uff09 \u6682\u505c\u3001\u6062\u590d Deployment \u5728\u89e6\u53d1\u4e00\u4e2a\u6216\u591a\u4e2a\u66f4\u65b0\u4e4b\u524d\u6682\u505c Deployment\uff0c\u7136\u540e\u518d\u6062\u590d\u5176\u6267\u884c \u4f8b\u5982 \u279c ~: kubectl rollout pause deployment.v1.apps/app-deployment deployment.apps/app-deployment paused \u279c ~: kubectl set resources deployment.v1.apps/app-deployment -c = app --limits = cpu = 200m,memory = 512Mi deployment.apps/app-deployment resource requirements updated \u279c ~: kubectl rollout resume deployment.v1.apps/app-deployment deployment.apps/nginx-deployment resumed \u279c ~: kubectl get rs -w deployment.apps/nginx-deployment resumed Deployment \u72b6\u6001 \u72b6\u6001\u67e5\u8be2 \u279c ~: kubectl rollout status deployment.v1.apps/nginx-deployment \u8fdb\u884c\u4e2d\u7684 Deployment \u51fa\u73b0\u573a\u666f Deployment \u521b\u5efa\u65b0\u7684 ReplicaSet Deployment \u6b63\u5728\u4e3a\u5176\u6700\u65b0\u7684 ReplicaSet \u6269\u5bb9 Deployment \u6b63\u5728\u4e3a\u5176\u65e7\u6709\u7684 ReplicaSet(s) \u7f29\u5bb9 \u65b0\u7684 Pods \u5df2\u7ecf\u5c31\u7eea\u6216\u8005\u53ef\u7528\uff08\u5c31\u7eea\u81f3\u5c11\u6301\u7eed\u4e86 MinReadySeconds \u79d2\uff09 \u5b8c\u6210\u7684 Deployment \u51fa\u73b0\u573a\u666f \u4e0e Deployment \u5173\u8054\u7684\u6240\u6709\u526f\u672c\u90fd\u5df2\u66f4\u65b0\u5230\u6307\u5b9a\u7684\u6700\u65b0\u7248\u672c\uff0c\u8fd9\u610f\u5473\u7740\u4e4b\u524d\u8bf7\u6c42\u7684\u6240\u6709\u66f4\u65b0\u90fd\u5df2\u5b8c\u6210 \u4e0e Deployment \u5173\u8054\u7684\u6240\u6709\u526f\u672c\u90fd\u53ef\u7528 \u672a\u8fd0\u884c Deployment \u7684\u65e7\u526f\u672c \u5931\u8d25\u7684 Deployment Deployment \u53ef\u80fd\u4e00\u76f4\u5904\u4e8e\u672a\u5b8c\u6210\u72b6\u6001\uff0c\u51fa\u73b0\u573a\u666f\u5982\u4e0b \u914d\u989d\uff08Quota\uff09\u4e0d\u8db3 \u5c31\u7eea\u63a2\u6d4b\uff08Readiness Probe\uff09\u5931\u8d25 \u955c\u50cf\u62c9\u53d6\u9519\u8bef \u6743\u9650\u4e0d\u8db3 \u9650\u5236\u8303\u56f4\uff08Limit Ranges\uff09\u95ee\u9898 \u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u914d\u7f6e\u9519\u8bef \u68c0\u6d4b\u65b9\u5f0f \u5728 Deployment \u89c4\u7ea6\u4e2d\u6307\u5b9a\u622a\u6b62\u65f6\u95f4\u53c2\u6570\uff1a.spec.progressDeadlineSeconds \u279c ~: kubectl patch deployment.v1.apps/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}' \u4e00\u65e6\u8d85\u8fc7 Deployment \u8fdb\u5ea6\u9650\u671f\uff0cKubernetes \u5c06\u66f4\u65b0\u72b6\u6001\u548c\u8fdb\u5ea6\u72b6\u51b5\u7684\u539f\u56e0 Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing False ProgressDeadlineExceeded ReplicaFailure True FailedCreate \u6e05\u7406\u7b56\u7565 \u5728 Deployment \u4e2d\u8bbe\u7f6e .spec.revisionHistoryLimit \u5b57\u6bb5\u4ee5\u6307\u5b9a\u4fdd\u7559\u6b64 Deployment \u7684\u591a\u5c11\u4e2a\u65e7\u6709 ReplicaSet\u3002\u5176\u4f59\u7684 ReplicaSet \u5c06\u5728\u540e\u53f0\u88ab\u5783\u573e\u56de\u6536\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u503c\u4e3a 10 \u5c06\u6b64\u5b57\u6bb5\u8bbe\u7f6e\u4e3a 0 \u5c06\u5bfc\u81f4 Deployment \u7684\u6240\u6709\u5386\u53f2\u8bb0\u5f55\u88ab\u6e05\u7a7a\uff0c\u56e0\u6b64 Deployment \u5c06\u65e0\u6cd5\u56de\u6eda Deployment \u89c4\u7ea6 apiVersion\uff0ckind \u548c metadata Pod \u6a21\u677f .spec \u4e2d\u53ea\u6709 .spec.template \u548c .spec.selector \u662f\u5fc5\u9700\u7684\u5b57\u6bb5 .spec.template \u662f\u4e00\u4e2a Pod \u6a21\u677f \u526f\u672c .spec.replicas \u662f\u6307\u5b9a\u6240\u9700 Pod \u7684\u53ef\u9009\u5b57\u6bb5\u3002\u5b83\u7684\u9ed8\u8ba4\u503c\u662f 1 \u9009\u62e9\u7b97\u7b26 .spec.selector \u662f\u6307\u5b9a\u672c Deployment \u7684 Pod \u6807\u7b7e\u9009\u62e9\u7b97\u7b26\u7684\u5fc5\u9700\u5b57\u6bb5 \u5fc5\u987b\u5339\u914d .spec.template.metadata.labels\uff0c\u5426\u5219\u8bf7\u6c42\u4f1a\u88ab API \u62d2\u7edd \u7b56\u7565 .spec.strategy \u7b56\u7565\u6307\u5b9a\u7528\u4e8e\u7528\u65b0 Pods \u66ff\u6362\u65e7 Pods \u7684\u7b56\u7565 .spec.strategy.type \u53ef\u4ee5\u662f \u201cRecreate\u201d \u6216 \u201cRollingUpdate\u201d(\u9ed8\u8ba4) \u91cd\u65b0\u521b\u5efa Deployment \u5982\u679c .spec.strategy.type==Recreate\uff0c\u5728\u521b\u5efa\u65b0 Pods \u4e4b\u524d\uff0c\u6240\u6709\u73b0\u6709\u7684 Pods \u4f1a\u88ab\u6740\u6b7b \u6eda\u52a8\u66f4\u65b0 Deployment Deployment \u4f1a\u5728 .spec.strategy.type==RollingUpdate \u65f6\uff0c\u91c7\u53d6\u6eda\u52a8\u66f4\u65b0\u7684\u65b9\u5f0f\u66f4\u65b0 Pods\uff0c\u53ef\u4ee5\u6307\u5b9a maxUnavailable \u548c maxSurge \u6765\u63a7\u5236\u6eda\u52a8\u66f4\u65b0\u8fc7\u7a0b maxUnavailable .spec.strategy.rollingUpdate.maxUnavailable \u662f\u4e00\u4e2a\u53ef\u9009\u5b57\u6bb5\uff0c\u7528\u6765\u6307\u5b9a \u66f4\u65b0\u8fc7\u7a0b\u4e2d\u4e0d\u53ef\u7528\u7684 Pod \u7684\u4e2a\u6570\u4e0a\u9650\uff1b\u8be5\u503c\u53ef\u4ee5\u662f\u7edd\u5bf9\u6570\u5b57\uff08\u4f8b\u5982\uff0c5\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f \u6240\u9700 Pods \u7684\u767e\u5206\u6bd4\uff08\u4f8b\u5982\uff0c10%\uff09\u3002\u767e\u5206\u6bd4\u503c\u4f1a\u8f6c\u6362\u6210\u7edd\u5bf9\u6570\u5e76\u53bb\u9664\u5c0f\u6570\u90e8\u5206\u3002 \u5982\u679c .spec.strategy.rollingUpdate.maxSurge \u4e3a 0\uff0c\u5219\u6b64\u503c\u4e0d\u80fd\u4e3a 0\u3002 \u9ed8\u8ba4\u503c\u4e3a 25% maxSurge .spec.strategy.rollingUpdate.maxSurge \u662f\u4e00\u4e2a\u53ef\u9009\u5b57\u6bb5\uff0c\u7528\u6765\u6307\u5b9a\u53ef\u4ee5\u521b\u5efa\u7684\u8d85\u51fa \u671f\u671b Pod \u4e2a\u6570\u7684 Pod \u6570\u91cf\u3002\u6b64\u503c\u53ef\u4ee5\u662f\u7edd\u5bf9\u6570\uff08\u4f8b\u5982\uff0c5\uff09\u6216\u6240\u9700 Pods \u7684\u767e\u5206\u6bd4\uff08\u4f8b\u5982\uff0c10%\uff09\u3002 \u5982\u679c MaxUnavailable \u4e3a 0\uff0c\u5219\u6b64\u503c\u4e0d\u80fd\u4e3a 0\u3002\u767e\u5206\u6bd4\u503c\u4f1a\u901a\u8fc7\u5411\u4e0a\u53d6\u6574\u8f6c\u6362\u4e3a\u7edd\u5bf9\u6570\u3002 \u6b64\u5b57\u6bb5\u7684\u9ed8\u8ba4\u503c\u4e3a 25% \u8fdb\u5ea6\u671f\u9650\u79d2\u6570 .spec.progressDeadlineSeconds \u662f\u4e00\u4e2a\u53ef\u9009\u5b57\u6bb5\uff0c\u7528\u4e8e\u6307\u5b9a\u7cfb\u7edf\u5728\u62a5\u544a Deployment \u8fdb\u5c55\u5931\u8d25 \u4e4b\u524d\u7b49\u5f85 Deployment \u53d6\u5f97\u8fdb\u5c55\u7684\u79d2\u6570 \u5982\u679c\u6307\u5b9a\uff0c\u5219\u6b64\u5b57\u6bb5\u503c\u9700\u8981\u5927\u4e8e .spec.minReadySeconds \u53d6\u503c \u6700\u77ed\u5c31\u7eea\u65f6\u95f4 .spec.minReadySeconds \u662f\u4e00\u4e2a\u53ef\u9009\u5b57\u6bb5\uff0c\u7528\u4e8e\u6307\u5b9a\u65b0\u521b\u5efa\u7684 Pod \u5728\u6ca1\u6709\u4efb\u610f\u5bb9\u5668\u5d29\u6e83\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u5c31\u7eea\u65f6\u95f4\uff0c \u53ea\u6709\u8d85\u51fa\u8fd9\u4e2a\u65f6\u95f4 Pod \u624d\u88ab\u89c6\u4e3a\u53ef\u7528\u3002\u9ed8\u8ba4\u503c\u4e3a 0\uff08Pod \u5728\u51c6\u5907\u5c31\u7eea\u540e\u7acb\u5373\u5c06\u88ab\u89c6\u4e3a\u53ef\u7528\uff09 \u4fee\u8ba2\u5386\u53f2\u9650\u5236 Deployment \u7684\u4fee\u8ba2\u5386\u53f2\u8bb0\u5f55\u5b58\u50a8\u5728\u5b83\u6240\u63a7\u5236\u7684 ReplicaSets \u4e2d .spec.revisionHistoryLimit \u662f\u4e00\u4e2a\u53ef\u9009\u5b57\u6bb5\uff0c\u7528\u6765\u8bbe\u5b9a\u51fa\u4e8e\u4f1a\u6eda\u76ee\u7684\u6240\u8981\u4fdd\u7559\u7684\u65e7 ReplicaSet \u6570\u91cf\u3002 \u8fd9\u4e9b\u65e7 ReplicaSet \u4f1a\u6d88\u8017 etcd \u4e2d\u7684\u8d44\u6e90\uff0c\u5e76\u5360\u7528 kubectl get rs \u7684\u8f93\u51fa \u6bcf\u4e2a Deployment \u4fee\u8ba2\u7248\u672c\u7684\u914d\u7f6e\u90fd\u5b58\u50a8\u5728\u5176 ReplicaSets \u4e2d\uff1b\u56e0\u6b64\uff0c\u4e00\u65e6\u5220\u9664\u4e86\u65e7\u7684 ReplicaSet\uff0c \u5c06\u5931\u53bb\u56de\u6eda\u5230 Deployment \u7684\u5bf9\u5e94\u4fee\u8ba2\u7248\u672c\u7684\u80fd\u529b\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7cfb\u7edf\u4fdd\u7559 10 \u4e2a\u65e7 ReplicaSet\uff0c\u4f46\u5176\u7406\u60f3\u503c\u53d6\u51b3\u4e8e\u65b0 Deployment \u7684\u9891\u7387\u548c\u7a33\u5b9a\u6027 paused .spec.paused \u662f\u7528\u4e8e\u6682\u505c\u548c\u6062\u590d Deployment \u7684\u53ef\u9009\u5e03\u5c14\u5b57\u6bb5\u3002 \u6682\u505c\u7684 Deployment \u548c\u672a\u6682\u505c\u7684 Deployment \u7684\u552f\u4e00\u533a\u522b\u662f Deployment \u5904\u4e8e\u6682\u505c\u72b6\u6001\u65f6\uff0c PodTemplateSpec \u7684\u4efb\u4f55\u4fee\u6539\u90fd\u4e0d\u4f1a\u89e6\u53d1\u65b0\u7684\u4e0a\u7ebf\u3002 Deployment \u5728\u521b\u5efa\u65f6\u662f\u9ed8\u8ba4\u4e0d\u4f1a\u5904\u4e8e\u6682\u505c\u72b6\u6001 StatefulSets StatefulSet \u662f\u7528\u6765\u7ba1\u7406\u6709\u72b6\u6001\u5e94\u7528\u7684\u5de5\u4f5c\u8d1f\u8f7d API \u5bf9\u8c61\uff1b\u53ef\u4ee5\u7528\u6765\u7ba1\u7406\u67d0 Pod \u96c6\u5408\u7684\u90e8\u7f72\u548c\u6269\u7f29\uff0c \u5e76\u4e3a\u8fd9\u4e9b Pod \u63d0\u4f9b\u6301\u4e45\u5b58\u50a8\u548c\u6301\u4e45\u6807\u8bc6\u7b26 \u548c Deployment \u7c7b\u4f3c\uff0c StatefulSet \u7ba1\u7406\u57fa\u4e8e\u76f8\u540c\u5bb9\u5668\u89c4\u7ea6\u7684\u4e00\u7ec4 Pod \u4f46\u548c Deployment \u4e0d\u540c\u7684\u662f\uff0c StatefulSet \u4e3a\u5b83\u4eec\u7684\u6bcf\u4e2a Pod \u7ef4\u62a4\u4e86\u4e00\u4e2a\u6709\u7c98\u6027\u7684 ID\uff0c\u8fd9\u4e9b Pod \u662f\u57fa\u4e8e\u76f8\u540c\u7684\u89c4\u7ea6\u6765\u521b\u5efa\u7684\uff0c \u4f46\u662f\u4e0d\u80fd\u76f8\u4e92\u66ff\u6362\uff1a\u65e0\u8bba\u600e\u4e48\u8c03\u5ea6\uff0c\u6bcf\u4e2a Pod \u90fd\u6709\u4e00\u4e2a\u6c38\u4e45\u4e0d\u53d8\u7684 ID \u9650\u5236 \u7ed9\u5b9a Pod \u7684\u5b58\u50a8\u5fc5\u987b\u7531 PersistentVolume \u9a71\u52a8 \u57fa\u4e8e\u6240\u8bf7\u6c42\u7684 storage class \u6765\u63d0\u4f9b\uff0c\u6216\u8005\u7531\u7ba1\u7406\u5458\u9884\u5148\u63d0\u4f9b \u5220\u9664\u6216\u8005\u6536\u7f29 StatefulSet \u5e76\u4e0d\u4f1a\u5220\u9664\u5b83\u5173\u8054\u7684\u5b58\u50a8\u5377\u3002 \u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\uff0c\u5b83\u901a\u5e38\u6bd4\u81ea\u52a8\u6e05\u9664 StatefulSet \u6240\u6709\u76f8\u5173\u7684\u8d44\u6e90\u66f4\u6709\u4ef7\u503c StatefulSet \u5f53\u524d\u9700\u8981 Headless Service \u6765\u8d1f\u8d23 Pod \u7684\u7f51\u7edc\u6807\u8bc6\u3002\u4f60\u9700\u8981\u8d1f\u8d23\u521b\u5efa\u6b64\u670d\u52a1 \u5f53\u5220\u9664 StatefulSets \u65f6\uff0cStatefulSet \u4e0d\u63d0\u4f9b\u4efb\u4f55\u7ec8\u6b62 Pod \u7684\u4fdd\u8bc1\u3002 \u4e3a\u4e86\u5b9e\u73b0 StatefulSet \u4e2d\u7684 Pod \u53ef\u4ee5\u6709\u5e8f\u5730\u4e14\u4f53\u9762\u5730\u7ec8\u6b62\uff0c\u53ef\u4ee5\u5728\u5220\u9664\u4e4b\u524d\u5c06 StatefulSet \u7f29\u653e\u4e3a 0 \u5728\u9ed8\u8ba4 Pod \u7ba1\u7406\u7b56\u7565(OrderedReady) \u65f6\u4f7f\u7528 \u6eda\u52a8\u66f4\u65b0\uff0c\u53ef\u80fd\u8fdb\u5165\u9700\u8981\u4eba\u5de5\u5e72\u9884 \u624d\u80fd\u4fee\u590d\u7684\u635f\u574f\u72b6\u6001 \u793a\u4f8b apiVersion : v1 kind : Service metadata : name : app labels : app : app spec : selector : app : app clusterIP : None ports : - name : default protocol : TCP port : 8080 targetPort : 8080 --- apiVersion : apps/v1 kind : StatefulSet metadata : name : app spec : selector : matchLabels : app : app serviceName : \"app\" replicas : 3 template : metadata : labels : app : app spec : terminationGracePeriodSeconds : 10 containers : - name : app image : app:1.0.3 imagePullPolicy : Never ports : - containerPort : 8080 name : app Pod \u9009\u62e9\u7b97\u7b26 \u5fc5\u987b\u8bbe\u7f6e StatefulSet \u7684 .spec.selector \u5b57\u6bb5\uff0c\u4f7f\u4e4b\u5339\u914d\u5176\u5728 .spec.template.metadata.labels \u4e2d\u8bbe\u7f6e\u7684\u6807\u7b7e Pod \u6807\u8bc6 StatefulSet Pod \u5177\u6709\u552f\u4e00\u7684\u6807\u8bc6\uff0c\u8be5\u6807\u8bc6\u5305\u62ec\u987a\u5e8f\u6807\u8bc6\u3001\u7a33\u5b9a\u7684\u7f51\u7edc\u6807\u8bc6\u548c\u7a33\u5b9a\u7684\u5b58\u50a8\u3002 \u8be5\u6807\u8bc6\u548c Pod \u662f\u7ed1\u5b9a\u7684\uff0c\u4e0d\u7ba1\u5b83\u88ab\u8c03\u5ea6\u5728\u54ea\u4e2a\u8282\u70b9\u4e0a \u6709\u5e8f\u7d22\u5f15 \u5bf9\u4e8e\u5177\u6709 N \u4e2a\u526f\u672c\u7684 StatefulSet\uff0cStatefulSet \u4e2d\u7684\u6bcf\u4e2a Pod \u5c06\u88ab\u5206\u914d\u4e00\u4e2a\u6574\u6570\u5e8f\u53f7\uff0c \u4ece 0 \u5230 N-1\uff0c\u8be5\u5e8f\u53f7\u5728 StatefulSet \u4e0a\u662f\u552f\u4e00\u7684 \u7a33\u5b9a\u7684\u7f51\u7edc ID StatefulSet \u4e2d\u7684\u6bcf\u4e2a Pod \u6839\u636e StatefulSet \u7684\u540d\u79f0\u548c Pod \u7684\u5e8f\u53f7\u6d3e\u751f\u51fa\u5b83\u7684\u4e3b\u673a\u540d \u7ec4\u5408\u4e3b\u673a\u540d\u7684\u683c\u5f0f\u4e3a \\((StatefulSet \u540d\u79f0)-\\) (\u5e8f\u53f7) StatefulSet \u53ef\u4ee5\u4f7f\u7528 Headless Service \u63a7\u5236\u5b83\u7684 Pod \u7684\u7f51\u7edc\u57df\u3002\u7ba1\u7406\u57df\u7684\u8fd9\u4e2a\u670d\u52a1\u7684\u683c\u5f0f\u4e3a\uff1a \\((\u670d\u52a1\u540d\u79f0).\\) (\u547d\u540d\u7a7a\u95f4).svc.cluster.local\uff0c\u5176\u4e2d cluster.local \u662f\u96c6\u7fa4\u57df\u3002 \u4e00\u65e6\u6bcf\u4e2a Pod \u521b\u5efa\u6210\u529f\uff0c\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u5339\u914d\u7684 DNS \u5b50\u57df\uff0c\u683c\u5f0f\u4e3a\uff1a \\((pod \u540d\u79f0).\\) (\u6240\u5c5e\u670d\u52a1\u7684 DNS \u57df\u540d)\uff0c\u5176\u4e2d\u6240\u5c5e\u670d\u52a1\u7531 StatefulSet \u7684 serviceName \u57df\u6765\u8bbe\u5b9a\u3002 \u7a33\u5b9a\u7684\u5b58\u50a8 Kubernetes \u4e3a\u6bcf\u4e2a VolumeClaimTemplate \u521b\u5efa\u4e00\u4e2a PersistentVolume \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6bcf\u4e2a Pod \u5c06\u4f1a\u5f97\u5230\u57fa\u4e8e StorageClass my-storage-class \u63d0\u4f9b\u7684 1 Gib \u7684 PersistentVolume\u3002\u5982\u679c\u6ca1\u6709\u58f0\u660e StorageClass\uff0c\u5c31\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684 StorageClass\u3002 \u5f53\u4e00\u4e2a Pod \u88ab\u8c03\u5ea6\uff08\u91cd\u65b0\u8c03\u5ea6\uff09\u5230\u8282\u70b9\u4e0a\u65f6\uff0c\u5b83\u7684 volumeMounts \u4f1a\u6302\u8f7d\u4e0e\u5176 PersistentVolumeClaims \u76f8\u5173\u8054\u7684 PersistentVolume\u3002 \u8bf7\u6ce8\u610f\uff0c\u5f53 Pod \u6216\u8005 StatefulSet \u88ab\u5220\u9664\u65f6\uff0c\u4e0e PersistentVolumeClaims \u76f8\u5173\u8054\u7684 PersistentVolume \u5e76\u4e0d\u4f1a\u88ab\u5220\u9664\u3002\u8981\u5220\u9664\u5b83\u5fc5\u987b\u901a\u8fc7\u624b\u52a8\u65b9\u5f0f\u6765\u5b8c\u6210\u3002 Pod \u540d\u79f0\u6807\u7b7e \u5f53 StatefulSet \u63a7\u5236\u5668\uff08Controller\uff09 \u521b\u5efa Pod \u65f6\uff0c \u5b83\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u6807\u7b7e statefulset.kubernetes.io/pod-name\uff0c\u8be5\u6807\u7b7e\u503c\u8bbe\u7f6e\u4e3a Pod \u540d\u79f0\u3002 \u8fd9\u4e2a\u6807\u7b7e\u5141\u8bb8\u7ed9 StatefulSet \u4e2d\u7684\u7279\u5b9a Pod \u7ed1\u5b9a\u4e00\u4e2a Service \u90e8\u7f72\u548c\u6269\u7f29\u4fdd\u8bc1 \u5bf9\u4e8e\u5305\u542b N \u4e2a \u526f\u672c\u7684 StatefulSet\uff0c\u5f53\u90e8\u7f72 Pod \u65f6\uff0c\u5b83\u4eec\u662f\u4f9d\u6b21\u521b\u5efa\u7684\uff0c\u987a\u5e8f\u4e3a 0..N-1 \u5f53\u5220\u9664 Pod \u65f6\uff0c\u5b83\u4eec\u662f\u9006\u5e8f\u7ec8\u6b62\u7684\uff0c\u987a\u5e8f\u4e3a N-1..0 \u5728\u5c06\u7f29\u653e\u64cd\u4f5c\u5e94\u7528\u5230 Pod \u4e4b\u524d\uff0c\u5b83\u524d\u9762\u7684\u6240\u6709 Pod \u5fc5\u987b\u662f Running \u548c Ready \u72b6\u6001 \u5728 Pod \u7ec8\u6b62\u4e4b\u524d\uff0c\u6240\u6709\u7684\u7ee7\u4efb\u8005\u5fc5\u987b\u5b8c\u5168\u5173\u95ed \u66f4\u65b0\u7b56\u7565 StatefulSet \u7684 .spec.updateStrategy \u5b57\u6bb5\u8ba9 \u4f60\u53ef\u4ee5\u914d\u7f6e\u548c\u7981\u7528\u6389\u81ea\u52a8\u6eda\u52a8\u66f4\u65b0 Pod \u7684\u5bb9\u5668\u3001\u6807\u7b7e\u3001\u8d44\u6e90\u8bf7\u6c42\u6216\u9650\u5236\u3001\u4ee5\u53ca\u6ce8\u89e3 \u5f53 StatefulSet \u7684 .spec.updateStrategy.type \u8bbe\u7f6e\u4e3a OnDelete \u65f6\uff0c\u5b83\u7684\u63a7\u5236\u5668\u5c06\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0 StatefulSet \u4e2d\u7684 Pod\u3002 \u7528\u6237\u5fc5\u987b\u624b\u52a8\u5220\u9664 Pod \u4ee5\u4fbf\u8ba9\u63a7\u5236\u5668\u521b\u5efa\u65b0\u7684 Pod\uff0c\u4ee5\u6b64\u6765\u5bf9 StatefulSet \u7684 .spec.template \u7684\u53d8\u52a8\u4f5c\u51fa\u53cd\u5e94 \u6eda\u52a8\u66f4\u65b0 RollingUpdate \u66f4\u65b0\u7b56\u7565\u5bf9 StatefulSet \u4e2d\u7684 Pod \u6267\u884c\u81ea\u52a8\u7684\u6eda\u52a8\u66f4\u65b0\u3002 \u5728\u6ca1\u6709\u58f0\u660e .spec.updateStrategy \u65f6\uff0cRollingUpdate \u662f\u9ed8\u8ba4\u914d\u7f6e\u3002 \u5f53 StatefulSet \u7684 .spec.updateStrategy.type \u88ab\u8bbe\u7f6e\u4e3a RollingUpdate \u65f6\uff0c StatefulSet \u63a7\u5236\u5668\u4f1a\u5220\u9664\u548c\u91cd\u5efa StatefulSet \u4e2d\u7684\u6bcf\u4e2a Pod\u3002 \u5b83\u5c06\u6309\u7167\u4e0e Pod \u7ec8\u6b62\u76f8\u540c\u7684\u987a\u5e8f\uff08\u4ece\u6700\u5927\u5e8f\u53f7\u5230\u6700\u5c0f\u5e8f\u53f7\uff09\u8fdb\u884c\uff0c\u6bcf\u6b21\u66f4\u65b0\u4e00\u4e2a Pod\u3002 \u5b83\u4f1a\u7b49\u5230\u88ab\u66f4\u65b0\u7684 Pod \u8fdb\u5165 Running \u548c Ready \u72b6\u6001\uff0c\u7136\u540e\u518d\u66f4\u65b0\u5176\u524d\u8eab \u5206\u533a \u901a\u8fc7\u58f0\u660e .spec.updateStrategy.rollingUpdate.partition \u7684\u65b9\u5f0f\uff0cRollingUpdate \u66f4\u65b0\u7b56\u7565\u53ef\u4ee5\u5b9e\u73b0\u5206\u533a \u5982\u679c\u58f0\u660e\u4e86\u4e00\u4e2a\u5206\u533a\uff0c\u5f53 StatefulSet \u7684 .spec.template \u88ab\u66f4\u65b0\u65f6\uff0c \u6240\u6709\u5e8f\u53f7\u5927\u4e8e\u7b49\u4e8e\u8be5\u5206\u533a\u5e8f\u53f7\u7684 Pod \u90fd\u4f1a\u88ab\u66f4\u65b0\u3002 \u6240\u6709\u5e8f\u53f7\u5c0f\u4e8e\u8be5\u5206\u533a\u5e8f\u53f7\u7684 Pod \u90fd\u4e0d\u4f1a\u88ab\u66f4\u65b0\uff0c\u5e76\u4e14\uff0c\u5373\u4f7f\u4ed6\u4eec\u88ab\u5220\u9664\u4e5f\u4f1a\u4f9d\u636e\u4e4b\u524d\u7684\u7248\u672c\u8fdb\u884c\u91cd\u5efa \u5982\u679c StatefulSet \u7684 .spec.updateStrategy.rollingUpdate.partition \u5927\u4e8e\u5b83\u7684 .spec.replicas\uff0c\u5bf9\u5b83\u7684 .spec.template \u7684\u66f4\u65b0\u5c06\u4e0d\u4f1a\u4f20\u9012\u5230\u5b83\u7684 Pod \u5f3a\u5236\u56de\u6eda \u5728\u9ed8\u8ba4 Pod \u7ba1\u7406\u7b56\u7565(OrderedReady) \u4e0b\u4f7f\u7528 \u6eda\u52a8\u66f4\u65b0 \uff0c\u53ef\u80fd\u8fdb\u5165\u9700\u8981\u4eba\u5de5\u5e72\u9884\u624d\u80fd\u4fee\u590d\u7684\u635f\u574f\u72b6\u6001 \u5982\u679c\u66f4\u65b0\u540e Pod \u6a21\u677f\u914d\u7f6e\u8fdb\u5165\u65e0\u6cd5\u8fd0\u884c\u6216\u5c31\u7eea\u7684\u72b6\u6001\uff08\u4f8b\u5982\uff0c\u7531\u4e8e\u9519\u8bef\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 \u6216\u5e94\u7528\u7a0b\u5e8f\u7ea7\u914d\u7f6e\u9519\u8bef\uff09\uff0cStatefulSet \u5c06\u505c\u6b62\u56de\u6eda\u5e76\u7b49\u5f85 \u5728\u8fd9\u79cd\u72b6\u6001\u4e0b\uff0c\u4ec5\u5c06 Pod \u6a21\u677f\u8fd8\u539f\u4e3a\u6b63\u786e\u7684\u914d\u7f6e\u662f\u4e0d\u591f\u7684\uff0cStatefulSet \u5c06\u7ee7\u7eed\u7b49\u5f85\u635f\u574f\u72b6\u6001\u7684 Pod \u51c6\u5907\u5c31\u7eea\uff08\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\uff09\uff0c\u7136\u540e\u518d\u5c1d\u8bd5\u5c06\u5176\u6062\u590d\u4e3a\u6b63\u5e38\u5de5\u4f5c\u914d\u7f6e \u6062\u590d\u6a21\u677f\u540e\uff0c\u8fd8\u5fc5\u987b\u5220\u9664 StatefulSet \u5c1d\u8bd5\u4f7f\u7528\u9519\u8bef\u7684\u914d\u7f6e\u6765\u8fd0\u884c\u7684 Pod\u3002\u8fd9\u6837\uff0c StatefulSet \u624d\u4f1a\u5f00\u59cb\u4f7f\u7528\u88ab\u8fd8\u539f\u7684\u6a21\u677f\u6765\u91cd\u65b0\u521b\u5efa Pod DaemonSet \u786e\u4fdd\u5168\u90e8\uff08\u6216\u8005\u67d0\u4e9b\uff09\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a Pod \u7684\u526f\u672c\u3002 \u5f53\u6709\u8282\u70b9\u52a0\u5165\u96c6\u7fa4\u65f6\uff0c \u4e5f\u4f1a\u4e3a\u4ed6\u4eec\u65b0\u589e\u4e00\u4e2a Pod \u3002 \u5f53\u6709\u8282\u70b9\u4ece\u96c6\u7fa4\u79fb\u9664\u65f6\uff0c\u8fd9\u4e9b Pod \u4e5f\u4f1a\u88ab\u56de\u6536\u3002\u5220\u9664 DaemonSet \u5c06\u4f1a\u5220\u9664\u5b83\u521b\u5efa\u7684\u6240\u6709 Pod \u5178\u578b\u7528\u6cd5 \u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u96c6\u7fa4\u5b88\u62a4\u8fdb\u7a0b \u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u65e5\u5fd7\u6536\u96c6\u5b88\u62a4\u8fdb\u7a0b \u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u76d1\u63a7\u5b88\u62a4\u8fdb\u7a0b \u7f16\u5199 DaemonSet Spec apiVersion : apps/v1 kind : DaemonSet metadata : name : fluentd-elasticsearch namespace : kube-system labels : k8s-app : fluentd-logging spec : selector : matchLabels : name : fluentd-elasticsearch template : metadata : labels : name : fluentd-elasticsearch spec : tolerations : - key : node-role.kubernetes.io/master effect : NoSchedule containers : - name : fluentd-elasticsearch image : quay.io/fluentd_elasticsearch/fluentd:v2.5.2 resources : limits : memory : 200Mi requests : cpu : 100m memory : 200Mi volumeMounts : - name : varlog mountPath : /var/log - name : varlibdockercontainers mountPath : /var/lib/docker/containers readOnly : true terminationGracePeriodSeconds : 30 volumes : - name : varlog hostPath : path : /var/log - name : varlibdockercontainers hostPath : path : /var/lib/docker/containers Pod \u6a21\u677f \u5728 DaemonSet \u4e2d\u7684 Pod \u6a21\u677f\u5fc5\u987b\u5177\u6709\u4e00\u4e2a\u503c\u4e3a Always \u7684 RestartPolicy\u3002 \u5f53\u8be5\u503c\u672a\u6307\u5b9a\u65f6\uff0c\u9ed8\u8ba4\u662f Always \u4ec5\u5728\u67d0\u4e9b\u8282\u70b9\u4e0a\u8fd0\u884c Pod \u5982\u679c\u6307\u5b9a\u4e86 .spec.template.spec.nodeSelector\uff0cDaemonSet \u63a7\u5236\u5668\u5c06\u5728\u80fd\u591f\u4e0e Node \u9009\u62e9\u7b97\u7b26 \u5339\u914d\u7684\u8282\u70b9\u4e0a\u521b\u5efa Pod \u7c7b\u4f3c\u53ef\u4ee5\u6307\u5b9a .spec.template.spec.affinity\uff0c\u4e4b\u540e DaemonSet \u63a7\u5236\u5668 \u5c06\u5728\u80fd\u591f\u4e0e\u8282\u70b9\u4eb2\u548c\u6027 \u5339\u914d\u7684\u8282\u70b9\u4e0a\u521b\u5efa Pod Daemon Pods \u8c03\u5ea6 DaemonSet \u786e\u4fdd\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\u90fd\u8fd0\u884c\u8be5 Pod \u7684\u4e00\u4e2a\u526f\u672c DaemonSet Pods \u7531 DaemonSet \u63a7\u5236\u5668\u521b\u5efa\u548c\u8c03\u5ea6\uff0c\u5e26\u6765\u4e86\u4ee5\u4e0b\u95ee\u9898 Pod \u884c\u4e3a\u7684\u4e0d\u4e00\u81f4\u6027\uff1a\u6b63\u5e38 Pod \u5728\u88ab\u521b\u5efa\u540e\u7b49\u5f85\u8c03\u5ea6\u65f6\u5904\u4e8e Pending \u72b6\u6001\uff0c DaemonSet Pods \u521b\u5efa\u540e\u4e0d\u4f1a\u5904\u4e8e Pending \u72b6\u6001\u4e0b\u3002\u8fd9\u4f7f\u7528\u6237\u611f\u5230\u56f0\u60d1 Pod \u62a2\u5360 \u7531\u9ed8\u8ba4\u8c03\u5ea6\u5668\u5904\u7406\u3002\u542f\u7528\u62a2\u5360\u540e\uff0cDaemonSet \u63a7\u5236\u5668\u5c06\u5728\u4e0d\u8003\u8651 Pod \u4f18\u5148\u7ea7\u548c\u62a2\u5360 \u7684\u60c5\u51b5\u4e0b\u5236\u5b9a\u8c03\u5ea6\u51b3\u7b56 ScheduleDaemonSetPods \u5141\u8bb8\u60a8\u4f7f\u7528\u9ed8\u8ba4\u8c03\u5ea6\u5668\u800c\u4e0d\u662f DaemonSet \u63a7\u5236\u5668\u6765\u8c03\u5ea6 DaemonSets\uff0c\u65b9\u6cd5\u662f\u5c06 NodeAffinity \u6761\u4ef6\u800c\u4e0d\u662f .spec.nodeName \u6761\u4ef6\u6dfb\u52a0\u5230 DaemonSet Pods \u9ed8\u8ba4\u8c03\u5ea6\u5668\u63a5\u4e0b\u6765\u5c06 Pod \u7ed1\u5b9a\u5230\u76ee\u6807\u4e3b\u673a \u5982\u679c DaemonSet Pod \u7684\u8282\u70b9\u4eb2\u548c\u6027\u914d\u7f6e\u5df2\u5b58\u5728\uff0c\u5219\u88ab\u66ff\u6362 DaemonSet \u63a7\u5236\u5668\u4ec5\u5728\u521b\u5efa\u6216\u4fee\u6539 DaemonSet Pod \u65f6\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\uff0c \u5e76\u4e14\u4e0d\u4f1a\u66f4\u6539 DaemonSet \u7684 spec.template \u7cfb\u7edf\u4f1a\u81ea\u52a8\u6dfb\u52a0 node.kubernetes.io/unschedulable\uff1aNoSchedule \u5bb9\u5fcd\u5ea6\u5230 DaemonSet Pods\u3002\u5728\u8c03\u5ea6 DaemonSet Pod \u65f6\uff0c\u9ed8\u8ba4\u8c03\u5ea6\u5668\u4f1a\u5ffd\u7565 unschedulable \u8282\u70b9 nodeAffinity : requiredDuringSchedulingIgnoredDuringExecution : nodeSelectorTerms : - matchFields : - key : metadata.name operator : In values : - target-host-name \u4e0e Daemon Pods \u901a\u4fe1 \u63a8\u9001\uff08Push\uff09\uff1a\u914d\u7f6e DaemonSet \u4e2d\u7684 Pod\uff0c\u5c06\u66f4\u65b0\u53d1\u9001\u5230\u53e6\u4e00\u4e2a\u670d\u52a1\uff0c\u4f8b\u5982\u7edf\u8ba1\u6570\u636e\u5e93\u3002 \u8fd9\u4e9b\u670d\u52a1\u6ca1\u6709\u5ba2\u6237\u7aef NodeIP \u548c\u5df2\u77e5\u7aef\u53e3\uff1aDaemonSet \u4e2d\u7684 Pod \u53ef\u4ee5\u4f7f\u7528 hostPort\uff0c\u4ece\u800c\u53ef\u4ee5\u901a\u8fc7\u8282\u70b9 IP \u8bbf\u95ee\u5230 Pod\u3002\u5ba2\u6237\u7aef\u80fd\u901a\u8fc7\u67d0\u79cd\u65b9\u6cd5\u83b7\u53d6\u8282\u70b9 IP \u5217\u8868\uff0c\u5e76\u4e14\u57fa\u4e8e\u6b64\u4e5f\u53ef\u4ee5\u83b7\u53d6\u5230\u76f8\u5e94\u7684\u7aef\u53e3 DNS\uff1a\u521b\u5efa\u5177\u6709\u76f8\u540c Pod \u9009\u62e9\u7b97\u7b26\u7684 \u65e0\u5934\u670d\u52a1\uff0c \u901a\u8fc7\u4f7f\u7528 endpoints \u8d44\u6e90\u6216\u4ece DNS \u4e2d\u68c0\u7d22\u5230\u591a\u4e2a A \u8bb0\u5f55\u6765\u53d1\u73b0 DaemonSet Service\uff1a\u521b\u5efa\u5177\u6709\u76f8\u540c Pod \u9009\u62e9\u7b97\u7b26\u7684\u670d\u52a1\uff0c\u5e76\u4f7f\u7528\u8be5\u670d\u52a1\u968f\u673a\u8bbf\u95ee\u5230\u67d0\u4e2a\u8282\u70b9\u4e0a\u7684 \u5b88\u62a4\u8fdb\u7a0b\uff08\u6ca1\u6709\u529e\u6cd5\u8bbf\u95ee\u5230\u7279\u5b9a\u8282\u70b9\uff09 \u66f4\u65b0 DaemonSet \u5982\u679c\u8282\u70b9\u7684\u6807\u7b7e\u88ab\u4fee\u6539\uff0cDaemonSet \u5c06\u7acb\u523b\u5411\u65b0\u5339\u914d\u4e0a\u7684\u8282\u70b9\u6dfb\u52a0 Pod\uff0c \u540c\u65f6\u5220\u9664\u4e0d\u5339\u914d\u7684\u8282\u70b9\u4e0a\u7684 Pod \u4f60\u53ef\u4ee5\u4fee\u6539 DaemonSet \u521b\u5efa\u7684 Pod\u3002\u4e0d\u8fc7\u5e76\u975e Pod \u7684\u6240\u6709\u5b57\u6bb5\u90fd\u53ef\u66f4\u65b0 \u53ef\u4ee5\u5220\u9664\u4e00\u4e2a DaemonSet Job Job \u4f1a\u521b\u5efa\u4e00\u4e2a\u6216\u8005\u591a\u4e2a Pods\uff0c\u5e76\u786e\u4fdd\u6307\u5b9a\u6570\u91cf\u7684 Pods \u6210\u529f\u7ec8\u6b62 \u968f\u7740 Pods \u6210\u529f\u7ed3\u675f\uff0cJob \u8ddf\u8e2a\u8bb0\u5f55\u6210\u529f\u5b8c\u6210\u7684 Pods \u4e2a\u6570\u3002 \u5f53\u6570\u91cf\u8fbe\u5230\u6307\u5b9a\u7684\u6210\u529f\u4e2a\u6570\u9608\u503c\u65f6\uff0c\u4efb\u52a1\uff08\u5373 Job\uff09\u7ed3\u675f\u3002 \u5220\u9664 Job \u7684\u64cd\u4f5c\u4f1a\u6e05\u9664\u6240\u521b\u5efa\u7684\u5168\u90e8 Pods Job \u793a\u4f8b \u8ba1\u7b97 \u03c0 \u5230\u5c0f\u6570\u70b9\u540e 100 \u4f4d\uff0c\u5e76\u5c06\u7ed3\u679c\u6253\u5370\u51fa\u6765 apiVersion : batch/v1 kind : Job metadata : name : pi spec : template : spec : containers : - name : pi image : resouer/ubuntu-bc imagePullPolicy : Never command : [ \"sh\" , \"-c\" , \"echo 'scale=100; 4*a(1)' | bc -l \" ] restartPolicy : Never backoffLimit : 4 activeDeadlineSeconds : 100 kubectl logs $pods \u7f16\u5199 Job \u89c4\u7ea6 Job \u7684\u5e76\u884c\u6267\u884c \u975e\u5e76\u884c Job \u901a\u5e38\u53ea\u542f\u52a8\u4e00\u4e2a Pod\uff0c\u9664\u975e\u8be5 Pod \u5931\u8d25 \u5f53 Pod \u6210\u529f\u7ec8\u6b62\u65f6\uff0c\u7acb\u5373\u89c6 Job \u4e3a\u5b8c\u6210\u72b6\u6001 \u53ef\u4ee5\u4e0d\u8bbe\u7f6e spec.completions \u548c spec.parallelism\u3002 \u8fd9\u4e24\u4e2a\u5c5e\u6027\u90fd\u4e0d\u8bbe\u7f6e\u65f6\uff0c\u5747\u53d6\u9ed8\u8ba4\u503c 1 \u5177\u6709 \u786e\u5b9a\u5b8c\u6210\u8ba1\u6570 \u7684\u5e76\u884c Job .spec.completions \u4e3a\u6240\u9700\u8981\u7684\u5b8c\u6210\u4e2a\u6570\uff0c\u82e5\u4e0d\u8bbe\u7f6e spec.completions\uff0c\u9ed8\u8ba4\u503c\u4e3a .spec.parallelism\uff0c\u5176\u9ed8\u8ba4\u503c\u4e3a 1 Job \u7528\u6765\u4ee3\u8868\u6574\u4e2a\u4efb\u52a1\uff0c\u5f53\u5bf9\u5e94\u4e8e 1 \u548c .spec.completions \u4e4b\u95f4\u7684\u6bcf\u4e2a\u6574\u6570\u90fd\u5b58\u5728 \u4e00\u4e2a\u6210\u529f\u7684 Pod \u65f6\uff0cJob \u88ab\u89c6\u4e3a\u5b8c\u6210 \u5c1a\u672a\u5b9e\u73b0\uff1a\u6bcf\u4e2a Pod \u6536\u5230\u4e00\u4e2a\u4ecb\u4e8e 1 \u548c spec.completions \u4e4b\u95f4\u7684\u4e0d\u540c\u7d22\u5f15\u503c \u5e26 \u5de5\u4f5c\u961f\u5217 \u7684\u5e76\u884c Job \u4e0d\u53ef\u4ee5\u8bbe\u7f6e .spec.completions\uff0c\u4f46\u8981\u5c06.spec.parallelism \u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 \u591a\u4e2a Pod \u4e4b\u95f4\u5fc5\u987b\u76f8\u4e92\u534f\u8c03\uff0c\u6216\u8005\u501f\u52a9\u5916\u90e8\u670d\u52a1\u786e\u5b9a\u6bcf\u4e2a Pod \u8981\u5904\u7406\u54ea\u4e2a\u5de5\u4f5c\u6761\u76ee\u3002 \u4f8b\u5982\uff0c\u4efb\u4e00 Pod \u90fd\u53ef\u4ee5\u4ece\u5de5\u4f5c\u961f\u5217\u4e2d\u53d6\u8d70\u6700\u591a N \u4e2a\u5de5\u4f5c\u6761\u76ee \u6bcf\u4e2a Pod \u90fd\u53ef\u4ee5\u72ec\u7acb\u786e\u5b9a\u662f\u5426\u5176\u5b83 Pod \u90fd\u5df2\u5b8c\u6210\uff0c\u8fdb\u800c\u786e\u5b9a Job \u662f\u5426\u5b8c\u6210 \u5f53 Job \u4e2d \u4efb\u4f55 Pod \u6210\u529f\u7ec8\u6b62\uff0c\u4e0d\u518d\u521b\u5efa\u65b0 Pod \u4e00\u65e6\u81f3\u5c11 1 \u4e2a Pod \u6210\u529f\u5b8c\u6210\uff0c\u5e76\u4e14\u6240\u6709 Pod \u90fd\u5df2\u7ec8\u6b62\uff0c\u5373\u53ef\u5ba3\u544a Job \u6210\u529f\u5b8c\u6210 \u4e00\u65e6\u4efb\u4f55 Pod \u6210\u529f\u9000\u51fa\uff0c\u4efb\u4f55\u5176\u5b83 Pod \u90fd\u4e0d\u5e94\u518d\u5bf9\u6b64\u4efb\u52a1\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u6216\u751f\u6210\u4efb\u4f55\u8f93\u51fa\u3002 \u6240\u6709 Pod \u90fd\u5e94\u542f\u52a8\u9000\u51fa\u8fc7\u7a0b \u63a7\u5236\u5e76\u884c\u6027 \u5e76\u884c\u6027\u8bf7\u6c42\uff08.spec.parallelism\uff09\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4efb\u4f55\u975e\u8d1f\u6574\u6570\u3002 \u5982\u679c\u672a\u8bbe\u7f6e\uff0c\u5219\u9ed8\u8ba4\u4e3a 1\u3002 \u5982\u679c\u8bbe\u7f6e\u4e3a 0\uff0c\u5219 Job \u76f8\u5f53\u4e8e\u542f\u52a8\u4e4b\u540e\u4fbf\u88ab\u6682\u505c\uff0c\u76f4\u5230\u6b64\u503c\u88ab\u589e\u52a0 \u5b9e\u9645\u5e76\u884c\u6027\uff08\u5728\u4efb\u610f\u65f6\u523b\u8fd0\u884c\u72b6\u6001\u7684 Pods \u4e2a\u6570\uff09\u53ef\u80fd\u6bd4\u5e76\u884c\u6027\u8bf7\u6c42\u7565\u5927\u6216\u7565\u5c0f\uff0c \u539f\u56e0\u5982\u4e0b \u5bf9\u4e8e \u786e\u5b9a\u5b8c\u6210\u8ba1\u6570 Job\uff0c\u5b9e\u9645\u4e0a\u5e76\u884c\u6267\u884c\u7684 Pods \u4e2a\u6570\u4e0d\u4f1a\u8d85\u51fa\u5269\u4f59\u7684\u5b8c\u6210\u6570\u3002 \u5982\u679c .spec.parallelism \u503c\u8f83\u9ad8\uff0c\u4f1a\u88ab\u5ffd\u7565\u3002 \u5bf9\u4e8e \u5de5\u4f5c\u961f\u5217 Job\uff0c\u6709\u4efb\u4f55 Job \u6210\u529f\u7ed3\u675f\u4e4b\u540e\uff0c\u4e0d\u4f1a\u6709\u65b0\u7684 Pod \u542f\u52a8\u3002 \u4e0d\u8fc7\uff0c\u5269\u4e0b\u7684 Pods \u5141\u8bb8\u6267\u884c\u5b8c\u6bd5\u3002 \u5982\u679c Job \u63a7\u5236\u5668 \u6ca1\u6709\u6765\u5f97\u53ca\u4f5c\u51fa\u54cd\u5e94\uff0c\u6216\u8005 \u5982\u679c Job \u63a7\u5236\u5668\u56e0\u4e3a\u4efb\u4f55\u539f\u56e0\uff08\u4f8b\u5982\uff0c\u7f3a\u5c11 ResourceQuota \u6216\u8005\u6ca1\u6709\u6743\u9650\uff09\u65e0\u6cd5\u521b\u5efa Pods\u3002 Pods \u4e2a\u6570\u53ef\u80fd\u6bd4\u8bf7\u6c42\u7684 - \u6570\u76ee\u5c0f\u3002 Job \u63a7\u5236\u5668\u53ef\u80fd\u4f1a\u56e0\u4e3a\u4e4b\u524d\u540c\u4e00 Job \u4e2d Pod \u5931\u6548\u6b21\u6570\u8fc7\u591a\u800c\u538b\u5236\u65b0 Pod \u7684\u521b\u5efa\u3002 \u5f53 Pod \u5904\u4e8e\u4f53\u9762\u7ec8\u6b62\u8fdb\u7a0b\u4e2d\uff0c\u9700\u8981\u4e00\u5b9a\u65f6\u95f4\u624d\u80fd\u505c\u6b62\u3002 \u5904\u7406 Pod \u548c\u5bb9\u5668\u5931\u6548 Pod \u4e2d\u7684\u5bb9\u5668\u53ef\u80fd\u56e0\u4e3a\u591a\u79cd\u4e0d\u540c\u539f\u56e0\u5931\u6548 .spec.template.spec.restartPolicy = \"OnFailure\" Pod \u5219\u7ee7\u7eed\u7559\u5728\u5f53\u524d\u8282\u70b9\uff0c\u4f46\u5bb9\u5668\u4f1a\u88ab\u91cd\u65b0\u8fd0\u884c .spec.template.spec.restartPolicy = \"Never\" Job \u63a7\u5236\u5668\u4f1a\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 Pod \u5373\u4f7f\u5c06 .spec.parallelism \u8bbe\u7f6e\u4e3a 1\uff0c\u4e14\u5c06 .spec.completions \u8bbe\u7f6e\u4e3a 1\uff0c\u5e76\u4e14 .spec.template.spec.restartPolicy \u8bbe\u7f6e\u4e3a \"Never\"\uff0c\u540c\u4e00\u7a0b\u5e8f\u4ecd\u7136\u6709\u53ef\u80fd\u88ab\u542f\u52a8\u4e24\u6b21 Pod \u56de\u9000\u5931\u6548\u7b56\u7565 \u5728\u6709\u4e9b\u60c5\u5f62\u4e0b\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b Job \u5728\u7ecf\u5386\u82e5\u5e72\u6b21\u91cd\u8bd5\u4e4b\u540e\u76f4\u63a5\u8fdb\u5165\u5931\u8d25\u72b6\u6001\uff0c\u56e0\u4e3a\u8fd9\u5f88\u53ef\u80fd\u610f\u5473\u7740\u9047\u5230\u4e86\u914d\u7f6e\u9519\u8bef \u53ef\u4ee5\u5c06 .spec.backoffLimit \u8bbe\u7f6e\u4e3a\u89c6 Job \u4e3a\u5931\u8d25\u4e4b\u524d\u7684\u91cd\u8bd5\u6b21\u6570\uff0c\u5931\u6548\u56de\u9000\u7684\u9650\u5236\u503c\u9ed8\u8ba4\u4e3a 6\uff0c\u4e00\u65e6\u91cd\u8bd5\u6b21\u6570\u5230\u8fbe .spec.backoffLimit \u6240\u8bbe\u7684\u4e0a\u9650\uff0cJob \u4f1a\u88ab\u6807\u8bb0\u4e3a\u5931\u8d25\uff0c \u5176\u4e2d\u8fd0\u884c\u7684 Pods \u90fd\u4f1a\u88ab\u7ec8\u6b62 \u4e0e Job \u76f8\u5173\u7684\u5931\u6548\u7684 Pod \u4f1a\u88ab Job \u63a7\u5236\u5668\u91cd\u5efa\uff0c\u5e76\u4e14\u4ee5\u6307\u6570\u578b\u56de\u9000\u8ba1\u7b97\u91cd\u8bd5\u5ef6\u8fdf \uff08\u4ece 10 \u79d2\u300120 \u79d2\u5230 40 \u79d2\uff0c\u6700\u591a 6 \u5206\u949f\uff09\u3002 \u5f53 Job \u7684 Pod \u88ab\u5220\u9664\u65f6\uff0c\u6216\u8005 Pod \u6210\u529f\u65f6\u6ca1\u6709\u5176\u5b83 Pod \u5904\u4e8e\u5931\u8d25\u72b6\u6001\uff0c\u5931\u6548\u56de\u9000\u7684\u6b21\u6570\u4e5f\u4f1a\u88ab\u91cd\u7f6e\uff08\u4e3a 0\uff09 Job \u7ec8\u6b62\u4e0e\u6e05\u7406 Job \u5b8c\u6210\u65f6\u4e0d\u4f1a\u518d\u521b\u5efa\u65b0\u7684 Pod\uff0c\u4e0d\u8fc7\u5df2\u6709\u7684 Pod \u4e5f\u4e0d\u4f1a\u88ab\u5220\u9664\u3002 \u4fdd\u7559\u8fd9\u4e9b Pod \u4f7f\u5f97\u4f60\u53ef\u4ee5\u67e5\u770b\u5df2\u5b8c\u6210\u7684 Pod \u7684\u65e5\u5fd7\u8f93\u51fa\uff0c\u4ee5\u4fbf\u68c0\u67e5\u9519\u8bef\u3001\u8b66\u544a \u6216\u8005\u5176\u5b83\u8bca\u65ad\u6027\u8f93\u51fa \u4f60\u53ef\u4ee5\u4e3a Job \u7684 .spec.activeDeadlineSeconds \u8bbe\u7f6e\u4e00\u4e2a\u79d2\u6570\u503c\uff0c\u503c\u9002\u7528\u4e8e Job \u7684\u6574\u4e2a\u751f\u547d\u671f\uff0c\u65e0\u8bba Job \u521b\u5efa\u4e86\u591a\u5c11\u4e2a Pod\u3002 \u4e00\u65e6 Job \u8fd0\u884c\u65f6\u95f4\u8fbe\u5230 activeDeadlineSeconds \u79d2\uff0c\u5176\u6240\u6709\u8fd0\u884c\u4e2d\u7684 Pod \u90fd\u4f1a\u88ab\u7ec8\u6b62\uff0c\u5e76\u4e14 Job \u7684\u72b6\u6001\u66f4\u65b0\u4e3a type: Failed \u53ca reason: DeadlineExceeded Job \u7684 .spec.activeDeadlineSeconds \u4f18\u5148\u7ea7\u9ad8\u4e8e\u5176 .spec.backoffLimit \u8bbe\u7f6e \u81ea\u52a8\u6e05\u7406\u5b8c\u6210\u7684 Job \u5982\u679c Job \u7531\u67d0\u79cd\u66f4\u9ad8\u7ea7\u522b\u7684\u63a7\u5236\u5668\u6765\u7ba1\u7406\uff0c\u4f8b\u5982 CronJobs\uff0c \u5219 Job \u53ef\u4ee5\u88ab CronJob \u57fa\u4e8e\u7279\u5b9a\u7684\u6839\u636e\u5bb9\u91cf\u88c1\u5b9a\u7684\u6e05\u7406\u7b56\u7565\u6e05\u7406\u6389 \u4f7f\u7528\u7531 TTL \u63a7\u5236\u5668\u6240\u63d0\u4f9b \u7684 TTL \u673a\u5236\u81ea\u52a8\u6e05\u7406 Job \u8bbe\u7f6e Job \u7684 .spec.ttlSecondsAfterFinished \u5b57\u6bb5\uff0c\u53ef\u4ee5\u8ba9\u8be5\u63a7\u5236\u5668\u6e05\u7406\u6389 \u5df2\u7ed3\u675f\u7684\u8d44\u6e90 \u5982\u679c\u8be5\u5b57\u6bb5\u8bbe\u7f6e\u4e3a 0\uff0cJob \u5728\u7ed3\u675f\u4e4b\u540e\u7acb\u5373\u6210\u4e3a\u53ef\u88ab\u81ea\u52a8\u5220\u9664\u7684\u5bf9\u8c61 apiVersion : batch/v1 kind : Job metadata : name : pi spec : template : spec : containers : - name : pi image : resouer/ubuntu-bc imagePullPolicy : Never command : [ \"sh\" , \"-c\" , \"echo 'scale=100; 4*a(1)' | bc -l \" ] restartPolicy : Never backoffLimit : 4 activeDeadlineSeconds : 100 ttlSecondsAfterFinished : 100 CronJob Cron Job \u521b\u5efa\u57fa\u4e8e\u65f6\u95f4\u8c03\u5ea6\u7684 Jobs\uff0c\u5bf9\u4e8e\u521b\u5efa\u5468\u671f\u6027\u7684\u3001\u53cd\u590d\u91cd\u590d\u7684\u4efb\u52a1\u5f88\u6709\u7528\uff0c\u4f8b\u5982\u6267\u884c\u6570\u636e\u5907\u4efd\u6216\u8005\u53d1\u9001\u90ae\u4ef6\u3002 CronJobs \u4e5f\u53ef\u4ee5\u7528\u6765\u8ba1\u5212\u5728\u6307\u5b9a\u65f6\u95f4\u6765\u6267\u884c\u7684\u72ec\u7acb\u4efb\u52a1\uff0c\u4f8b\u5982\u8ba1\u5212\u5f53\u96c6\u7fa4\u770b\u8d77\u6765\u5f88\u7a7a\u95f2\u65f6 \u6267\u884c\u67d0\u4e2a Job CronJob \u793a\u4f8b apiVersion : batch/v1beta1 kind : CronJob metadata : name : hello spec : schedule : \"*/1 * * * *\" jobTemplate : spec : template : spec : containers : - name : hello image : busybox args : - /bin/sh - -c - date; echo Hello from the Kubernetes cluster restartPolicy : OnFailure CronJob \u9650\u5236 CronJob \u6839\u636e\u5176\u8ba1\u5212\u7f16\u6392\uff0c\u5728\u6bcf\u6b21\u8be5\u6267\u884c\u4efb\u52a1\u7684\u65f6\u5019\u5927\u7ea6\u4f1a\u521b\u5efa\u4e00\u4e2a Job \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u4f1a\u521b\u5efa\u4e24\u4e2a Job\uff0c\u6216\u8005\u4e0d\u4f1a\u521b\u5efa\u4efb\u4f55 Job \u5982\u679c startingDeadlineSeconds \u8bbe\u7f6e\u4e3a\u5f88\u5927\u7684\u6570\u503c\u6216\u672a\u8bbe\u7f6e\uff08\u9ed8\u8ba4\uff09\uff0c\u5e76\u4e14 concurrencyPolicy \u8bbe\u7f6e\u4e3a Allow\uff0c\u5219\u4f5c\u4e1a\u5c06\u59cb\u7ec8\u81f3\u5c11\u8fd0\u884c\u4e00\u6b21\uff1b\u5982\u679c startingDeadlineSeconds \u662f 200\uff0c\u5219\u63a7\u5236\u5668\u4f1a\u7edf\u8ba1\u5728\u8fc7\u53bb 200 \u79d2\u4e2d\u9519\u8fc7\u4e86\u591a\u5c11\u6b21 Job CronJob \u63a7\u5236\u5668\uff08Controller\uff09 \u68c0\u67e5\u4ece\u4e0a\u4e00\u6b21\u8c03\u5ea6\u7684\u65f6\u95f4\u70b9\u5230\u73b0\u5728\u6240\u9519\u8fc7\u4e86\u8c03\u5ea6\u6b21\u6570\u3002\u5982\u679c\u9519\u8fc7\u7684\u8c03\u5ea6\u6b21\u6570\u8d85\u8fc7 100 \u6b21\uff0c \u90a3\u4e48\u5b83\u5c31\u4e0d\u4f1a\u542f\u52a8\u8fd9\u4e2a\u4efb\u52a1\uff0c\u5e76\u8bb0\u5f55\u8fd9\u4e2a\u9519\u8bef \u672a\u80fd\u5728\u8c03\u5ea6\u65f6\u95f4\u5185\u521b\u5efa CronJob\uff0c\u5219\u8ba1\u4e3a\u9519\u8fc7 CronJonV2 --feature-gates=\"CronJobControllerV2=true\" \u8d44\u6e90\u56de\u6536 \u5bbf\u4e3b\u4e0e\u9644\u5c5e \u6bcf\u4e2a\u9644\u5c5e\u5bf9\u8c61\u5177\u6709\u4e00\u4e2a\u6307\u5411\u5176\u6240\u5c5e\u5bf9\u8c61\u7684 metadata.ownerReferences \u5b57\u6bb5 apiVersion : apps/v1 kind : ReplicaSet metadata : name : my-repset spec : replicas : 3 selector : matchLabels : pod-is-for : garbage-collection-example template : metadata : labels : pod-is-for : garbage-collection-example spec : containers : - name : app image : app:1.0.0 imagePullPolicy : Never \u901a\u8fc7 kubectl get pods --output=yaml \u67e5\u770b ownerReferences \u663e\u793a\u4e86 Pod \u7684\u5c5e\u4e3b\u662f\u540d\u4e3a my-repset \u7684 ReplicaSet ownerReferences : - apiVersion : apps/v1 blockOwnerDeletion : true controller : true kind : ReplicaSet name : my-repset uid : 00c1a24c-1418-4c3b-be9d-326915144427 \u63a7\u5236\u5783\u573e\u6536\u96c6\u5668\u5220\u9664\u9644\u5c5e \u5f53\u4f60\u5220\u9664\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9a\u8be5\u5bf9\u8c61\u7684\u9644\u5c5e\u662f\u5426\u4e5f\u81ea\u52a8\u5220\u9664 \u4e0d\u81ea\u52a8\u5220\u9664\u5b83\u7684\u9644\u5c5e\uff0c\u8fd9\u4e9b\u9644\u5c5e\u88ab\u79f0\u4f5c \u5b64\u7acb\u5bf9\u8c61\uff08Orphaned\uff09 \u81ea\u52a8\u5220\u9664\u9644\u5c5e\u7684\u884c\u4e3a\u4e5f\u79f0\u4e3a \u7ea7\u8054\u5220\u9664\uff08Cascading Deletion\uff09 \u7ea7\u8054\u5220\u9664\u6a21\u5f0f \u540e\u53f0\uff08Background\uff09 \u6a21\u5f0f \u524d\u53f0\uff08Foreground\uff09 \u6a21\u5f0f \u524d\u53f0\u7ea7\u8054\u5220\u9664 \u6839\u5bf9\u8c61\u9996\u5148\u8fdb\u5165 deletion in progress \u72b6\u6001\u3002 \u5728 deletion in progress \u72b6\u6001\uff0c\u4f1a\u6709\u5982\u4e0b\u7684\u60c5\u51b5 \u5bf9\u8c61\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7 REST API \u53ef\u89c1 \u5bf9\u8c61\u7684 deletionTimestamp \u5b57\u6bb5\u88ab\u8bbe\u7f6e \u5bf9\u8c61\u7684 metadata.finalizers \u5b57\u6bb5\u5305\u542b\u503c foregroundDeletion \u4e00\u65e6\u5bf9\u8c61\u88ab\u8bbe\u7f6e\u4e3a deletion in progress \u72b6\u6001\uff0c\u5783\u573e\u6536\u96c6\u5668\u4f1a\u5220\u9664\u5bf9\u8c61\u7684\u6240\u6709\u9644\u5c5e \u5783\u573e\u6536\u96c6\u5668\u5728\u5220\u9664\u4e86\u6240\u6709\u6709\u963b\u585e\u80fd\u529b\u7684\u9644\u5c5e\uff08\u5bf9\u8c61\u7684 ownerReference.blockOwnerDeletion=true\uff09 \u4e4b\u540e\uff0c\u5220\u9664\u5c5e\u4e3b\u5bf9\u8c61 \u53ea\u6709\u8bbe\u7f6e\u4e86 ownerReference.blockOwnerDeletion \u503c\u7684\u9644\u5c5e\u624d\u80fd\u963b\u6b62\u5220\u9664\u5c5e\u4e3b\u5bf9\u8c61 \u540e\u53f0\u7ea7\u8054\u5220\u9664 Kubernetes \u4f1a\u7acb\u5373\u5220\u9664\u5c5e\u4e3b\u5bf9\u8c61\uff0c\u4e4b\u540e\u5783\u573e\u6536\u96c6\u5668 \u4f1a\u5728\u540e\u53f0\u5220\u9664\u5176\u9644\u5c5e\u5bf9\u8c61 \u8bbe\u7f6e\u7ea7\u8054\u5220\u9664\u7b56\u7565 \u901a\u8fc7\u4e3a\u5c5e\u4e3b\u5bf9\u8c61\u8bbe\u7f6e deleteOptions.propagationPolicy \u5b57\u6bb5\uff0c\u53ef\u4ee5\u63a7\u5236\u7ea7\u8054\u5220\u9664\u7b56\u7565 \u53ef\u80fd\u7684\u53d6\u503c\u5305\u62ec\uff1aOrphan\u3001Foreground \u6216\u8005 Background \u793a\u4f8b \u4e0b\u9762\u662f\u4e00\u4e2a\u5728\u540e\u53f0\u5220\u9664\u9644\u5c5e\u5bf9\u8c61\u7684\u793a\u4f8b\uff1a kubectl proxy --port = 8080 curl -X DELETE localhost:8080/apis/apps/v1/namespaces/default/replicasets/my-repset \\ -d '{\"kind\":\"DeleteOptions\",\"apiVersion\":\"v1\",\"propagationPolicy\":\"Background\"}' \\ -H \"Content-Type: application/json\" \u4e0b\u9762\u662f\u4e00\u4e2a\u5728\u524d\u53f0\u4e2d\u5220\u9664\u9644\u5c5e\u5bf9\u8c61\u7684\u793a\u4f8b\uff1a kubectl proxy --port = 8080 curl -X DELETE localhost:8080/apis/apps/v1/namespaces/default/replicasets/my-repset \\ -d '{\"kind\":\"DeleteOptions\",\"apiVersion\":\"v1\",\"propagationPolicy\":\"Foreground\"}' \\ -H \"Content-Type: application/json\" \u4e0b\u9762\u662f\u4e00\u4e2a\u4ee4\u9644\u5c5e\u6210\u4e3a\u5b64\u7acb\u5bf9\u8c61\u7684\u793a\u4f8b\uff1a kubectl proxy --port = 8080 curl -X DELETE localhost:8080/apis/apps/v1/namespaces/default/replicasets/my-repset \\ -d '{\"kind\":\"DeleteOptions\",\"apiVersion\":\"v1\",\"propagationPolicy\":\"Orphan\"}' \\ -H \"Content-Type: application/json\" kubectl \u547d\u4ee4\u4e5f\u652f\u6301\u7ea7\u8054\u5220\u9664 \u901a\u8fc7\u8bbe\u7f6e --cascade \u4e3a true\uff0c\u53ef\u4ee5\u4f7f\u7528 kubectl \u81ea\u52a8\u5220\u9664\u9644\u5c5e\u5bf9\u8c61 \u8bbe\u7f6e --cascade \u4e3a false\uff0c\u4f1a\u4f7f\u9644\u5c5e\u5bf9\u8c61\u6210\u4e3a\u5b64\u7acb\u9644\u5c5e\u5bf9\u8c61\u3002 --cascade \u7684\u9ed8\u8ba4\u503c\u662f true","title":"\u8d44\u6e90\u7c7b\u578b"},{"location":"K8S/resources/#kubernetes","text":"","title":"Kubernetes \u5de5\u4f5c\u8d44\u6e90"},{"location":"K8S/resources/#_1","text":"\u4e3a\u4e86\u5b66\u4e60 Kubernetes \u5de5\u4f5c\u8d44\u6e90\u4f7f\u7528\u59ff\u52bf\uff0c\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a Http \u670d\u52a1\uff0c\u4ee3\u7801\u5982\u4e0b package main import ( \"fmt\" \"net/http\" ) func indexHandler ( w http . ResponseWriter , r * http . Request ) { fmt . Fprintf ( w , \"<h1>Test Homepage</h1>\" ) } func main () { http . HandleFunc ( \"/\" , indexHandler ) http . ListenAndServe ( \":8080\" , nil ) } Dockerfile \u5982\u4e0b FROM golang:latest AS build WORKDIR /app ENV CGO_ENABLED = 0 ENV GOPROXY = https://mirrors.aliyun.com/goproxy/,direct ENV GO111MODULE = on ENV GOOS = linux COPY . . RUN go mod tidy RUN go build -o app . FROM alpine:latest WORKDIR /root/ COPY --from = build /app . CMD [ \"./app\" ] \u5b8c\u6574\u4ee3\u7801\u5730\u5740","title":"\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u670d\u52a1"},{"location":"K8S/resources/#pod","text":"apiVersion : v1 kind : Pod metadata : name : app labels : - name : app spec : # hostAliases: # - ip: \"10.1.2.3\" # hostnames: # - \"foo.remote\" # - \"bar.remote\" shareProcessNamespace : true containers : - name : app image : app:1.0.0 imagePullPolicy : Never lifecycle : postStart : exec : command : [ \"/bin/sh\" , \"-c\" , \"echo Hello Test Start> /tmp/mylog\" ] preStop : exec : command : [ \"/bin/sh\" , \"-c\" , \"echo Hello Test End> /tmp/app/mylog\" ] volumeMounts : - mountPath : /tmp/app name : app-volume ports : - containerPort : 8080 hostPort : 8080 livenessProbe : exec : command : - cat - /tmp/app/healthy initialDelaySeconds : 5 periodSeconds : 5 volumes : - name : app-volume emptyDir : {}","title":"Pod"},{"location":"K8S/resources/#replicaset","text":"RepicaSet \u662f\u901a\u8fc7\u4e00\u7ec4\u5b57\u6bb5\u6765\u5b9a\u4e49\u7684\uff0c\u5305\u62ec\u4e00\u4e2a\u7528\u6765\u8bc6\u522b\u53ef\u83b7\u5f97\u7684 Pod \u7684\u96c6\u5408\u7684\u9009\u62e9\u7b97\u7b26\u3001\u4e00\u4e2a\u7528\u6765\u6807\u660e\u5e94\u8be5\u7ef4\u62a4\u7684\u526f\u672c\u4e2a\u6570\u7684\u6570\u503c\u3001\u4e00\u4e2a\u7528\u6765\u6307\u5b9a\u5e94\u8be5\u521b\u5efa\u65b0 Pod \u4ee5\u6ee1\u8db3\u526f\u672c\u4e2a\u6570\u6761\u4ef6\u65f6\u8981\u4f7f\u7528\u7684 Pod \u6a21\u677f\u7b49\u7b49\u3002 \u6bcf\u4e2a ReplicaSet \u90fd\u901a\u8fc7\u6839\u636e\u9700\u8981\u521b\u5efa\u548c \u5220\u9664 Pod \u4ee5\u4f7f\u5f97\u526f\u672c\u4e2a\u6570\u8fbe\u5230\u671f\u671b\u503c\uff0c \u8fdb\u800c\u5b9e\u73b0\u5176\u5b58\u5728\u4ef7\u503c\u3002\u5f53 ReplicaSet \u9700\u8981\u521b\u5efa\u65b0\u7684 Pod \u65f6\uff0c\u4f1a\u4f7f\u7528\u6240\u63d0\u4f9b\u7684 Pod \u6a21\u677f\u3002 ReplicaSet \u901a\u8fc7 Pod \u4e0a\u7684 metadata.ownerReferences \u5b57\u6bb5\u8fde\u63a5\u5230\u9644\u5c5e Pod\uff0c\u8be5\u5b57\u6bb5\u7ed9\u51fa\u5f53\u524d\u5bf9\u8c61\u7684\u5c5e\u4e3b\u8d44\u6e90\u3002 ReplicaSet \u6240\u83b7\u5f97\u7684 Pod \u90fd\u5728\u5176 ownerReferences \u5b57\u6bb5\u4e2d\u5305\u542b\u4e86\u5c5e\u4e3b ReplicaSet \u7684\u6807\u8bc6\u4fe1\u606f\u3002\u6b63\u662f\u901a\u8fc7\u8fd9\u4e00\u8fde\u63a5\uff0cReplicaSet \u77e5\u9053\u5b83\u6240\u7ef4\u62a4\u7684 Pod \u96c6\u5408\u7684\u72b6\u6001\uff0c \u5e76\u636e\u6b64\u8ba1\u5212\u5176\u64cd\u4f5c\u884c\u4e3a ReplicaSet \u4f7f\u7528\u5176\u9009\u62e9\u7b97\u7b26\u6765\u8fa8\u8bc6\u8981\u83b7\u5f97\u7684 Pod \u96c6\u5408 apiVersion : apps/v1 kind : ReplicaSet metadata : name : app-rs labels : app : app-rs tier : app-rs spec : # modify replicas according to your case replicas : 3 selector : matchLabels : tier : app-rs template : metadata : labels : tier : app-rs spec : containers : - name : app image : app:1.0.0 imagePullPolicy : Never ReplicaSet \u53ef\u4ee5\u88ab HPA \u81ea\u52a8\u7f29\u653e apiVersion : autoscaling/v1 kind : HorizontalPodAutoscaler metadata : name : frontend-scaler spec : scaleTargetRef : kind : ReplicaSet name : frontend minReplicas : 3 maxReplicas : 10 targetCPUUtilizationPercentage : 50","title":"ReplicaSet"},{"location":"K8S/resources/#deployments","text":"Deployment \u63a7\u5236\u5668\u4e3a Pods \u548c ReplicaSets \u63d0\u4f9b\u58f0\u660e\u5f0f\u7684\u66f4\u65b0\u80fd\u529b Deployment \u63a7\u5236\u5668\u6bcf\u6b21\u6ce8\u610f\u5230\u65b0\u7684 Deployment \u65f6\uff0c\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a ReplicaSet \u4ee5\u542f\u52a8\u6240\u9700\u7684 Pods \u5982\u679c\u66f4\u65b0\u4e86 Deployment\uff0c\u5219\u63a7\u5236\u6807\u7b7e\u5339\u914d .spec.selector \u4f46\u6a21\u677f\u4e0d\u5339\u914d .spec.template \u7684 Pods \u7684\u73b0\u6709 ReplicaSet \u88ab\u7f29\u5bb9\u3002\u6700\u7ec8\uff0c\u65b0\u7684 ReplicaSet \u7f29\u653e\u4e3a .spec.replicas \u4e2a\u526f\u672c\uff0c \u6240\u6709\u65e7 ReplicaSets \u7f29\u653e\u4e3a 0 \u4e2a\u526f\u672c apiVersion : apps/v1 kind : Deployment metadata : name : app-deployment labels : app : app spec : replicas : 3 selector : matchLabels : app : app template : metadata : labels : app : app spec : containers : - name : app image : app:1.0.0 ports : - containerPort : 8080 \u279c ~: k get deployment NAME READY UP-TO-DATE AVAILABLE AGE app-deployment 3 /3 3 3 7s \u279c ~: k get ReplicaSet NAME DESIRED CURRENT READY AGE app-deployment-77d4987499 3 3 3 10s \u279c ~: k get pod NAME READY STATUS RESTARTS AGE app-deployment-77d4987499-5jkj2 1 /1 Running 0 23s app-deployment-77d4987499-g7wcn 1 /1 Running 0 23s app-deployment-77d4987499-h2qsm 1 /1 Running 0 23s","title":"Deployments"},{"location":"K8S/resources/#deplyment","text":"\u66f4\u65b0\u955c\u50cf \u65b9\u5f0f 1 kubectl --record deployment.v1.apps/app-deployment set image deployment.v1.apps/app-deployment app = app:1.0.1 \u65b9\u5f0f 2 kubectl set image deployment/app-deployment app = app:1.0.2 --record \u65b9\u5f0f 3 kubectl edit deployment.v1.apps/app-deployment deployment \u4e8b\u4ef6\u8bb0\u5f55\u5982\u4e0b NewReplicaSet: app-deployment-76fb7489cd ( 3 /3 replicas created ) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 17m deployment-controller Scaled up replica set app-deployment-77d4987499 to 3 Normal ScalingReplicaSet 4m30s deployment-controller Scaled up replica set app-deployment-64fcd57fb to 1 Normal ScalingReplicaSet 4m28s deployment-controller Scaled down replica set app-deployment-77d4987499 to 2 Normal ScalingReplicaSet 4m28s deployment-controller Scaled up replica set app-deployment-64fcd57fb to 2 Normal ScalingReplicaSet 4m27s deployment-controller Scaled down replica set app-deployment-77d4987499 to 1 Normal ScalingReplicaSet 4m27s deployment-controller Scaled up replica set app-deployment-64fcd57fb to 3 Normal ScalingReplicaSet 4m26s deployment-controller Scaled down replica set app-deployment-77d4987499 to 0 Normal ScalingReplicaSet 107s deployment-controller Scaled up replica set app-deployment-647bb69489 to 1 Normal ScalingReplicaSet 106s deployment-controller Scaled down replica set app-deployment-64fcd57fb to 2 Normal ScalingReplicaSet 106s deployment-controller Scaled up replica set app-deployment-647bb69489 to 2 \u5f53\u7b2c\u4e00\u6b21\u521b\u5efa Deployment \u65f6\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a ReplicaSet \u5e76\u5c06\u5176\u76f4\u63a5\u6269\u5bb9\u81f3 3 \u4e2a\u526f\u672c \u66f4\u65b0 Deployment \u65f6\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 ReplicaSet \uff0c\u5e76\u5c06\u5176\u6269\u5bb9\u4e3a 1\uff0c\u7136\u540e\u5c06\u65e7 ReplicaSet \u7f29\u5bb9\u5230 2\uff0c \u4ee5\u4fbf\u81f3\u5c11\u6709 2 \u4e2a Pod \u53ef\u7528\u4e14\u6700\u591a\u521b\u5efa 4 \u4e2a Pod \u7136\u540e\uff0c\u5b83\u4f7f\u7528\u76f8\u540c\u7684\u6eda\u52a8\u66f4\u65b0\u7b56\u7565\u7ee7\u7eed\u5bf9\u65b0\u7684 ReplicaSet \u6269\u5bb9\u5e76\u5bf9\u65e7\u7684 ReplicaSet \u7f29\u5bb9\u3002 \u6700\u540e\uff0c\u4f60\u5c06\u6709 3 \u4e2a\u53ef\u7528\u7684\u526f\u672c\u5728\u65b0\u7684 ReplicaSet \u4e2d\uff0c\u65e7 ReplicaSet \u5c06\u7f29\u5bb9\u5230 0","title":"\u66f4\u65b0 Deplyment"},{"location":"K8S/resources/#deployment","text":"\u68c0\u67e5\u4e0a\u7ebf\u7248\u672c \u279c ~: kubectl rollout history deployment.v1.apps/app-deployment deployment.apps/app-deployment REVISION CHANGE-CAUSE 1 <none> 2 kubectl deployment.v1.apps/app-deployment set image deployment.v1.apps/app-deployment app = app:1.0.1 --record = true 3 kubectl set image deployment/app-deployment app = app:1.0.2 --record = true 4 kubectl set image deployment/app-deployment app = app:1.0.2 --record = true \u67e5\u770b\u4fee\u8ba2\u5386\u53f2\u7684\u8be6\u7ec6\u4fe1\u606f \u279c ~: kubectl rollout history deployment.v1.apps/app-deployment --revision = 2 deployment.apps/app-deployment with revision #2 Pod Template: Labels: app = app pod-template-hash = 64fcd57fb Annotations: kubernetes.io/change-cause: kubectl deployment.v1.apps/app-deployment set image deployment.v1.apps/app-deployment app = app:1.0.1 --record = true Containers: app: Image: app:1.0.1 Port: 8080 /TCP Host Port: 0 /TCP Environment: <none> Mounts: <none> Volumes: <none> \u56de\u6eda\u5230\u4e4b\u524d\u7684\u4fee\u8ba2\u7248\u672c \u64a4\u6d88\u5f53\u524d\u4e0a\u7ebf\u5e76\u56de\u6eda\u5230\u4ee5\u524d\u7684\u4fee\u8ba2\u7248\u672c \u279c ~: kubectl rollout undo deployment.v1.apps/app-deployment deployment.apps/app-deployment rolled back \u4f1a\u6eda\u5230\u6307\u5b9a\u7248\u672c \u279c ~: kubectl rollout undo deployment.v1.apps/app-deployment --to-revision = 2 deployment.apps/app-deployment rolled back","title":"\u56de\u6eda Deployment"},{"location":"K8S/resources/#deployment_1","text":"\u7f29\u653e \u547d\u4ee4 \u279c ~: kubectl scale deployment.v1.apps/app-deployment --replicas = 3 \u6c34\u5e73\u81ea\u52a8\u7f29\u653e \u279c ~: kubectl autoscale deployment.v1.apps/app-deployment --min = 10 --max = 15 --cpu-percent = 80 \u6bd4\u4f8b\u7f29\u653e RollingUpdate \u7684 Deployment \u652f\u6301\u540c\u65f6\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u591a\u4e2a\u7248\u672c\u3002\u5f53\u81ea\u52a8\u7f29\u653e\u5668\u7f29\u653e\u5904\u4e8e\u4e0a\u7ebf\u8fdb\u7a0b\uff08\u4ecd\u5728\u8fdb\u884c\u4e2d\u6216\u6682\u505c\uff09\u4e2d\u7684 RollingUpdate Deployment \u65f6\uff0c Deployment \u63a7\u5236\u5668\u4f1a\u5e73\u8861\u73b0\u6709\u7684\u6d3b\u8dc3\u72b6\u6001\u7684 ReplicaSets\uff08\u542b Pods \u7684 ReplicaSets\uff09\u4e2d\u7684\u989d\u5916\u526f\u672c\uff0c \u4ee5\u964d\u4f4e\u98ce\u9669\u3002\u8fd9\u79f0\u4e3a \u6bd4\u4f8b\u7f29\u653e\uff08Proportional Scaling\uff09","title":"\u7f29\u653e Deployment"},{"location":"K8S/resources/#deployment_2","text":"\u5728\u89e6\u53d1\u4e00\u4e2a\u6216\u591a\u4e2a\u66f4\u65b0\u4e4b\u524d\u6682\u505c Deployment\uff0c\u7136\u540e\u518d\u6062\u590d\u5176\u6267\u884c \u4f8b\u5982 \u279c ~: kubectl rollout pause deployment.v1.apps/app-deployment deployment.apps/app-deployment paused \u279c ~: kubectl set resources deployment.v1.apps/app-deployment -c = app --limits = cpu = 200m,memory = 512Mi deployment.apps/app-deployment resource requirements updated \u279c ~: kubectl rollout resume deployment.v1.apps/app-deployment deployment.apps/nginx-deployment resumed \u279c ~: kubectl get rs -w deployment.apps/nginx-deployment resumed","title":"\u6682\u505c\u3001\u6062\u590d Deployment"},{"location":"K8S/resources/#deployment_3","text":"\u72b6\u6001\u67e5\u8be2 \u279c ~: kubectl rollout status deployment.v1.apps/nginx-deployment \u8fdb\u884c\u4e2d\u7684 Deployment \u51fa\u73b0\u573a\u666f Deployment \u521b\u5efa\u65b0\u7684 ReplicaSet Deployment \u6b63\u5728\u4e3a\u5176\u6700\u65b0\u7684 ReplicaSet \u6269\u5bb9 Deployment \u6b63\u5728\u4e3a\u5176\u65e7\u6709\u7684 ReplicaSet(s) \u7f29\u5bb9 \u65b0\u7684 Pods \u5df2\u7ecf\u5c31\u7eea\u6216\u8005\u53ef\u7528\uff08\u5c31\u7eea\u81f3\u5c11\u6301\u7eed\u4e86 MinReadySeconds \u79d2\uff09 \u5b8c\u6210\u7684 Deployment \u51fa\u73b0\u573a\u666f \u4e0e Deployment \u5173\u8054\u7684\u6240\u6709\u526f\u672c\u90fd\u5df2\u66f4\u65b0\u5230\u6307\u5b9a\u7684\u6700\u65b0\u7248\u672c\uff0c\u8fd9\u610f\u5473\u7740\u4e4b\u524d\u8bf7\u6c42\u7684\u6240\u6709\u66f4\u65b0\u90fd\u5df2\u5b8c\u6210 \u4e0e Deployment \u5173\u8054\u7684\u6240\u6709\u526f\u672c\u90fd\u53ef\u7528 \u672a\u8fd0\u884c Deployment \u7684\u65e7\u526f\u672c \u5931\u8d25\u7684 Deployment Deployment \u53ef\u80fd\u4e00\u76f4\u5904\u4e8e\u672a\u5b8c\u6210\u72b6\u6001\uff0c\u51fa\u73b0\u573a\u666f\u5982\u4e0b \u914d\u989d\uff08Quota\uff09\u4e0d\u8db3 \u5c31\u7eea\u63a2\u6d4b\uff08Readiness Probe\uff09\u5931\u8d25 \u955c\u50cf\u62c9\u53d6\u9519\u8bef \u6743\u9650\u4e0d\u8db3 \u9650\u5236\u8303\u56f4\uff08Limit Ranges\uff09\u95ee\u9898 \u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u914d\u7f6e\u9519\u8bef \u68c0\u6d4b\u65b9\u5f0f \u5728 Deployment \u89c4\u7ea6\u4e2d\u6307\u5b9a\u622a\u6b62\u65f6\u95f4\u53c2\u6570\uff1a.spec.progressDeadlineSeconds \u279c ~: kubectl patch deployment.v1.apps/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}' \u4e00\u65e6\u8d85\u8fc7 Deployment \u8fdb\u5ea6\u9650\u671f\uff0cKubernetes \u5c06\u66f4\u65b0\u72b6\u6001\u548c\u8fdb\u5ea6\u72b6\u51b5\u7684\u539f\u56e0 Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing False ProgressDeadlineExceeded ReplicaFailure True FailedCreate","title":"Deployment \u72b6\u6001"},{"location":"K8S/resources/#_2","text":"\u5728 Deployment \u4e2d\u8bbe\u7f6e .spec.revisionHistoryLimit \u5b57\u6bb5\u4ee5\u6307\u5b9a\u4fdd\u7559\u6b64 Deployment \u7684\u591a\u5c11\u4e2a\u65e7\u6709 ReplicaSet\u3002\u5176\u4f59\u7684 ReplicaSet \u5c06\u5728\u540e\u53f0\u88ab\u5783\u573e\u56de\u6536\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u503c\u4e3a 10 \u5c06\u6b64\u5b57\u6bb5\u8bbe\u7f6e\u4e3a 0 \u5c06\u5bfc\u81f4 Deployment \u7684\u6240\u6709\u5386\u53f2\u8bb0\u5f55\u88ab\u6e05\u7a7a\uff0c\u56e0\u6b64 Deployment \u5c06\u65e0\u6cd5\u56de\u6eda","title":"\u6e05\u7406\u7b56\u7565"},{"location":"K8S/resources/#deployment_4","text":"apiVersion\uff0ckind \u548c metadata Pod \u6a21\u677f .spec \u4e2d\u53ea\u6709 .spec.template \u548c .spec.selector \u662f\u5fc5\u9700\u7684\u5b57\u6bb5 .spec.template \u662f\u4e00\u4e2a Pod \u6a21\u677f \u526f\u672c .spec.replicas \u662f\u6307\u5b9a\u6240\u9700 Pod \u7684\u53ef\u9009\u5b57\u6bb5\u3002\u5b83\u7684\u9ed8\u8ba4\u503c\u662f 1 \u9009\u62e9\u7b97\u7b26 .spec.selector \u662f\u6307\u5b9a\u672c Deployment \u7684 Pod \u6807\u7b7e\u9009\u62e9\u7b97\u7b26\u7684\u5fc5\u9700\u5b57\u6bb5 \u5fc5\u987b\u5339\u914d .spec.template.metadata.labels\uff0c\u5426\u5219\u8bf7\u6c42\u4f1a\u88ab API \u62d2\u7edd \u7b56\u7565 .spec.strategy \u7b56\u7565\u6307\u5b9a\u7528\u4e8e\u7528\u65b0 Pods \u66ff\u6362\u65e7 Pods \u7684\u7b56\u7565 .spec.strategy.type \u53ef\u4ee5\u662f \u201cRecreate\u201d \u6216 \u201cRollingUpdate\u201d(\u9ed8\u8ba4) \u91cd\u65b0\u521b\u5efa Deployment \u5982\u679c .spec.strategy.type==Recreate\uff0c\u5728\u521b\u5efa\u65b0 Pods \u4e4b\u524d\uff0c\u6240\u6709\u73b0\u6709\u7684 Pods \u4f1a\u88ab\u6740\u6b7b \u6eda\u52a8\u66f4\u65b0 Deployment Deployment \u4f1a\u5728 .spec.strategy.type==RollingUpdate \u65f6\uff0c\u91c7\u53d6\u6eda\u52a8\u66f4\u65b0\u7684\u65b9\u5f0f\u66f4\u65b0 Pods\uff0c\u53ef\u4ee5\u6307\u5b9a maxUnavailable \u548c maxSurge \u6765\u63a7\u5236\u6eda\u52a8\u66f4\u65b0\u8fc7\u7a0b maxUnavailable .spec.strategy.rollingUpdate.maxUnavailable \u662f\u4e00\u4e2a\u53ef\u9009\u5b57\u6bb5\uff0c\u7528\u6765\u6307\u5b9a \u66f4\u65b0\u8fc7\u7a0b\u4e2d\u4e0d\u53ef\u7528\u7684 Pod \u7684\u4e2a\u6570\u4e0a\u9650\uff1b\u8be5\u503c\u53ef\u4ee5\u662f\u7edd\u5bf9\u6570\u5b57\uff08\u4f8b\u5982\uff0c5\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f \u6240\u9700 Pods \u7684\u767e\u5206\u6bd4\uff08\u4f8b\u5982\uff0c10%\uff09\u3002\u767e\u5206\u6bd4\u503c\u4f1a\u8f6c\u6362\u6210\u7edd\u5bf9\u6570\u5e76\u53bb\u9664\u5c0f\u6570\u90e8\u5206\u3002 \u5982\u679c .spec.strategy.rollingUpdate.maxSurge \u4e3a 0\uff0c\u5219\u6b64\u503c\u4e0d\u80fd\u4e3a 0\u3002 \u9ed8\u8ba4\u503c\u4e3a 25% maxSurge .spec.strategy.rollingUpdate.maxSurge \u662f\u4e00\u4e2a\u53ef\u9009\u5b57\u6bb5\uff0c\u7528\u6765\u6307\u5b9a\u53ef\u4ee5\u521b\u5efa\u7684\u8d85\u51fa \u671f\u671b Pod \u4e2a\u6570\u7684 Pod \u6570\u91cf\u3002\u6b64\u503c\u53ef\u4ee5\u662f\u7edd\u5bf9\u6570\uff08\u4f8b\u5982\uff0c5\uff09\u6216\u6240\u9700 Pods \u7684\u767e\u5206\u6bd4\uff08\u4f8b\u5982\uff0c10%\uff09\u3002 \u5982\u679c MaxUnavailable \u4e3a 0\uff0c\u5219\u6b64\u503c\u4e0d\u80fd\u4e3a 0\u3002\u767e\u5206\u6bd4\u503c\u4f1a\u901a\u8fc7\u5411\u4e0a\u53d6\u6574\u8f6c\u6362\u4e3a\u7edd\u5bf9\u6570\u3002 \u6b64\u5b57\u6bb5\u7684\u9ed8\u8ba4\u503c\u4e3a 25% \u8fdb\u5ea6\u671f\u9650\u79d2\u6570 .spec.progressDeadlineSeconds \u662f\u4e00\u4e2a\u53ef\u9009\u5b57\u6bb5\uff0c\u7528\u4e8e\u6307\u5b9a\u7cfb\u7edf\u5728\u62a5\u544a Deployment \u8fdb\u5c55\u5931\u8d25 \u4e4b\u524d\u7b49\u5f85 Deployment \u53d6\u5f97\u8fdb\u5c55\u7684\u79d2\u6570 \u5982\u679c\u6307\u5b9a\uff0c\u5219\u6b64\u5b57\u6bb5\u503c\u9700\u8981\u5927\u4e8e .spec.minReadySeconds \u53d6\u503c \u6700\u77ed\u5c31\u7eea\u65f6\u95f4 .spec.minReadySeconds \u662f\u4e00\u4e2a\u53ef\u9009\u5b57\u6bb5\uff0c\u7528\u4e8e\u6307\u5b9a\u65b0\u521b\u5efa\u7684 Pod \u5728\u6ca1\u6709\u4efb\u610f\u5bb9\u5668\u5d29\u6e83\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u5c31\u7eea\u65f6\u95f4\uff0c \u53ea\u6709\u8d85\u51fa\u8fd9\u4e2a\u65f6\u95f4 Pod \u624d\u88ab\u89c6\u4e3a\u53ef\u7528\u3002\u9ed8\u8ba4\u503c\u4e3a 0\uff08Pod \u5728\u51c6\u5907\u5c31\u7eea\u540e\u7acb\u5373\u5c06\u88ab\u89c6\u4e3a\u53ef\u7528\uff09 \u4fee\u8ba2\u5386\u53f2\u9650\u5236 Deployment \u7684\u4fee\u8ba2\u5386\u53f2\u8bb0\u5f55\u5b58\u50a8\u5728\u5b83\u6240\u63a7\u5236\u7684 ReplicaSets \u4e2d .spec.revisionHistoryLimit \u662f\u4e00\u4e2a\u53ef\u9009\u5b57\u6bb5\uff0c\u7528\u6765\u8bbe\u5b9a\u51fa\u4e8e\u4f1a\u6eda\u76ee\u7684\u6240\u8981\u4fdd\u7559\u7684\u65e7 ReplicaSet \u6570\u91cf\u3002 \u8fd9\u4e9b\u65e7 ReplicaSet \u4f1a\u6d88\u8017 etcd \u4e2d\u7684\u8d44\u6e90\uff0c\u5e76\u5360\u7528 kubectl get rs \u7684\u8f93\u51fa \u6bcf\u4e2a Deployment \u4fee\u8ba2\u7248\u672c\u7684\u914d\u7f6e\u90fd\u5b58\u50a8\u5728\u5176 ReplicaSets \u4e2d\uff1b\u56e0\u6b64\uff0c\u4e00\u65e6\u5220\u9664\u4e86\u65e7\u7684 ReplicaSet\uff0c \u5c06\u5931\u53bb\u56de\u6eda\u5230 Deployment \u7684\u5bf9\u5e94\u4fee\u8ba2\u7248\u672c\u7684\u80fd\u529b\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7cfb\u7edf\u4fdd\u7559 10 \u4e2a\u65e7 ReplicaSet\uff0c\u4f46\u5176\u7406\u60f3\u503c\u53d6\u51b3\u4e8e\u65b0 Deployment \u7684\u9891\u7387\u548c\u7a33\u5b9a\u6027 paused .spec.paused \u662f\u7528\u4e8e\u6682\u505c\u548c\u6062\u590d Deployment \u7684\u53ef\u9009\u5e03\u5c14\u5b57\u6bb5\u3002 \u6682\u505c\u7684 Deployment \u548c\u672a\u6682\u505c\u7684 Deployment \u7684\u552f\u4e00\u533a\u522b\u662f Deployment \u5904\u4e8e\u6682\u505c\u72b6\u6001\u65f6\uff0c PodTemplateSpec \u7684\u4efb\u4f55\u4fee\u6539\u90fd\u4e0d\u4f1a\u89e6\u53d1\u65b0\u7684\u4e0a\u7ebf\u3002 Deployment \u5728\u521b\u5efa\u65f6\u662f\u9ed8\u8ba4\u4e0d\u4f1a\u5904\u4e8e\u6682\u505c\u72b6\u6001","title":"Deployment \u89c4\u7ea6"},{"location":"K8S/resources/#statefulsets","text":"StatefulSet \u662f\u7528\u6765\u7ba1\u7406\u6709\u72b6\u6001\u5e94\u7528\u7684\u5de5\u4f5c\u8d1f\u8f7d API \u5bf9\u8c61\uff1b\u53ef\u4ee5\u7528\u6765\u7ba1\u7406\u67d0 Pod \u96c6\u5408\u7684\u90e8\u7f72\u548c\u6269\u7f29\uff0c \u5e76\u4e3a\u8fd9\u4e9b Pod \u63d0\u4f9b\u6301\u4e45\u5b58\u50a8\u548c\u6301\u4e45\u6807\u8bc6\u7b26 \u548c Deployment \u7c7b\u4f3c\uff0c StatefulSet \u7ba1\u7406\u57fa\u4e8e\u76f8\u540c\u5bb9\u5668\u89c4\u7ea6\u7684\u4e00\u7ec4 Pod \u4f46\u548c Deployment \u4e0d\u540c\u7684\u662f\uff0c StatefulSet \u4e3a\u5b83\u4eec\u7684\u6bcf\u4e2a Pod \u7ef4\u62a4\u4e86\u4e00\u4e2a\u6709\u7c98\u6027\u7684 ID\uff0c\u8fd9\u4e9b Pod \u662f\u57fa\u4e8e\u76f8\u540c\u7684\u89c4\u7ea6\u6765\u521b\u5efa\u7684\uff0c \u4f46\u662f\u4e0d\u80fd\u76f8\u4e92\u66ff\u6362\uff1a\u65e0\u8bba\u600e\u4e48\u8c03\u5ea6\uff0c\u6bcf\u4e2a Pod \u90fd\u6709\u4e00\u4e2a\u6c38\u4e45\u4e0d\u53d8\u7684 ID","title":"StatefulSets"},{"location":"K8S/resources/#_3","text":"\u7ed9\u5b9a Pod \u7684\u5b58\u50a8\u5fc5\u987b\u7531 PersistentVolume \u9a71\u52a8 \u57fa\u4e8e\u6240\u8bf7\u6c42\u7684 storage class \u6765\u63d0\u4f9b\uff0c\u6216\u8005\u7531\u7ba1\u7406\u5458\u9884\u5148\u63d0\u4f9b \u5220\u9664\u6216\u8005\u6536\u7f29 StatefulSet \u5e76\u4e0d\u4f1a\u5220\u9664\u5b83\u5173\u8054\u7684\u5b58\u50a8\u5377\u3002 \u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\uff0c\u5b83\u901a\u5e38\u6bd4\u81ea\u52a8\u6e05\u9664 StatefulSet \u6240\u6709\u76f8\u5173\u7684\u8d44\u6e90\u66f4\u6709\u4ef7\u503c StatefulSet \u5f53\u524d\u9700\u8981 Headless Service \u6765\u8d1f\u8d23 Pod \u7684\u7f51\u7edc\u6807\u8bc6\u3002\u4f60\u9700\u8981\u8d1f\u8d23\u521b\u5efa\u6b64\u670d\u52a1 \u5f53\u5220\u9664 StatefulSets \u65f6\uff0cStatefulSet \u4e0d\u63d0\u4f9b\u4efb\u4f55\u7ec8\u6b62 Pod \u7684\u4fdd\u8bc1\u3002 \u4e3a\u4e86\u5b9e\u73b0 StatefulSet \u4e2d\u7684 Pod \u53ef\u4ee5\u6709\u5e8f\u5730\u4e14\u4f53\u9762\u5730\u7ec8\u6b62\uff0c\u53ef\u4ee5\u5728\u5220\u9664\u4e4b\u524d\u5c06 StatefulSet \u7f29\u653e\u4e3a 0 \u5728\u9ed8\u8ba4 Pod \u7ba1\u7406\u7b56\u7565(OrderedReady) \u65f6\u4f7f\u7528 \u6eda\u52a8\u66f4\u65b0\uff0c\u53ef\u80fd\u8fdb\u5165\u9700\u8981\u4eba\u5de5\u5e72\u9884 \u624d\u80fd\u4fee\u590d\u7684\u635f\u574f\u72b6\u6001","title":"\u9650\u5236"},{"location":"K8S/resources/#_4","text":"apiVersion : v1 kind : Service metadata : name : app labels : app : app spec : selector : app : app clusterIP : None ports : - name : default protocol : TCP port : 8080 targetPort : 8080 --- apiVersion : apps/v1 kind : StatefulSet metadata : name : app spec : selector : matchLabels : app : app serviceName : \"app\" replicas : 3 template : metadata : labels : app : app spec : terminationGracePeriodSeconds : 10 containers : - name : app image : app:1.0.3 imagePullPolicy : Never ports : - containerPort : 8080 name : app","title":"\u793a\u4f8b"},{"location":"K8S/resources/#pod_1","text":"\u5fc5\u987b\u8bbe\u7f6e StatefulSet \u7684 .spec.selector \u5b57\u6bb5\uff0c\u4f7f\u4e4b\u5339\u914d\u5176\u5728 .spec.template.metadata.labels \u4e2d\u8bbe\u7f6e\u7684\u6807\u7b7e","title":"Pod \u9009\u62e9\u7b97\u7b26"},{"location":"K8S/resources/#pod_2","text":"StatefulSet Pod \u5177\u6709\u552f\u4e00\u7684\u6807\u8bc6\uff0c\u8be5\u6807\u8bc6\u5305\u62ec\u987a\u5e8f\u6807\u8bc6\u3001\u7a33\u5b9a\u7684\u7f51\u7edc\u6807\u8bc6\u548c\u7a33\u5b9a\u7684\u5b58\u50a8\u3002 \u8be5\u6807\u8bc6\u548c Pod \u662f\u7ed1\u5b9a\u7684\uff0c\u4e0d\u7ba1\u5b83\u88ab\u8c03\u5ea6\u5728\u54ea\u4e2a\u8282\u70b9\u4e0a \u6709\u5e8f\u7d22\u5f15 \u5bf9\u4e8e\u5177\u6709 N \u4e2a\u526f\u672c\u7684 StatefulSet\uff0cStatefulSet \u4e2d\u7684\u6bcf\u4e2a Pod \u5c06\u88ab\u5206\u914d\u4e00\u4e2a\u6574\u6570\u5e8f\u53f7\uff0c \u4ece 0 \u5230 N-1\uff0c\u8be5\u5e8f\u53f7\u5728 StatefulSet \u4e0a\u662f\u552f\u4e00\u7684 \u7a33\u5b9a\u7684\u7f51\u7edc ID StatefulSet \u4e2d\u7684\u6bcf\u4e2a Pod \u6839\u636e StatefulSet \u7684\u540d\u79f0\u548c Pod \u7684\u5e8f\u53f7\u6d3e\u751f\u51fa\u5b83\u7684\u4e3b\u673a\u540d \u7ec4\u5408\u4e3b\u673a\u540d\u7684\u683c\u5f0f\u4e3a \\((StatefulSet \u540d\u79f0)-\\) (\u5e8f\u53f7) StatefulSet \u53ef\u4ee5\u4f7f\u7528 Headless Service \u63a7\u5236\u5b83\u7684 Pod \u7684\u7f51\u7edc\u57df\u3002\u7ba1\u7406\u57df\u7684\u8fd9\u4e2a\u670d\u52a1\u7684\u683c\u5f0f\u4e3a\uff1a \\((\u670d\u52a1\u540d\u79f0).\\) (\u547d\u540d\u7a7a\u95f4).svc.cluster.local\uff0c\u5176\u4e2d cluster.local \u662f\u96c6\u7fa4\u57df\u3002 \u4e00\u65e6\u6bcf\u4e2a Pod \u521b\u5efa\u6210\u529f\uff0c\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u5339\u914d\u7684 DNS \u5b50\u57df\uff0c\u683c\u5f0f\u4e3a\uff1a \\((pod \u540d\u79f0).\\) (\u6240\u5c5e\u670d\u52a1\u7684 DNS \u57df\u540d)\uff0c\u5176\u4e2d\u6240\u5c5e\u670d\u52a1\u7531 StatefulSet \u7684 serviceName \u57df\u6765\u8bbe\u5b9a\u3002 \u7a33\u5b9a\u7684\u5b58\u50a8 Kubernetes \u4e3a\u6bcf\u4e2a VolumeClaimTemplate \u521b\u5efa\u4e00\u4e2a PersistentVolume \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6bcf\u4e2a Pod \u5c06\u4f1a\u5f97\u5230\u57fa\u4e8e StorageClass my-storage-class \u63d0\u4f9b\u7684 1 Gib \u7684 PersistentVolume\u3002\u5982\u679c\u6ca1\u6709\u58f0\u660e StorageClass\uff0c\u5c31\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684 StorageClass\u3002 \u5f53\u4e00\u4e2a Pod \u88ab\u8c03\u5ea6\uff08\u91cd\u65b0\u8c03\u5ea6\uff09\u5230\u8282\u70b9\u4e0a\u65f6\uff0c\u5b83\u7684 volumeMounts \u4f1a\u6302\u8f7d\u4e0e\u5176 PersistentVolumeClaims \u76f8\u5173\u8054\u7684 PersistentVolume\u3002 \u8bf7\u6ce8\u610f\uff0c\u5f53 Pod \u6216\u8005 StatefulSet \u88ab\u5220\u9664\u65f6\uff0c\u4e0e PersistentVolumeClaims \u76f8\u5173\u8054\u7684 PersistentVolume \u5e76\u4e0d\u4f1a\u88ab\u5220\u9664\u3002\u8981\u5220\u9664\u5b83\u5fc5\u987b\u901a\u8fc7\u624b\u52a8\u65b9\u5f0f\u6765\u5b8c\u6210\u3002 Pod \u540d\u79f0\u6807\u7b7e \u5f53 StatefulSet \u63a7\u5236\u5668\uff08Controller\uff09 \u521b\u5efa Pod \u65f6\uff0c \u5b83\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u6807\u7b7e statefulset.kubernetes.io/pod-name\uff0c\u8be5\u6807\u7b7e\u503c\u8bbe\u7f6e\u4e3a Pod \u540d\u79f0\u3002 \u8fd9\u4e2a\u6807\u7b7e\u5141\u8bb8\u7ed9 StatefulSet \u4e2d\u7684\u7279\u5b9a Pod \u7ed1\u5b9a\u4e00\u4e2a Service","title":"Pod \u6807\u8bc6"},{"location":"K8S/resources/#_5","text":"\u5bf9\u4e8e\u5305\u542b N \u4e2a \u526f\u672c\u7684 StatefulSet\uff0c\u5f53\u90e8\u7f72 Pod \u65f6\uff0c\u5b83\u4eec\u662f\u4f9d\u6b21\u521b\u5efa\u7684\uff0c\u987a\u5e8f\u4e3a 0..N-1 \u5f53\u5220\u9664 Pod \u65f6\uff0c\u5b83\u4eec\u662f\u9006\u5e8f\u7ec8\u6b62\u7684\uff0c\u987a\u5e8f\u4e3a N-1..0 \u5728\u5c06\u7f29\u653e\u64cd\u4f5c\u5e94\u7528\u5230 Pod \u4e4b\u524d\uff0c\u5b83\u524d\u9762\u7684\u6240\u6709 Pod \u5fc5\u987b\u662f Running \u548c Ready \u72b6\u6001 \u5728 Pod \u7ec8\u6b62\u4e4b\u524d\uff0c\u6240\u6709\u7684\u7ee7\u4efb\u8005\u5fc5\u987b\u5b8c\u5168\u5173\u95ed","title":"\u90e8\u7f72\u548c\u6269\u7f29\u4fdd\u8bc1"},{"location":"K8S/resources/#_6","text":"StatefulSet \u7684 .spec.updateStrategy \u5b57\u6bb5\u8ba9 \u4f60\u53ef\u4ee5\u914d\u7f6e\u548c\u7981\u7528\u6389\u81ea\u52a8\u6eda\u52a8\u66f4\u65b0 Pod \u7684\u5bb9\u5668\u3001\u6807\u7b7e\u3001\u8d44\u6e90\u8bf7\u6c42\u6216\u9650\u5236\u3001\u4ee5\u53ca\u6ce8\u89e3 \u5f53 StatefulSet \u7684 .spec.updateStrategy.type \u8bbe\u7f6e\u4e3a OnDelete \u65f6\uff0c\u5b83\u7684\u63a7\u5236\u5668\u5c06\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0 StatefulSet \u4e2d\u7684 Pod\u3002 \u7528\u6237\u5fc5\u987b\u624b\u52a8\u5220\u9664 Pod \u4ee5\u4fbf\u8ba9\u63a7\u5236\u5668\u521b\u5efa\u65b0\u7684 Pod\uff0c\u4ee5\u6b64\u6765\u5bf9 StatefulSet \u7684 .spec.template \u7684\u53d8\u52a8\u4f5c\u51fa\u53cd\u5e94 \u6eda\u52a8\u66f4\u65b0 RollingUpdate \u66f4\u65b0\u7b56\u7565\u5bf9 StatefulSet \u4e2d\u7684 Pod \u6267\u884c\u81ea\u52a8\u7684\u6eda\u52a8\u66f4\u65b0\u3002 \u5728\u6ca1\u6709\u58f0\u660e .spec.updateStrategy \u65f6\uff0cRollingUpdate \u662f\u9ed8\u8ba4\u914d\u7f6e\u3002 \u5f53 StatefulSet \u7684 .spec.updateStrategy.type \u88ab\u8bbe\u7f6e\u4e3a RollingUpdate \u65f6\uff0c StatefulSet \u63a7\u5236\u5668\u4f1a\u5220\u9664\u548c\u91cd\u5efa StatefulSet \u4e2d\u7684\u6bcf\u4e2a Pod\u3002 \u5b83\u5c06\u6309\u7167\u4e0e Pod \u7ec8\u6b62\u76f8\u540c\u7684\u987a\u5e8f\uff08\u4ece\u6700\u5927\u5e8f\u53f7\u5230\u6700\u5c0f\u5e8f\u53f7\uff09\u8fdb\u884c\uff0c\u6bcf\u6b21\u66f4\u65b0\u4e00\u4e2a Pod\u3002 \u5b83\u4f1a\u7b49\u5230\u88ab\u66f4\u65b0\u7684 Pod \u8fdb\u5165 Running \u548c Ready \u72b6\u6001\uff0c\u7136\u540e\u518d\u66f4\u65b0\u5176\u524d\u8eab \u5206\u533a \u901a\u8fc7\u58f0\u660e .spec.updateStrategy.rollingUpdate.partition \u7684\u65b9\u5f0f\uff0cRollingUpdate \u66f4\u65b0\u7b56\u7565\u53ef\u4ee5\u5b9e\u73b0\u5206\u533a \u5982\u679c\u58f0\u660e\u4e86\u4e00\u4e2a\u5206\u533a\uff0c\u5f53 StatefulSet \u7684 .spec.template \u88ab\u66f4\u65b0\u65f6\uff0c \u6240\u6709\u5e8f\u53f7\u5927\u4e8e\u7b49\u4e8e\u8be5\u5206\u533a\u5e8f\u53f7\u7684 Pod \u90fd\u4f1a\u88ab\u66f4\u65b0\u3002 \u6240\u6709\u5e8f\u53f7\u5c0f\u4e8e\u8be5\u5206\u533a\u5e8f\u53f7\u7684 Pod \u90fd\u4e0d\u4f1a\u88ab\u66f4\u65b0\uff0c\u5e76\u4e14\uff0c\u5373\u4f7f\u4ed6\u4eec\u88ab\u5220\u9664\u4e5f\u4f1a\u4f9d\u636e\u4e4b\u524d\u7684\u7248\u672c\u8fdb\u884c\u91cd\u5efa \u5982\u679c StatefulSet \u7684 .spec.updateStrategy.rollingUpdate.partition \u5927\u4e8e\u5b83\u7684 .spec.replicas\uff0c\u5bf9\u5b83\u7684 .spec.template \u7684\u66f4\u65b0\u5c06\u4e0d\u4f1a\u4f20\u9012\u5230\u5b83\u7684 Pod \u5f3a\u5236\u56de\u6eda \u5728\u9ed8\u8ba4 Pod \u7ba1\u7406\u7b56\u7565(OrderedReady) \u4e0b\u4f7f\u7528 \u6eda\u52a8\u66f4\u65b0 \uff0c\u53ef\u80fd\u8fdb\u5165\u9700\u8981\u4eba\u5de5\u5e72\u9884\u624d\u80fd\u4fee\u590d\u7684\u635f\u574f\u72b6\u6001 \u5982\u679c\u66f4\u65b0\u540e Pod \u6a21\u677f\u914d\u7f6e\u8fdb\u5165\u65e0\u6cd5\u8fd0\u884c\u6216\u5c31\u7eea\u7684\u72b6\u6001\uff08\u4f8b\u5982\uff0c\u7531\u4e8e\u9519\u8bef\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 \u6216\u5e94\u7528\u7a0b\u5e8f\u7ea7\u914d\u7f6e\u9519\u8bef\uff09\uff0cStatefulSet \u5c06\u505c\u6b62\u56de\u6eda\u5e76\u7b49\u5f85 \u5728\u8fd9\u79cd\u72b6\u6001\u4e0b\uff0c\u4ec5\u5c06 Pod \u6a21\u677f\u8fd8\u539f\u4e3a\u6b63\u786e\u7684\u914d\u7f6e\u662f\u4e0d\u591f\u7684\uff0cStatefulSet \u5c06\u7ee7\u7eed\u7b49\u5f85\u635f\u574f\u72b6\u6001\u7684 Pod \u51c6\u5907\u5c31\u7eea\uff08\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\uff09\uff0c\u7136\u540e\u518d\u5c1d\u8bd5\u5c06\u5176\u6062\u590d\u4e3a\u6b63\u5e38\u5de5\u4f5c\u914d\u7f6e \u6062\u590d\u6a21\u677f\u540e\uff0c\u8fd8\u5fc5\u987b\u5220\u9664 StatefulSet \u5c1d\u8bd5\u4f7f\u7528\u9519\u8bef\u7684\u914d\u7f6e\u6765\u8fd0\u884c\u7684 Pod\u3002\u8fd9\u6837\uff0c StatefulSet \u624d\u4f1a\u5f00\u59cb\u4f7f\u7528\u88ab\u8fd8\u539f\u7684\u6a21\u677f\u6765\u91cd\u65b0\u521b\u5efa Pod","title":"\u66f4\u65b0\u7b56\u7565"},{"location":"K8S/resources/#daemonset","text":"\u786e\u4fdd\u5168\u90e8\uff08\u6216\u8005\u67d0\u4e9b\uff09\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a Pod \u7684\u526f\u672c\u3002 \u5f53\u6709\u8282\u70b9\u52a0\u5165\u96c6\u7fa4\u65f6\uff0c \u4e5f\u4f1a\u4e3a\u4ed6\u4eec\u65b0\u589e\u4e00\u4e2a Pod \u3002 \u5f53\u6709\u8282\u70b9\u4ece\u96c6\u7fa4\u79fb\u9664\u65f6\uff0c\u8fd9\u4e9b Pod \u4e5f\u4f1a\u88ab\u56de\u6536\u3002\u5220\u9664 DaemonSet \u5c06\u4f1a\u5220\u9664\u5b83\u521b\u5efa\u7684\u6240\u6709 Pod","title":"DaemonSet"},{"location":"K8S/resources/#_7","text":"\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u96c6\u7fa4\u5b88\u62a4\u8fdb\u7a0b \u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u65e5\u5fd7\u6536\u96c6\u5b88\u62a4\u8fdb\u7a0b \u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u76d1\u63a7\u5b88\u62a4\u8fdb\u7a0b","title":"\u5178\u578b\u7528\u6cd5"},{"location":"K8S/resources/#daemonset-spec","text":"apiVersion : apps/v1 kind : DaemonSet metadata : name : fluentd-elasticsearch namespace : kube-system labels : k8s-app : fluentd-logging spec : selector : matchLabels : name : fluentd-elasticsearch template : metadata : labels : name : fluentd-elasticsearch spec : tolerations : - key : node-role.kubernetes.io/master effect : NoSchedule containers : - name : fluentd-elasticsearch image : quay.io/fluentd_elasticsearch/fluentd:v2.5.2 resources : limits : memory : 200Mi requests : cpu : 100m memory : 200Mi volumeMounts : - name : varlog mountPath : /var/log - name : varlibdockercontainers mountPath : /var/lib/docker/containers readOnly : true terminationGracePeriodSeconds : 30 volumes : - name : varlog hostPath : path : /var/log - name : varlibdockercontainers hostPath : path : /var/lib/docker/containers Pod \u6a21\u677f \u5728 DaemonSet \u4e2d\u7684 Pod \u6a21\u677f\u5fc5\u987b\u5177\u6709\u4e00\u4e2a\u503c\u4e3a Always \u7684 RestartPolicy\u3002 \u5f53\u8be5\u503c\u672a\u6307\u5b9a\u65f6\uff0c\u9ed8\u8ba4\u662f Always \u4ec5\u5728\u67d0\u4e9b\u8282\u70b9\u4e0a\u8fd0\u884c Pod \u5982\u679c\u6307\u5b9a\u4e86 .spec.template.spec.nodeSelector\uff0cDaemonSet \u63a7\u5236\u5668\u5c06\u5728\u80fd\u591f\u4e0e Node \u9009\u62e9\u7b97\u7b26 \u5339\u914d\u7684\u8282\u70b9\u4e0a\u521b\u5efa Pod \u7c7b\u4f3c\u53ef\u4ee5\u6307\u5b9a .spec.template.spec.affinity\uff0c\u4e4b\u540e DaemonSet \u63a7\u5236\u5668 \u5c06\u5728\u80fd\u591f\u4e0e\u8282\u70b9\u4eb2\u548c\u6027 \u5339\u914d\u7684\u8282\u70b9\u4e0a\u521b\u5efa Pod","title":"\u7f16\u5199 DaemonSet Spec"},{"location":"K8S/resources/#daemon-pods","text":"DaemonSet \u786e\u4fdd\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\u90fd\u8fd0\u884c\u8be5 Pod \u7684\u4e00\u4e2a\u526f\u672c DaemonSet Pods \u7531 DaemonSet \u63a7\u5236\u5668\u521b\u5efa\u548c\u8c03\u5ea6\uff0c\u5e26\u6765\u4e86\u4ee5\u4e0b\u95ee\u9898 Pod \u884c\u4e3a\u7684\u4e0d\u4e00\u81f4\u6027\uff1a\u6b63\u5e38 Pod \u5728\u88ab\u521b\u5efa\u540e\u7b49\u5f85\u8c03\u5ea6\u65f6\u5904\u4e8e Pending \u72b6\u6001\uff0c DaemonSet Pods \u521b\u5efa\u540e\u4e0d\u4f1a\u5904\u4e8e Pending \u72b6\u6001\u4e0b\u3002\u8fd9\u4f7f\u7528\u6237\u611f\u5230\u56f0\u60d1 Pod \u62a2\u5360 \u7531\u9ed8\u8ba4\u8c03\u5ea6\u5668\u5904\u7406\u3002\u542f\u7528\u62a2\u5360\u540e\uff0cDaemonSet \u63a7\u5236\u5668\u5c06\u5728\u4e0d\u8003\u8651 Pod \u4f18\u5148\u7ea7\u548c\u62a2\u5360 \u7684\u60c5\u51b5\u4e0b\u5236\u5b9a\u8c03\u5ea6\u51b3\u7b56 ScheduleDaemonSetPods \u5141\u8bb8\u60a8\u4f7f\u7528\u9ed8\u8ba4\u8c03\u5ea6\u5668\u800c\u4e0d\u662f DaemonSet \u63a7\u5236\u5668\u6765\u8c03\u5ea6 DaemonSets\uff0c\u65b9\u6cd5\u662f\u5c06 NodeAffinity \u6761\u4ef6\u800c\u4e0d\u662f .spec.nodeName \u6761\u4ef6\u6dfb\u52a0\u5230 DaemonSet Pods \u9ed8\u8ba4\u8c03\u5ea6\u5668\u63a5\u4e0b\u6765\u5c06 Pod \u7ed1\u5b9a\u5230\u76ee\u6807\u4e3b\u673a \u5982\u679c DaemonSet Pod \u7684\u8282\u70b9\u4eb2\u548c\u6027\u914d\u7f6e\u5df2\u5b58\u5728\uff0c\u5219\u88ab\u66ff\u6362 DaemonSet \u63a7\u5236\u5668\u4ec5\u5728\u521b\u5efa\u6216\u4fee\u6539 DaemonSet Pod \u65f6\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\uff0c \u5e76\u4e14\u4e0d\u4f1a\u66f4\u6539 DaemonSet \u7684 spec.template \u7cfb\u7edf\u4f1a\u81ea\u52a8\u6dfb\u52a0 node.kubernetes.io/unschedulable\uff1aNoSchedule \u5bb9\u5fcd\u5ea6\u5230 DaemonSet Pods\u3002\u5728\u8c03\u5ea6 DaemonSet Pod \u65f6\uff0c\u9ed8\u8ba4\u8c03\u5ea6\u5668\u4f1a\u5ffd\u7565 unschedulable \u8282\u70b9 nodeAffinity : requiredDuringSchedulingIgnoredDuringExecution : nodeSelectorTerms : - matchFields : - key : metadata.name operator : In values : - target-host-name","title":"Daemon Pods \u8c03\u5ea6"},{"location":"K8S/resources/#daemon-pods_1","text":"\u63a8\u9001\uff08Push\uff09\uff1a\u914d\u7f6e DaemonSet \u4e2d\u7684 Pod\uff0c\u5c06\u66f4\u65b0\u53d1\u9001\u5230\u53e6\u4e00\u4e2a\u670d\u52a1\uff0c\u4f8b\u5982\u7edf\u8ba1\u6570\u636e\u5e93\u3002 \u8fd9\u4e9b\u670d\u52a1\u6ca1\u6709\u5ba2\u6237\u7aef NodeIP \u548c\u5df2\u77e5\u7aef\u53e3\uff1aDaemonSet \u4e2d\u7684 Pod \u53ef\u4ee5\u4f7f\u7528 hostPort\uff0c\u4ece\u800c\u53ef\u4ee5\u901a\u8fc7\u8282\u70b9 IP \u8bbf\u95ee\u5230 Pod\u3002\u5ba2\u6237\u7aef\u80fd\u901a\u8fc7\u67d0\u79cd\u65b9\u6cd5\u83b7\u53d6\u8282\u70b9 IP \u5217\u8868\uff0c\u5e76\u4e14\u57fa\u4e8e\u6b64\u4e5f\u53ef\u4ee5\u83b7\u53d6\u5230\u76f8\u5e94\u7684\u7aef\u53e3 DNS\uff1a\u521b\u5efa\u5177\u6709\u76f8\u540c Pod \u9009\u62e9\u7b97\u7b26\u7684 \u65e0\u5934\u670d\u52a1\uff0c \u901a\u8fc7\u4f7f\u7528 endpoints \u8d44\u6e90\u6216\u4ece DNS \u4e2d\u68c0\u7d22\u5230\u591a\u4e2a A \u8bb0\u5f55\u6765\u53d1\u73b0 DaemonSet Service\uff1a\u521b\u5efa\u5177\u6709\u76f8\u540c Pod \u9009\u62e9\u7b97\u7b26\u7684\u670d\u52a1\uff0c\u5e76\u4f7f\u7528\u8be5\u670d\u52a1\u968f\u673a\u8bbf\u95ee\u5230\u67d0\u4e2a\u8282\u70b9\u4e0a\u7684 \u5b88\u62a4\u8fdb\u7a0b\uff08\u6ca1\u6709\u529e\u6cd5\u8bbf\u95ee\u5230\u7279\u5b9a\u8282\u70b9\uff09","title":"\u4e0e Daemon Pods \u901a\u4fe1"},{"location":"K8S/resources/#daemonset_1","text":"\u5982\u679c\u8282\u70b9\u7684\u6807\u7b7e\u88ab\u4fee\u6539\uff0cDaemonSet \u5c06\u7acb\u523b\u5411\u65b0\u5339\u914d\u4e0a\u7684\u8282\u70b9\u6dfb\u52a0 Pod\uff0c \u540c\u65f6\u5220\u9664\u4e0d\u5339\u914d\u7684\u8282\u70b9\u4e0a\u7684 Pod \u4f60\u53ef\u4ee5\u4fee\u6539 DaemonSet \u521b\u5efa\u7684 Pod\u3002\u4e0d\u8fc7\u5e76\u975e Pod \u7684\u6240\u6709\u5b57\u6bb5\u90fd\u53ef\u66f4\u65b0 \u53ef\u4ee5\u5220\u9664\u4e00\u4e2a DaemonSet","title":"\u66f4\u65b0 DaemonSet"},{"location":"K8S/resources/#job","text":"Job \u4f1a\u521b\u5efa\u4e00\u4e2a\u6216\u8005\u591a\u4e2a Pods\uff0c\u5e76\u786e\u4fdd\u6307\u5b9a\u6570\u91cf\u7684 Pods \u6210\u529f\u7ec8\u6b62 \u968f\u7740 Pods \u6210\u529f\u7ed3\u675f\uff0cJob \u8ddf\u8e2a\u8bb0\u5f55\u6210\u529f\u5b8c\u6210\u7684 Pods \u4e2a\u6570\u3002 \u5f53\u6570\u91cf\u8fbe\u5230\u6307\u5b9a\u7684\u6210\u529f\u4e2a\u6570\u9608\u503c\u65f6\uff0c\u4efb\u52a1\uff08\u5373 Job\uff09\u7ed3\u675f\u3002 \u5220\u9664 Job \u7684\u64cd\u4f5c\u4f1a\u6e05\u9664\u6240\u521b\u5efa\u7684\u5168\u90e8 Pods","title":"Job"},{"location":"K8S/resources/#job_1","text":"\u8ba1\u7b97 \u03c0 \u5230\u5c0f\u6570\u70b9\u540e 100 \u4f4d\uff0c\u5e76\u5c06\u7ed3\u679c\u6253\u5370\u51fa\u6765 apiVersion : batch/v1 kind : Job metadata : name : pi spec : template : spec : containers : - name : pi image : resouer/ubuntu-bc imagePullPolicy : Never command : [ \"sh\" , \"-c\" , \"echo 'scale=100; 4*a(1)' | bc -l \" ] restartPolicy : Never backoffLimit : 4 activeDeadlineSeconds : 100 kubectl logs $pods","title":"Job \u793a\u4f8b"},{"location":"K8S/resources/#job_2","text":"Job \u7684\u5e76\u884c\u6267\u884c \u975e\u5e76\u884c Job \u901a\u5e38\u53ea\u542f\u52a8\u4e00\u4e2a Pod\uff0c\u9664\u975e\u8be5 Pod \u5931\u8d25 \u5f53 Pod \u6210\u529f\u7ec8\u6b62\u65f6\uff0c\u7acb\u5373\u89c6 Job \u4e3a\u5b8c\u6210\u72b6\u6001 \u53ef\u4ee5\u4e0d\u8bbe\u7f6e spec.completions \u548c spec.parallelism\u3002 \u8fd9\u4e24\u4e2a\u5c5e\u6027\u90fd\u4e0d\u8bbe\u7f6e\u65f6\uff0c\u5747\u53d6\u9ed8\u8ba4\u503c 1 \u5177\u6709 \u786e\u5b9a\u5b8c\u6210\u8ba1\u6570 \u7684\u5e76\u884c Job .spec.completions \u4e3a\u6240\u9700\u8981\u7684\u5b8c\u6210\u4e2a\u6570\uff0c\u82e5\u4e0d\u8bbe\u7f6e spec.completions\uff0c\u9ed8\u8ba4\u503c\u4e3a .spec.parallelism\uff0c\u5176\u9ed8\u8ba4\u503c\u4e3a 1 Job \u7528\u6765\u4ee3\u8868\u6574\u4e2a\u4efb\u52a1\uff0c\u5f53\u5bf9\u5e94\u4e8e 1 \u548c .spec.completions \u4e4b\u95f4\u7684\u6bcf\u4e2a\u6574\u6570\u90fd\u5b58\u5728 \u4e00\u4e2a\u6210\u529f\u7684 Pod \u65f6\uff0cJob \u88ab\u89c6\u4e3a\u5b8c\u6210 \u5c1a\u672a\u5b9e\u73b0\uff1a\u6bcf\u4e2a Pod \u6536\u5230\u4e00\u4e2a\u4ecb\u4e8e 1 \u548c spec.completions \u4e4b\u95f4\u7684\u4e0d\u540c\u7d22\u5f15\u503c \u5e26 \u5de5\u4f5c\u961f\u5217 \u7684\u5e76\u884c Job \u4e0d\u53ef\u4ee5\u8bbe\u7f6e .spec.completions\uff0c\u4f46\u8981\u5c06.spec.parallelism \u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 \u591a\u4e2a Pod \u4e4b\u95f4\u5fc5\u987b\u76f8\u4e92\u534f\u8c03\uff0c\u6216\u8005\u501f\u52a9\u5916\u90e8\u670d\u52a1\u786e\u5b9a\u6bcf\u4e2a Pod \u8981\u5904\u7406\u54ea\u4e2a\u5de5\u4f5c\u6761\u76ee\u3002 \u4f8b\u5982\uff0c\u4efb\u4e00 Pod \u90fd\u53ef\u4ee5\u4ece\u5de5\u4f5c\u961f\u5217\u4e2d\u53d6\u8d70\u6700\u591a N \u4e2a\u5de5\u4f5c\u6761\u76ee \u6bcf\u4e2a Pod \u90fd\u53ef\u4ee5\u72ec\u7acb\u786e\u5b9a\u662f\u5426\u5176\u5b83 Pod \u90fd\u5df2\u5b8c\u6210\uff0c\u8fdb\u800c\u786e\u5b9a Job \u662f\u5426\u5b8c\u6210 \u5f53 Job \u4e2d \u4efb\u4f55 Pod \u6210\u529f\u7ec8\u6b62\uff0c\u4e0d\u518d\u521b\u5efa\u65b0 Pod \u4e00\u65e6\u81f3\u5c11 1 \u4e2a Pod \u6210\u529f\u5b8c\u6210\uff0c\u5e76\u4e14\u6240\u6709 Pod \u90fd\u5df2\u7ec8\u6b62\uff0c\u5373\u53ef\u5ba3\u544a Job \u6210\u529f\u5b8c\u6210 \u4e00\u65e6\u4efb\u4f55 Pod \u6210\u529f\u9000\u51fa\uff0c\u4efb\u4f55\u5176\u5b83 Pod \u90fd\u4e0d\u5e94\u518d\u5bf9\u6b64\u4efb\u52a1\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u6216\u751f\u6210\u4efb\u4f55\u8f93\u51fa\u3002 \u6240\u6709 Pod \u90fd\u5e94\u542f\u52a8\u9000\u51fa\u8fc7\u7a0b \u63a7\u5236\u5e76\u884c\u6027 \u5e76\u884c\u6027\u8bf7\u6c42\uff08.spec.parallelism\uff09\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4efb\u4f55\u975e\u8d1f\u6574\u6570\u3002 \u5982\u679c\u672a\u8bbe\u7f6e\uff0c\u5219\u9ed8\u8ba4\u4e3a 1\u3002 \u5982\u679c\u8bbe\u7f6e\u4e3a 0\uff0c\u5219 Job \u76f8\u5f53\u4e8e\u542f\u52a8\u4e4b\u540e\u4fbf\u88ab\u6682\u505c\uff0c\u76f4\u5230\u6b64\u503c\u88ab\u589e\u52a0 \u5b9e\u9645\u5e76\u884c\u6027\uff08\u5728\u4efb\u610f\u65f6\u523b\u8fd0\u884c\u72b6\u6001\u7684 Pods \u4e2a\u6570\uff09\u53ef\u80fd\u6bd4\u5e76\u884c\u6027\u8bf7\u6c42\u7565\u5927\u6216\u7565\u5c0f\uff0c \u539f\u56e0\u5982\u4e0b \u5bf9\u4e8e \u786e\u5b9a\u5b8c\u6210\u8ba1\u6570 Job\uff0c\u5b9e\u9645\u4e0a\u5e76\u884c\u6267\u884c\u7684 Pods \u4e2a\u6570\u4e0d\u4f1a\u8d85\u51fa\u5269\u4f59\u7684\u5b8c\u6210\u6570\u3002 \u5982\u679c .spec.parallelism \u503c\u8f83\u9ad8\uff0c\u4f1a\u88ab\u5ffd\u7565\u3002 \u5bf9\u4e8e \u5de5\u4f5c\u961f\u5217 Job\uff0c\u6709\u4efb\u4f55 Job \u6210\u529f\u7ed3\u675f\u4e4b\u540e\uff0c\u4e0d\u4f1a\u6709\u65b0\u7684 Pod \u542f\u52a8\u3002 \u4e0d\u8fc7\uff0c\u5269\u4e0b\u7684 Pods \u5141\u8bb8\u6267\u884c\u5b8c\u6bd5\u3002 \u5982\u679c Job \u63a7\u5236\u5668 \u6ca1\u6709\u6765\u5f97\u53ca\u4f5c\u51fa\u54cd\u5e94\uff0c\u6216\u8005 \u5982\u679c Job \u63a7\u5236\u5668\u56e0\u4e3a\u4efb\u4f55\u539f\u56e0\uff08\u4f8b\u5982\uff0c\u7f3a\u5c11 ResourceQuota \u6216\u8005\u6ca1\u6709\u6743\u9650\uff09\u65e0\u6cd5\u521b\u5efa Pods\u3002 Pods \u4e2a\u6570\u53ef\u80fd\u6bd4\u8bf7\u6c42\u7684 - \u6570\u76ee\u5c0f\u3002 Job \u63a7\u5236\u5668\u53ef\u80fd\u4f1a\u56e0\u4e3a\u4e4b\u524d\u540c\u4e00 Job \u4e2d Pod \u5931\u6548\u6b21\u6570\u8fc7\u591a\u800c\u538b\u5236\u65b0 Pod \u7684\u521b\u5efa\u3002 \u5f53 Pod \u5904\u4e8e\u4f53\u9762\u7ec8\u6b62\u8fdb\u7a0b\u4e2d\uff0c\u9700\u8981\u4e00\u5b9a\u65f6\u95f4\u624d\u80fd\u505c\u6b62\u3002","title":"\u7f16\u5199 Job \u89c4\u7ea6"},{"location":"K8S/resources/#pod_3","text":"Pod \u4e2d\u7684\u5bb9\u5668\u53ef\u80fd\u56e0\u4e3a\u591a\u79cd\u4e0d\u540c\u539f\u56e0\u5931\u6548 .spec.template.spec.restartPolicy = \"OnFailure\" Pod \u5219\u7ee7\u7eed\u7559\u5728\u5f53\u524d\u8282\u70b9\uff0c\u4f46\u5bb9\u5668\u4f1a\u88ab\u91cd\u65b0\u8fd0\u884c .spec.template.spec.restartPolicy = \"Never\" Job \u63a7\u5236\u5668\u4f1a\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 Pod \u5373\u4f7f\u5c06 .spec.parallelism \u8bbe\u7f6e\u4e3a 1\uff0c\u4e14\u5c06 .spec.completions \u8bbe\u7f6e\u4e3a 1\uff0c\u5e76\u4e14 .spec.template.spec.restartPolicy \u8bbe\u7f6e\u4e3a \"Never\"\uff0c\u540c\u4e00\u7a0b\u5e8f\u4ecd\u7136\u6709\u53ef\u80fd\u88ab\u542f\u52a8\u4e24\u6b21 Pod \u56de\u9000\u5931\u6548\u7b56\u7565 \u5728\u6709\u4e9b\u60c5\u5f62\u4e0b\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b Job \u5728\u7ecf\u5386\u82e5\u5e72\u6b21\u91cd\u8bd5\u4e4b\u540e\u76f4\u63a5\u8fdb\u5165\u5931\u8d25\u72b6\u6001\uff0c\u56e0\u4e3a\u8fd9\u5f88\u53ef\u80fd\u610f\u5473\u7740\u9047\u5230\u4e86\u914d\u7f6e\u9519\u8bef \u53ef\u4ee5\u5c06 .spec.backoffLimit \u8bbe\u7f6e\u4e3a\u89c6 Job \u4e3a\u5931\u8d25\u4e4b\u524d\u7684\u91cd\u8bd5\u6b21\u6570\uff0c\u5931\u6548\u56de\u9000\u7684\u9650\u5236\u503c\u9ed8\u8ba4\u4e3a 6\uff0c\u4e00\u65e6\u91cd\u8bd5\u6b21\u6570\u5230\u8fbe .spec.backoffLimit \u6240\u8bbe\u7684\u4e0a\u9650\uff0cJob \u4f1a\u88ab\u6807\u8bb0\u4e3a\u5931\u8d25\uff0c \u5176\u4e2d\u8fd0\u884c\u7684 Pods \u90fd\u4f1a\u88ab\u7ec8\u6b62 \u4e0e Job \u76f8\u5173\u7684\u5931\u6548\u7684 Pod \u4f1a\u88ab Job \u63a7\u5236\u5668\u91cd\u5efa\uff0c\u5e76\u4e14\u4ee5\u6307\u6570\u578b\u56de\u9000\u8ba1\u7b97\u91cd\u8bd5\u5ef6\u8fdf \uff08\u4ece 10 \u79d2\u300120 \u79d2\u5230 40 \u79d2\uff0c\u6700\u591a 6 \u5206\u949f\uff09\u3002 \u5f53 Job \u7684 Pod \u88ab\u5220\u9664\u65f6\uff0c\u6216\u8005 Pod \u6210\u529f\u65f6\u6ca1\u6709\u5176\u5b83 Pod \u5904\u4e8e\u5931\u8d25\u72b6\u6001\uff0c\u5931\u6548\u56de\u9000\u7684\u6b21\u6570\u4e5f\u4f1a\u88ab\u91cd\u7f6e\uff08\u4e3a 0\uff09","title":"\u5904\u7406 Pod \u548c\u5bb9\u5668\u5931\u6548"},{"location":"K8S/resources/#job_3","text":"Job \u5b8c\u6210\u65f6\u4e0d\u4f1a\u518d\u521b\u5efa\u65b0\u7684 Pod\uff0c\u4e0d\u8fc7\u5df2\u6709\u7684 Pod \u4e5f\u4e0d\u4f1a\u88ab\u5220\u9664\u3002 \u4fdd\u7559\u8fd9\u4e9b Pod \u4f7f\u5f97\u4f60\u53ef\u4ee5\u67e5\u770b\u5df2\u5b8c\u6210\u7684 Pod \u7684\u65e5\u5fd7\u8f93\u51fa\uff0c\u4ee5\u4fbf\u68c0\u67e5\u9519\u8bef\u3001\u8b66\u544a \u6216\u8005\u5176\u5b83\u8bca\u65ad\u6027\u8f93\u51fa \u4f60\u53ef\u4ee5\u4e3a Job \u7684 .spec.activeDeadlineSeconds \u8bbe\u7f6e\u4e00\u4e2a\u79d2\u6570\u503c\uff0c\u503c\u9002\u7528\u4e8e Job \u7684\u6574\u4e2a\u751f\u547d\u671f\uff0c\u65e0\u8bba Job \u521b\u5efa\u4e86\u591a\u5c11\u4e2a Pod\u3002 \u4e00\u65e6 Job \u8fd0\u884c\u65f6\u95f4\u8fbe\u5230 activeDeadlineSeconds \u79d2\uff0c\u5176\u6240\u6709\u8fd0\u884c\u4e2d\u7684 Pod \u90fd\u4f1a\u88ab\u7ec8\u6b62\uff0c\u5e76\u4e14 Job \u7684\u72b6\u6001\u66f4\u65b0\u4e3a type: Failed \u53ca reason: DeadlineExceeded Job \u7684 .spec.activeDeadlineSeconds \u4f18\u5148\u7ea7\u9ad8\u4e8e\u5176 .spec.backoffLimit \u8bbe\u7f6e","title":"Job \u7ec8\u6b62\u4e0e\u6e05\u7406"},{"location":"K8S/resources/#job_4","text":"\u5982\u679c Job \u7531\u67d0\u79cd\u66f4\u9ad8\u7ea7\u522b\u7684\u63a7\u5236\u5668\u6765\u7ba1\u7406\uff0c\u4f8b\u5982 CronJobs\uff0c \u5219 Job \u53ef\u4ee5\u88ab CronJob \u57fa\u4e8e\u7279\u5b9a\u7684\u6839\u636e\u5bb9\u91cf\u88c1\u5b9a\u7684\u6e05\u7406\u7b56\u7565\u6e05\u7406\u6389 \u4f7f\u7528\u7531 TTL \u63a7\u5236\u5668\u6240\u63d0\u4f9b \u7684 TTL \u673a\u5236\u81ea\u52a8\u6e05\u7406 Job \u8bbe\u7f6e Job \u7684 .spec.ttlSecondsAfterFinished \u5b57\u6bb5\uff0c\u53ef\u4ee5\u8ba9\u8be5\u63a7\u5236\u5668\u6e05\u7406\u6389 \u5df2\u7ed3\u675f\u7684\u8d44\u6e90 \u5982\u679c\u8be5\u5b57\u6bb5\u8bbe\u7f6e\u4e3a 0\uff0cJob \u5728\u7ed3\u675f\u4e4b\u540e\u7acb\u5373\u6210\u4e3a\u53ef\u88ab\u81ea\u52a8\u5220\u9664\u7684\u5bf9\u8c61 apiVersion : batch/v1 kind : Job metadata : name : pi spec : template : spec : containers : - name : pi image : resouer/ubuntu-bc imagePullPolicy : Never command : [ \"sh\" , \"-c\" , \"echo 'scale=100; 4*a(1)' | bc -l \" ] restartPolicy : Never backoffLimit : 4 activeDeadlineSeconds : 100 ttlSecondsAfterFinished : 100","title":"\u81ea\u52a8\u6e05\u7406\u5b8c\u6210\u7684 Job"},{"location":"K8S/resources/#cronjob","text":"Cron Job \u521b\u5efa\u57fa\u4e8e\u65f6\u95f4\u8c03\u5ea6\u7684 Jobs\uff0c\u5bf9\u4e8e\u521b\u5efa\u5468\u671f\u6027\u7684\u3001\u53cd\u590d\u91cd\u590d\u7684\u4efb\u52a1\u5f88\u6709\u7528\uff0c\u4f8b\u5982\u6267\u884c\u6570\u636e\u5907\u4efd\u6216\u8005\u53d1\u9001\u90ae\u4ef6\u3002 CronJobs \u4e5f\u53ef\u4ee5\u7528\u6765\u8ba1\u5212\u5728\u6307\u5b9a\u65f6\u95f4\u6765\u6267\u884c\u7684\u72ec\u7acb\u4efb\u52a1\uff0c\u4f8b\u5982\u8ba1\u5212\u5f53\u96c6\u7fa4\u770b\u8d77\u6765\u5f88\u7a7a\u95f2\u65f6 \u6267\u884c\u67d0\u4e2a Job","title":"CronJob"},{"location":"K8S/resources/#cronjob_1","text":"apiVersion : batch/v1beta1 kind : CronJob metadata : name : hello spec : schedule : \"*/1 * * * *\" jobTemplate : spec : template : spec : containers : - name : hello image : busybox args : - /bin/sh - -c - date; echo Hello from the Kubernetes cluster restartPolicy : OnFailure","title":"CronJob \u793a\u4f8b"},{"location":"K8S/resources/#cronjob_2","text":"CronJob \u6839\u636e\u5176\u8ba1\u5212\u7f16\u6392\uff0c\u5728\u6bcf\u6b21\u8be5\u6267\u884c\u4efb\u52a1\u7684\u65f6\u5019\u5927\u7ea6\u4f1a\u521b\u5efa\u4e00\u4e2a Job \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u4f1a\u521b\u5efa\u4e24\u4e2a Job\uff0c\u6216\u8005\u4e0d\u4f1a\u521b\u5efa\u4efb\u4f55 Job \u5982\u679c startingDeadlineSeconds \u8bbe\u7f6e\u4e3a\u5f88\u5927\u7684\u6570\u503c\u6216\u672a\u8bbe\u7f6e\uff08\u9ed8\u8ba4\uff09\uff0c\u5e76\u4e14 concurrencyPolicy \u8bbe\u7f6e\u4e3a Allow\uff0c\u5219\u4f5c\u4e1a\u5c06\u59cb\u7ec8\u81f3\u5c11\u8fd0\u884c\u4e00\u6b21\uff1b\u5982\u679c startingDeadlineSeconds \u662f 200\uff0c\u5219\u63a7\u5236\u5668\u4f1a\u7edf\u8ba1\u5728\u8fc7\u53bb 200 \u79d2\u4e2d\u9519\u8fc7\u4e86\u591a\u5c11\u6b21 Job CronJob \u63a7\u5236\u5668\uff08Controller\uff09 \u68c0\u67e5\u4ece\u4e0a\u4e00\u6b21\u8c03\u5ea6\u7684\u65f6\u95f4\u70b9\u5230\u73b0\u5728\u6240\u9519\u8fc7\u4e86\u8c03\u5ea6\u6b21\u6570\u3002\u5982\u679c\u9519\u8fc7\u7684\u8c03\u5ea6\u6b21\u6570\u8d85\u8fc7 100 \u6b21\uff0c \u90a3\u4e48\u5b83\u5c31\u4e0d\u4f1a\u542f\u52a8\u8fd9\u4e2a\u4efb\u52a1\uff0c\u5e76\u8bb0\u5f55\u8fd9\u4e2a\u9519\u8bef \u672a\u80fd\u5728\u8c03\u5ea6\u65f6\u95f4\u5185\u521b\u5efa CronJob\uff0c\u5219\u8ba1\u4e3a\u9519\u8fc7","title":"CronJob \u9650\u5236"},{"location":"K8S/resources/#cronjonv2","text":"--feature-gates=\"CronJobControllerV2=true\"","title":"CronJonV2"},{"location":"K8S/resources/#_8","text":"","title":"\u8d44\u6e90\u56de\u6536"},{"location":"K8S/resources/#_9","text":"\u6bcf\u4e2a\u9644\u5c5e\u5bf9\u8c61\u5177\u6709\u4e00\u4e2a\u6307\u5411\u5176\u6240\u5c5e\u5bf9\u8c61\u7684 metadata.ownerReferences \u5b57\u6bb5 apiVersion : apps/v1 kind : ReplicaSet metadata : name : my-repset spec : replicas : 3 selector : matchLabels : pod-is-for : garbage-collection-example template : metadata : labels : pod-is-for : garbage-collection-example spec : containers : - name : app image : app:1.0.0 imagePullPolicy : Never \u901a\u8fc7 kubectl get pods --output=yaml \u67e5\u770b ownerReferences \u663e\u793a\u4e86 Pod \u7684\u5c5e\u4e3b\u662f\u540d\u4e3a my-repset \u7684 ReplicaSet ownerReferences : - apiVersion : apps/v1 blockOwnerDeletion : true controller : true kind : ReplicaSet name : my-repset uid : 00c1a24c-1418-4c3b-be9d-326915144427","title":"\u5bbf\u4e3b\u4e0e\u9644\u5c5e"},{"location":"K8S/resources/#_10","text":"\u5f53\u4f60\u5220\u9664\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9a\u8be5\u5bf9\u8c61\u7684\u9644\u5c5e\u662f\u5426\u4e5f\u81ea\u52a8\u5220\u9664 \u4e0d\u81ea\u52a8\u5220\u9664\u5b83\u7684\u9644\u5c5e\uff0c\u8fd9\u4e9b\u9644\u5c5e\u88ab\u79f0\u4f5c \u5b64\u7acb\u5bf9\u8c61\uff08Orphaned\uff09 \u81ea\u52a8\u5220\u9664\u9644\u5c5e\u7684\u884c\u4e3a\u4e5f\u79f0\u4e3a \u7ea7\u8054\u5220\u9664\uff08Cascading Deletion\uff09 \u7ea7\u8054\u5220\u9664\u6a21\u5f0f \u540e\u53f0\uff08Background\uff09 \u6a21\u5f0f \u524d\u53f0\uff08Foreground\uff09 \u6a21\u5f0f \u524d\u53f0\u7ea7\u8054\u5220\u9664 \u6839\u5bf9\u8c61\u9996\u5148\u8fdb\u5165 deletion in progress \u72b6\u6001\u3002 \u5728 deletion in progress \u72b6\u6001\uff0c\u4f1a\u6709\u5982\u4e0b\u7684\u60c5\u51b5 \u5bf9\u8c61\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7 REST API \u53ef\u89c1 \u5bf9\u8c61\u7684 deletionTimestamp \u5b57\u6bb5\u88ab\u8bbe\u7f6e \u5bf9\u8c61\u7684 metadata.finalizers \u5b57\u6bb5\u5305\u542b\u503c foregroundDeletion \u4e00\u65e6\u5bf9\u8c61\u88ab\u8bbe\u7f6e\u4e3a deletion in progress \u72b6\u6001\uff0c\u5783\u573e\u6536\u96c6\u5668\u4f1a\u5220\u9664\u5bf9\u8c61\u7684\u6240\u6709\u9644\u5c5e \u5783\u573e\u6536\u96c6\u5668\u5728\u5220\u9664\u4e86\u6240\u6709\u6709\u963b\u585e\u80fd\u529b\u7684\u9644\u5c5e\uff08\u5bf9\u8c61\u7684 ownerReference.blockOwnerDeletion=true\uff09 \u4e4b\u540e\uff0c\u5220\u9664\u5c5e\u4e3b\u5bf9\u8c61 \u53ea\u6709\u8bbe\u7f6e\u4e86 ownerReference.blockOwnerDeletion \u503c\u7684\u9644\u5c5e\u624d\u80fd\u963b\u6b62\u5220\u9664\u5c5e\u4e3b\u5bf9\u8c61 \u540e\u53f0\u7ea7\u8054\u5220\u9664 Kubernetes \u4f1a\u7acb\u5373\u5220\u9664\u5c5e\u4e3b\u5bf9\u8c61\uff0c\u4e4b\u540e\u5783\u573e\u6536\u96c6\u5668 \u4f1a\u5728\u540e\u53f0\u5220\u9664\u5176\u9644\u5c5e\u5bf9\u8c61 \u8bbe\u7f6e\u7ea7\u8054\u5220\u9664\u7b56\u7565 \u901a\u8fc7\u4e3a\u5c5e\u4e3b\u5bf9\u8c61\u8bbe\u7f6e deleteOptions.propagationPolicy \u5b57\u6bb5\uff0c\u53ef\u4ee5\u63a7\u5236\u7ea7\u8054\u5220\u9664\u7b56\u7565 \u53ef\u80fd\u7684\u53d6\u503c\u5305\u62ec\uff1aOrphan\u3001Foreground \u6216\u8005 Background \u793a\u4f8b \u4e0b\u9762\u662f\u4e00\u4e2a\u5728\u540e\u53f0\u5220\u9664\u9644\u5c5e\u5bf9\u8c61\u7684\u793a\u4f8b\uff1a kubectl proxy --port = 8080 curl -X DELETE localhost:8080/apis/apps/v1/namespaces/default/replicasets/my-repset \\ -d '{\"kind\":\"DeleteOptions\",\"apiVersion\":\"v1\",\"propagationPolicy\":\"Background\"}' \\ -H \"Content-Type: application/json\" \u4e0b\u9762\u662f\u4e00\u4e2a\u5728\u524d\u53f0\u4e2d\u5220\u9664\u9644\u5c5e\u5bf9\u8c61\u7684\u793a\u4f8b\uff1a kubectl proxy --port = 8080 curl -X DELETE localhost:8080/apis/apps/v1/namespaces/default/replicasets/my-repset \\ -d '{\"kind\":\"DeleteOptions\",\"apiVersion\":\"v1\",\"propagationPolicy\":\"Foreground\"}' \\ -H \"Content-Type: application/json\" \u4e0b\u9762\u662f\u4e00\u4e2a\u4ee4\u9644\u5c5e\u6210\u4e3a\u5b64\u7acb\u5bf9\u8c61\u7684\u793a\u4f8b\uff1a kubectl proxy --port = 8080 curl -X DELETE localhost:8080/apis/apps/v1/namespaces/default/replicasets/my-repset \\ -d '{\"kind\":\"DeleteOptions\",\"apiVersion\":\"v1\",\"propagationPolicy\":\"Orphan\"}' \\ -H \"Content-Type: application/json\" kubectl \u547d\u4ee4\u4e5f\u652f\u6301\u7ea7\u8054\u5220\u9664 \u901a\u8fc7\u8bbe\u7f6e --cascade \u4e3a true\uff0c\u53ef\u4ee5\u4f7f\u7528 kubectl \u81ea\u52a8\u5220\u9664\u9644\u5c5e\u5bf9\u8c61 \u8bbe\u7f6e --cascade \u4e3a false\uff0c\u4f1a\u4f7f\u9644\u5c5e\u5bf9\u8c61\u6210\u4e3a\u5b64\u7acb\u9644\u5c5e\u5bf9\u8c61\u3002 --cascade \u7684\u9ed8\u8ba4\u503c\u662f true","title":"\u63a7\u5236\u5783\u573e\u6536\u96c6\u5668\u5220\u9664\u9644\u5c5e"},{"location":"K8S/services/","tags":["K8S"],"text":"Kubernetes \u670d\u52a1\u3001\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f51\u7edc Deployment && Service apiVersion : apps/v1 kind : Deployment metadata : name : app spec : replicas : 4 selector : matchLabels : app : app tier : backend template : metadata : labels : app : app tier : backend spec : containers : - name : app image : app:1.0.0 imagePullPolicy : IfNotPresent ports : - name : http containerPort : 8080 resources : limits : cpu : 500m requests : cpu : 200m --- apiVersion : v1 kind : Service metadata : name : app-svc spec : type : NodePort selector : app : app tier : backend ports : - protocol : TCP port : 8080 targetPort : 8080 nodePort : 30001 \u5982\u4e0a\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a app-svc \u7684 Service\uff1bService \u80fd\u591f\u5c06\u4e00\u4e2a\u63a5\u6536 port \u6620\u5c04\u5230\u4efb\u610f\u7684 targetPort\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0ctargetPort \u5c06\u88ab\u8bbe\u7f6e\u4e3a\u4e0e port \u5b57\u6bb5\u76f8\u540c\u7684\u503c\uff0c\u5e76\u4e14\u5177\u6709\u6807\u7b7e \"app=MyApp\" \u7684 Pod \u4e0a \u901a\u8fc7 nodePort \u670d\u52a1\u8c03\u7528 # kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME docker-desktop Ready master 25m v1.19.7 192 .168.64.4 <none> Docker Desktop 4 .19.121-linuxkit docker://20.10.3 # curl 192.168.64.4:30001 <h1>Test Homepage</h1> \u901a\u8fc7 LoadBalance \u670d\u52a1\u8c03\u7528 apiVersion : v1 kind : Service metadata : name : app-svc spec : type : LoadBalancer selector : app : app tier : backend ports : - protocol : TCP port : 8080 targetPort : 8080 curl localhost:8080 ExternalName","title":"\u7f51\u7edc\u53ca\u670d\u52a1"},{"location":"K8S/services/#kubernetes","text":"","title":"Kubernetes \u670d\u52a1\u3001\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f51\u7edc"},{"location":"K8S/services/#deployment-service","text":"apiVersion : apps/v1 kind : Deployment metadata : name : app spec : replicas : 4 selector : matchLabels : app : app tier : backend template : metadata : labels : app : app tier : backend spec : containers : - name : app image : app:1.0.0 imagePullPolicy : IfNotPresent ports : - name : http containerPort : 8080 resources : limits : cpu : 500m requests : cpu : 200m --- apiVersion : v1 kind : Service metadata : name : app-svc spec : type : NodePort selector : app : app tier : backend ports : - protocol : TCP port : 8080 targetPort : 8080 nodePort : 30001 \u5982\u4e0a\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a app-svc \u7684 Service\uff1bService \u80fd\u591f\u5c06\u4e00\u4e2a\u63a5\u6536 port \u6620\u5c04\u5230\u4efb\u610f\u7684 targetPort\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0ctargetPort \u5c06\u88ab\u8bbe\u7f6e\u4e3a\u4e0e port \u5b57\u6bb5\u76f8\u540c\u7684\u503c\uff0c\u5e76\u4e14\u5177\u6709\u6807\u7b7e \"app=MyApp\" \u7684 Pod \u4e0a \u901a\u8fc7 nodePort \u670d\u52a1\u8c03\u7528 # kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME docker-desktop Ready master 25m v1.19.7 192 .168.64.4 <none> Docker Desktop 4 .19.121-linuxkit docker://20.10.3 # curl 192.168.64.4:30001 <h1>Test Homepage</h1>","title":"Deployment &amp;&amp; Service"},{"location":"K8S/services/#loadbalance","text":"apiVersion : v1 kind : Service metadata : name : app-svc spec : type : LoadBalancer selector : app : app tier : backend ports : - protocol : TCP port : 8080 targetPort : 8080 curl localhost:8080","title":"\u901a\u8fc7 LoadBalance \u670d\u52a1\u8c03\u7528"},{"location":"K8S/services/#externalname","text":"","title":"ExternalName"},{"location":"Redis/HashTable/","tags":["Redis","HashTable"],"text":"HashTable \u76ee\u5f55 Redis-HashTable-\u63a5\u53e3 \u6e90\u7801 dict.h dict.c dictType \u5b9a\u4e49\u4e00\u7ec4 key-value \u7684\u64cd\u4f5c\u51fd\u6570\u6a21\u7248 typedef struct dictType { // \u8ba1\u7b97hash\u7684\u51fd\u6570 uint64_t ( * hashFunction )( const void * key ); // key \u590d\u5236\u51fd\u6570\uff0c\u4e00\u822c\u4f7f\u7528NULL void * ( * keyDup )( void * privdata , const void * key ); // value \u590d\u5236\u51fd\u6570\uff0c\u4e00\u822c\u4f7f\u7528NULL void * ( * valDup )( void * privdata , const void * obj ); // key \u6bd4\u8f83\u51fd\u6570 int ( * keyCompare )( void * privdata , const void * key1 , const void * key2 ); // key \u91ca\u653e\u51fd\u6570 void ( * keyDestructor )( void * privdata , void * key ); // value \u91ca\u653e\u51fd\u6570 void ( * valDestructor )( void * privdata , void * obj ); } dictType ; dict - \u5b57\u5178\u7ed3\u6784 typedef struct dict { // key-value \u64cd\u4f5c\u51fd\u6570\u7ec4 dictType * type ; // \u79c1\u6709\u6570\u636e\uff0c\u7528\u5728\u7279\u5b9a hooks \u51fd\u6570\u4e2d void * privdata ; // hashTable, ht[1] \u6269\u5bb9\u4e2d\u7684hashTable, ht[0] \u65e7\u7684hashTable dictht ht [ 2 ]; // rehash \u6807\u5fd7\uff0c\u9ed8\u8ba4\u4e3a-1\uff08\u672a\u5728\u6269\u5bb9\u4e2d\uff09 long rehashidx ; // \u8fed\u4ee3\u5668\u6570\u91cf unsigned long iterators ; } dict ; dictht - hashTable \u7ed3\u6784 typedef struct dictht { // hash \u6570\u7ec4 dictEntry ** table ; // hash \u6570\u7ec4\u5927\u5c0f unsigned long size ; // \u54c8\u5e0c\u8868\u5927\u5c0f\u63a9\u7801\uff0c\u7b49\u4e8esize-1 unsigned long sizemask ; // hash \u6570\u7ec4\u5df2\u4f7f\u7528\u5927\u5c0f unsigned long used ; } dictht ; dictEntry - hash \u8282\u70b9 typedef struct dictEntry { // \u5143\u7d20 key void * key ; // \u5143\u7d20 value union { void * val ; uint64_t u64 ; int64_t s64 ; double d ; } v ; // \u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740 struct dictEntry * next ; } dictEntry ; \u8fed\u4ee3\u5668 typedef struct dictIterator { // dict dict * d ; // long index ; // hashTable \u6807\u5fd7(0/1)\uff1b\u5b89\u5168\u6807\u5fd7 int table , safe ; // \u5f53\u524dentrey\u3001\u94fe\u8868\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9 dictEntry * entry , * nextEntry ; // dict \u6307\u7eb9 long long fingerprint ; } dictIterator ; Redis-HashTable-Interfaces dict \u521b\u5efa - dictCreate // \u521b\u5efa\u65b0\u7684dict dict * dictCreate ( dictType * type , void * privDataPtr ) { // \u5206\u914d\u521d\u59cb\u5185\u5b58\u7a7a\u95f4 dict * d = zmalloc ( sizeof ( * d )); // \u521d\u59cb\u5316 _dictInit ( d , type , privDataPtr ); // \u8fd4\u56dedict\u6307\u9488 return d ; } // dict \u521d\u59cb\u5316 int _dictInit ( dict * d , dictType * type , void * privDataPtr ) { // hashtable \u521d\u59cb\u5316 _dictReset ( & d -> ht [ 0 ]); _dictReset ( & d -> ht [ 1 ]); d -> type = type ; d -> privdata = privDataPtr ; d -> rehashidx = -1 ; d -> iterators = 0 ; return DICT_OK ; } static void _dictReset ( dictht * ht ) { ht -> table = NULL ; ht -> size = 0 ; ht -> sizemask = 0 ; ht -> used = 0 ; } key \u63d2\u5165 1\uff1adictAddRaw \u67e5\u8be2 key \u7684 bucket \u5e76\u63d2\u5165 dictEntry \u5f53 key \u5df2\u5b58\u5728\u65f6\uff0c\u629b\u51fa\u5f02\u5e38 dictEntry * dictAddRaw ( dict * d , void * key , dictEntry ** existing ) { long index ; dictEntry * entry ; dictht * ht ; // rehash\u68c0\u67e5\u53ca\u534f\u52a9 if ( dictIsRehashing ( d )) _dictRehashStep ( d ); // \u8ba1\u7b97key\u7684\u63d2\u5165\u7d22\u5f15\uff0c\u5982\u679ckey\u5df2\u5b58\u5728\uff0c\u5219\u8fd4\u56de-1 if (( index = _dictKeyIndex ( d , key , dictHashKey ( d , key ), existing )) == -1 ) return NULL ; // \u5224\u65ad\u64cd\u4f5c\u7684hashtable\uff0crehash\u4e2d\u7684\u63d2\u5165\u64cd\u4f5c\u76ee\u6807\u662fht[1] ht = dictIsRehashing ( d ) ? & d -> ht [ 1 ] : & d -> ht [ 0 ]; // \u65b0\u8282\u70b9\u5185\u5b58\u5206\u914d entry = zmalloc ( sizeof ( * entry )); // \u62c9\u94fe\u6cd5\u89e3\u51b3\u51b2\u7a81\uff0c\u9996\u8282\u70b9\u63d2\u5165 entry -> next = ht -> table [ index ]; ht -> table [ index ] = entry ; ht -> used ++ ; // \u8bbe\u7f6evalue dictSetKey ( d , entry , key ); return entry ; } // \u8282\u70b9 bucket \u5b9a\u4f4d static long _dictKeyIndex ( dict * d , const void * key , uint64_t hash , dictEntry ** existing ) { unsigned long idx , table ; dictEntry * he ; if ( existing ) * existing = NULL ; // \u6269\u5bb9\u68c0\u67e5 if ( _dictExpandIfNeeded ( d ) == DICT_ERR ) return -1 ; for ( table = 0 ; table <= 1 ; table ++ ) { // \u8ba1\u7b97index idx = hash & d -> ht [ table ]. sizemask ; he = d -> ht [ table ]. table [ idx ]; // key\u51b2\u7a81\u65f6\uff0c\u9700\u8981\u6bd4\u8f83\u94fe\u8868\u4e2d\u7684key\uff0c\u5224\u65adkey\u662f\u5426\u5df2\u5b58\u5728 while ( he ) { if ( key == he -> key || dictCompareKeys ( d , key , he -> key )) { if ( existing ) * existing = he ; return -1 ; } he = he -> next ; } // \u4e0d\u5728rehash\u8fc7\u7a0b\u4e2d\u65f6\uff0c\u53ea\u5728ht[0]\u4e2d\u5b9a\u4f4d bucket \u5373\u53ef if ( ! dictIsRehashing ( d )) break ; } return idx ; } // \u6269\u5bb9\u68c0\u67e5 static int _dictExpandIfNeeded ( dict * d ) { // rehash\u68c0\u67e5 if ( dictIsRehashing ( d )) return DICT_OK ; // \u672a\u521d\u59cb\u5316\u68c0\u67e5\uff0c\u5b8c\u6210\u521d\u59cb\u5316 if ( d -> ht [ 0 ]. size == 0 ) return dictExpand ( d , DICT_HT_INITIAL_SIZE ); // \u5f53\u5df2\u4f7f\u7528\u8282\u70b9\u5927\u4e8ehashtable\u5927\u5c0f\uff0c\u5e76\u4e14\u5141\u8bb8\u6269\u5bb9\u6216\u8005\u4f7f\u7528\u8282\u70b9\u5927\u4e8ehashtable\u5927\u5c0f\u76845\u500d\u65f6\uff0c\u5141\u8bb8\u6269\u5bb9 if ( d -> ht [ 0 ]. used >= d -> ht [ 0 ]. size && ( dict_can_resize || d -> ht [ 0 ]. used / d -> ht [ 0 ]. size > dict_force_resize_ratio )) { return dictExpand ( d , d -> ht [ 0 ]. used * 2 ); } return DICT_OK ; } key \u63d2\u5165 2\uff1adictAddOrFind dictEntry * dictAddOrFind ( dict * d , void * key ) { dictEntry * entry , * existing ; // key\u63d2\u5165 entry = dictAddRaw ( d , key , & existing ); // key\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u65b0\u589e\u7684entry\uff1b\u5426\u5219\u8fd4\u56de\u5df2\u5b58\u5728entry return entry ? entry : existing ; } key-value \u63d2\u5165\uff1adictAdd int dictAdd ( dict * d , void * key , void * val ) { // key \u63d2\u5165 dictEntry * entry = dictAddRaw ( d , key , NULL ); // \u5224\u65adkey\u5df2\u5b58\u5728 if ( ! entry ) return DICT_ERR ; // set value dictSetVal ( d , entry , val ); return DICT_OK ; } \u63d2\u5165\u6216\u66ff\u6362\uff1adictReplace int dictReplace ( dict * d , void * key , void * val ) { dictEntry * entry , * existing , auxentry ; // \u5f53key\u4e0d\u5b58\u5728\u65f6\u63d2\u5165\u65b0\u8282\u70b9\uff0c\u5426\u5219\u8fd4\u56de\u5df2\u5b58\u5728\u8282\u70b9 entry = dictAddRaw ( d , key , & existing ); // key \u4e0d\u5b58\u5728\uff0cset value if ( entry ) { dictSetVal ( d , entry , val ); return 1 ; } // key \u5df2\u5b58\u5728\uff0c\u66ff\u6362value\uff0c\u91ca\u653e\u65e7\u503c auxentry = * existing ; dictSetVal ( d , existing , val ); dictFreeVal ( d , & auxentry ); return 0 ; } key \u5220\u9664 1\uff1adictDelete \u5220\u9664 key\uff0c\u5f53 key \u4e0d\u5b58\u5728\u65f6\uff0c\u8fd4\u56de DICT_ERR int dictDelete ( dict * ht , const void * key ) { return dictGenericDelete ( ht , key , 0 ) ? DICT_OK : DICT_ERR ; } key \u5220\u9664 2\uff1adictUnlink \u5220\u9664 key \u5bf9\u5e94\u8282\u70b9\uff0c\u5f53 key \u4e0d\u5b58\u5728\u65f6\uff0c\u8fd4\u56de DICT_ERR \u5f53 key \u5b58\u5728\u65f6\uff0c\u5220\u9664\u8282\u70b9\uff0c\u8fd4\u56de entry\uff1b\u4f46\u4e0d\u505a free \u64cd\u4f5c\uff0c\u9700\u8981 client \u63a7\u5236 free\uff1b\u914d\u5408 dictFreeUnlinkedEntry \u65b9\u6cd5\u4f7f\u7528 dictEntry * dictUnlink ( dict * ht , const void * key ) { return dictGenericDelete ( ht , key , 1 ); } // Search and remove an element static dictEntry * dictGenericDelete ( dict * d , const void * key , int nofree ) { uint64_t h , idx ; dictEntry * he , * prevHe ; int table ; // \u7a7ahashtable\u68c0\u67e5 if ( d -> ht [ 0 ]. used == 0 && d -> ht [ 1 ]. used == 0 ) return NULL ; // \u534f\u52a9rehash if ( dictIsRehashing ( d )) _dictRehashStep ( d ); // \u8ba1\u7b97hash h = dictHashKey ( d , key ); for ( table = 0 ; table <= 1 ; table ++ ) { idx = h & d -> ht [ table ]. sizemask ; he = d -> ht [ table ]. table [ idx ]; prevHe = NULL ; while ( he ) { if ( key == he -> key || dictCompareKeys ( d , key , he -> key )) { // \u94fe\u8868\u8282\u70b9\u5220\u9664 if ( prevHe ) prevHe -> next = he -> next ; else d -> ht [ table ]. table [ idx ] = he -> next ; // \u6839\u636e\u5165\u53c2\u505a free \u64cd\u4f5c if ( ! nofree ) { dictFreeKey ( d , he ); dictFreeVal ( d , he ); zfree ( he ); } d -> ht [ table ]. used -- ; return he ; } prevHe = he ; he = he -> next ; } // \u4e0d\u5728 rehash \u8fc7\u7a0b\u4e2d\uff0c\u53ea\u9700\u8981\u64cd\u4f5cht[0] if ( ! dictIsRehashing ( d )) break ; } // \u672a\u627e\u5230 return NULL ; } \u8282\u70b9 free \uff1adictFreeUnlinkedEntry void dictFreeUnlinkedEntry ( dict * d , dictEntry * he ) { if ( he == NULL ) return ; dictFreeKey ( d , he ); dictFreeVal ( d , he ); zfree ( he ); } dict clean\uff1adictRelease void dictRelease ( dict * d ) { // hashtable \u8282\u70b9\u53ca\u7a7a\u95f4\u91ca\u653e _dictClear ( d , & d -> ht [ 0 ], NULL ); _dictClear ( d , & d -> ht [ 1 ], NULL ); // dict \u7a7a\u95f4\u91ca\u653e zfree ( d ); } // hashtable clean int _dictClear ( dict * d , dictht * ht , void ( callback )( void * )) { unsigned long i ; // \u91ca\u653e\u6bcf\u4e00\u4e2a\u8282\u70b9 for ( i = 0 ; i < ht -> size && ht -> used > 0 ; i ++ ) { dictEntry * he , * nextHe ; // \u6267\u884c hook \u65b9\u6cd5 if ( callback && ( i & 65535 ) == 0 ) callback ( d -> privdata ); if (( he = ht -> table [ i ]) == NULL ) continue ; while ( he ) { nextHe = he -> next ; dictFreeKey ( d , he ); dictFreeVal ( d , he ); zfree ( he ); ht -> used -- ; he = nextHe ; } } // hashtable\u7a7a\u95f4\u91ca\u653e zfree ( ht -> table ); // hashtable \u5b57\u6bb5\u521d\u59cb\u5316 _dictReset ( ht ); return DICT_OK ; } key \u67e5\u8be2\uff1adictFind dictEntry * dictFind ( dict * d , const void * key ) { dictEntry * he ; uint64_t h , idx , table ; // empty check if ( dictSize ( d ) == 0 ) return NULL ; // help rehash if ( dictIsRehashing ( d )) _dictRehashStep ( d ); // calculate hash h = dictHashKey ( d , key ); // find dictEntry for ( table = 0 ; table <= 1 ; table ++ ) { idx = h & d -> ht [ table ]. sizemask ; he = d -> ht [ table ]. table [ idx ]; while ( he ) { if ( key == he -> key || dictCompareKeys ( d , key , he -> key )) return he ; he = he -> next ; } if ( ! dictIsRehashing ( d )) return NULL ; } return NULL ; } key \u67e5\u8be2 value\uff1adictFetchValue void * dictFetchValue ( dict * d , const void * key ) { dictEntry * he ; // find key entry he = dictFind ( d , key ); // return entry's value return he ? dictGetVal ( he ) : NULL ; } \u6700\u5c0f\u5316\u6269\u5bb9\uff1adictResize int dictResize ( dict * d ) { unsigned long minimal ; // \u5224\u65ad\u662f\u5426\u5141\u8bb8\u6269\u5bb9\u3001\u662f\u5426\u5728rehash\u4e2d if ( ! dict_can_resize || dictIsRehashing ( d )) return DICT_ERR ; // \u83b7\u53d6\u6700\u5c0f\u4f7f\u7528\u7a7a\u95f4 minimal = d -> ht [ 0 ]. used ; if ( minimal < DICT_HT_INITIAL_SIZE ) minimal = DICT_HT_INITIAL_SIZE ; // dictExpand \u6269\u5bb9 return dictExpand ( d , minimal ); } dict \u6269\u5bb9 - dictExpand int dictExpand ( dict * d , unsigned long size ) { // \u68c0\u67e5\u662f\u5426\u5728rehash\u4e2d\uff0c\u6216\u8005\u5df2\u5b58\u5728\u8282\u70b9\u5927\u4e8ehashtable\u5927\u5c0f if ( dictIsRehashing ( d ) || d -> ht [ 0 ]. used > size ) return DICT_ERR ; // \u521d\u59cb\u5316\u65b0\u7684hashtable dictht n ; // \u8ba1\u7b97\u65b0hashtable\u5927\u5c0f unsigned long realsize = _dictNextPower ( size ); // \u5927\u5c0f\u68c0\u67e5 if ( realsize == d -> ht [ 0 ]. size ) return DICT_ERR ; // \u5206\u914d\u7a7a\u95f4\u53ca\u521d\u59cb\u5316 n . size = realsize ; n . sizemask = realsize -1 ; n . table = zcalloc ( realsize * sizeof ( dictEntry * )); n . used = 0 ; // \u68c0\u67e5hashtable\u9996\u6b21\u5206\u914d\u7a7a\u95f4 if ( d -> ht [ 0 ]. table == NULL ) { d -> ht [ 0 ] = n ; return DICT_OK ; } // \u6269\u5bb9\u5b8c\u6210\uff0c\u51c6\u5907reHash d -> ht [ 1 ] = n ; d -> rehashidx = 0 ; return DICT_OK ; } \u83b7\u53d6\u8fed\u4ee3\u5668\uff1adictGetIterator dictIterator * dictGetIterator ( dict * d ) { // \u8fed\u4ee3\u5668\u521d\u59cb\u5316 dictIterator * iter = zmalloc ( sizeof ( * iter )); iter -> d = d ; iter -> table = 0 ; iter -> index = -1 ; iter -> safe = 0 ; iter -> entry = NULL ; iter -> nextEntry = NULL ; return iter ; } \u83b7\u53d6 safe \u8fed\u4ee3\u5668\uff1adictGetSafeIterator dictIterator * dictGetSafeIterator ( dict * d ) { // \u8fed\u4ee3\u5668\u521d\u59cb\u5316 dictIterator * i = dictGetIterator ( d ); // \u8bbe\u7f6e\u5b89\u5168\u6807\u5fd7 i -> safe = 1 ; return i ; } \u8fed\u4ee3\u5668\u904d\u5386\uff1adictNext \u5b8c\u6210\u4e24\u4e2a hashtable \u7684\u904d\u5386 \u5b8c\u6210\u51b2\u7a81\u8282\u70b9\u7684\u94fe\u8868\u904d\u5386 dictEntry * dictNext ( dictIterator * iter ) { while ( 1 ) { if ( iter -> entry == NULL ) { dictht * ht = & iter -> d -> ht [ iter -> table ]; // \u7b2c\u4e00\u6b21\u904d\u5386 if ( iter -> index == -1 && iter -> table == 0 ) { if ( iter -> safe ) // \u8fed\u4ee3\u5668\u6570\u91cf+1 iter -> d -> iterators ++ ; else // \u8bb0\u5f55dict\u6307\u7eb9 iter -> fingerprint = dictFingerprint ( iter -> d ); } iter -> index ++ ; // \u68c0\u67e5\u904d\u5386\u7d22\u5f15\u5927\u4e8e buckets \u6570\u91cf if ( iter -> index >= ( long ) ht -> size ) { // rehash \u4e2d\u68c0\u67e5\uff0c\u7ee7\u7eed\u904d\u5386ht[1] if ( dictIsRehashing ( iter -> d ) && iter -> table == 0 ) { iter -> table ++ ; iter -> index = 0 ; ht = & iter -> d -> ht [ 1 ]; } else { break ; } } iter -> entry = ht -> table [ iter -> index ]; } else { iter -> entry = iter -> nextEntry ; } if ( iter -> entry ) { // \u8bbe\u7f6e nextEntry iter -> nextEntry = iter -> entry -> next ; return iter -> entry ; } } return NULL ; } \u8fed\u4ee3\u5668\u5220\u9664\uff1adictReleaseIterator void dictReleaseIterator ( dictIterator * iter ) { // \u68c0\u67e5\u8fed\u4ee3\u5668\u662f\u5426\u4f7f\u7528 if ( ! ( iter -> index == -1 && iter -> table == 0 )) { if ( iter -> safe ) // \u8fed\u4ee3\u5668\u6570\u91cf-1 iter -> d -> iterators -- ; else // \u68c0\u67e5\u6307\u7eb9\u5bf9\u6bd4 assert ( iter -> fingerprint == dictFingerprint ( iter -> d )); } zfree ( iter ); } \u83b7\u53d6\u968f\u673a key\uff1adictGetRandomKey dictEntry * dictGetRandomKey ( dict * d ) { dictEntry * he , * orighe ; unsigned long h ; int listlen , listele ; // empty check if ( dictSize ( d ) == 0 ) return NULL ; // help rehash if ( dictIsRehashing ( d )) _dictRehashStep ( d ); if ( dictIsRehashing ( d )) { // \u5728 rehash \u8fc7\u7a0b\u4e2d\u65f6 do { // \u968f\u673a\u4e00\u4e2a\u5927\u4e8e rehashidx\uff0c\u5c0f\u4e8e ht[1] \u5927\u5c0f\u7684\u503c\uff0c\u627e\u5230\u975e\u7a7a bucket h = d -> rehashidx + ( random () % ( d -> ht [ 0 ]. size + d -> ht [ 1 ]. size - d -> rehashidx )); he = ( h >= d -> ht [ 0 ]. size ) ? d -> ht [ 1 ]. table [ h - d -> ht [ 0 ]. size ] : d -> ht [ 0 ]. table [ h ]; } while ( he == NULL ); } else { // \u4e0d\u5728 rehash \u8fc7\u7a0b\u4e2d\u65f6\uff0c\u5728 ht[0] buckets \u8303\u56f4\u5185\u968f\u673a\u627e\u5230\u4e00\u4e2a\u975e\u7a7a\u8282\u70b9 do { h = random () & d -> ht [ 0 ]. sizemask ; he = d -> ht [ 0 ]. table [ h ]; } while ( he == NULL ); } listlen = 0 ; orighe = he ; // \u7edf\u8ba1\u94fe\u8868\u957f\u5ea6 while ( he ) { he = he -> next ; listlen ++ ; } // \u968f\u673a\u4e00\u4e2a\u5c0f\u4e8e\u94fe\u8868\u957f\u5ea6\u7684\u503c listele = random () % listlen ; he = orighe ; // \u5b9a\u4f4d\u8fd9\u4e2a\u503c while ( listele -- ) he = he -> next ; return he ; } \u6279\u91cf\u83b7\u53d6\u968f\u673a key\uff1adictGetSomeKeys \u4e0d\u4fdd\u8bc1\u8fd4\u56de\u6307\u5b9a\u6570\u91cf\u7684\u968f\u673a\u8282\u70b9\uff0c\u4e5f\u4e0d\u4fdd\u8bc1\u4e0d\u8fd4\u56de\u91cd\u590d\u8282\u70b9 unsigned int dictGetSomeKeys ( dict * d , dictEntry ** des , unsigned int count ) { unsigned long j ; unsigned long tables ; unsigned long stored = 0 , maxsizemask ; unsigned long maxsteps ; // \u68c0\u67e5 count \u662f\u5426\u5927\u4e8e \u4e24\u4e2a hashtable \u957f\u5ea6\u4e4b\u548c if ( dictSize ( d ) < count ) count = dictSize ( d ); // \u521d\u59cb\u5316\u6700\u5927\u67e5\u627e\u6b21\u6570 maxsteps = count * 10 ; // \u534f\u52a9 rehash for ( j = 0 ; j < count ; j ++ ) { if ( dictIsRehashing ( d )) _dictRehashStep ( d ); else break ; } // \u786e\u5b9a hashtable \u67e5\u8be2\u6570\u91cf\u8303\u56f4 tables = dictIsRehashing ( d ) ? 2 : 1 ; // \u83b7\u53d6\u6700\u5927\u63a9\u7801 maxsizemask = d -> ht [ 0 ]. sizemask ; if ( tables > 1 && maxsizemask < d -> ht [ 1 ]. sizemask ) maxsizemask = d -> ht [ 1 ]. sizemask ; // \u8ba1\u7b97 bucket \u521d\u59cb\u4f4d\u7f6e unsigned long i = random () & maxsizemask ; // \u8fde\u7eed\u7a7a bucket \u7edf\u8ba1 unsigned long emptylen = 0 ; while ( stored < count && maxsteps -- ) { for ( j = 0 ; j < tables ; j ++ ) { // \u5982\u679c\u5728 rehash \u4e2d\uff0c\u5728 ht[0] \u4e2d 0 - rehashidx - 1 \u7684\u503c\u5df2\u7ecf\u5b8c\u6210\u8fc1\u79fb if ( tables == 2 && j == 0 && i < ( unsigned long ) d -> rehashidx ) { // \u68c0\u67e5\u521d\u59cb\u4f4d\u7f6e\u6709\u6548\u6027\uff0c\u5982\u679c\u8d8a\u754c\uff0c\u8d4b\u503c\u4e3a rehashidx if ( i >= d -> ht [ 1 ]. size ) i = d -> rehashidx ; else // \u5728ht[1] \u4e2d\u7ee7\u7eed continue ; } // index overflow \u68c0\u67e5 if ( i >= d -> ht [ j ]. size ) continue ; dictEntry * he = d -> ht [ j ]. table [ i ]; // \u68c0\u67e5 empty bucket if ( he == NULL ) { emptylen ++ ; // \u5982\u679c\u8fde\u7eed5\u4e2a\u7a7a bucket\uff0c\u5e76\u4e14\u5927\u4e8e\u76ee\u6807 entry \u6570\u91cf\uff0c\u91cd\u65b0\u8ba1\u7b97\u521d\u59cb bucket \u4f4d\u7f6e if ( emptylen >= 5 && emptylen > count ) { i = random () & maxsizemask ; emptylen = 0 ; } } else { emptylen = 0 ; // \u5c06\u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\u653e\u5165\u7ed3\u679c\u96c6 while ( he ) { * des = he ; des ++ ; he = he -> next ; stored ++ ; if ( stored == count ) return stored ; } } } // \u8fde\u7eed\u9012\u589e\uff0c\u5e76\u4e14\u9632\u6b62\u8d8a\u754c i = ( i + 1 ) & maxsizemask ; } return stored ; } \u516c\u5e73\u83b7\u53d6\u968f\u673a key\uff1adictGetFairRandomKey dictEntry * dictGetFairRandomKey ( dict * d ) { // \u5b9a\u4e49\u7ed3\u679c\u96c6\uff0c\u9ed8\u8ba4\u957f\u5ea615 dictEntry * entries [ GETFAIR_NUM_ENTRIES ]; // \u83b7\u53d6\u968f\u673a\u8282\u70b9 unsigned int count = dictGetSomeKeys ( d , entries , GETFAIR_NUM_ENTRIES ); // \u7ed3\u679c\u96c6\u4e3a\u7a7a\uff0c\u5219\u8c03\u7528 dictGetRandomKey \u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u8282\u70b9 if ( count == 0 ) return dictGetRandomKey ( d ); // \u6839\u636e\u7ed3\u679c\u96c6\u957f\u5ea6\uff0c\u968f\u673a\u8fd4\u56de\u4e00\u4e2a\u8282\u70b9 unsigned int idx = rand () % count ; return entries [ idx ]; } Debug \u63a5\u53e3\u83b7\u53d6 htstats\uff1a dictGetStats void dictGetStats ( char * buf , size_t bufsize , dict * d ) { size_t l ; char * orig_buf = buf ; size_t orig_bufsize = bufsize ; // \u83b7\u53d6 ht[0] \u72b6\u6001\u4fe1\u606f l = _dictGetStatsHt ( buf , bufsize , & d -> ht [ 0 ], 0 ); buf += l ; bufsize -= l ; // \u83b7\u53d6 ht[1] \u72b6\u6001\u4fe1\u606f if ( dictIsRehashing ( d ) && bufsize > 0 ) { _dictGetStatsHt ( buf , bufsize , & d -> ht [ 1 ], 1 ); } // set '\\0' \u4e3a buf \u5c3e\u5143\u7d20 if ( orig_bufsize ) orig_buf [ orig_bufsize -1 ] = '\\0' ; } // \u83b7\u53d6 hashtable \u72b6\u6001 size_t _dictGetStatsHt ( char * buf , size_t bufsize , dictht * ht , int tableid ) { unsigned long i , slots = 0 , chainlen , maxchainlen = 0 ; unsigned long totchainlen = 0 ; // \u94fe\u8868\u957f\u5ea6\u7edf\u8ba1 unsigned long clvector [ DICT_STATS_VECTLEN ]; size_t l = 0 ; // empty check if ( ht -> used == 0 ) { return snprintf ( buf , bufsize , \"No stats available for empty dictionaries \\n \" ); } // \u7ed3\u679c\u96c6\u521d\u59cb\u5316 for ( i = 0 ; i < DICT_STATS_VECTLEN ; i ++ ) clvector [ i ] = 0 ; for ( i = 0 ; i < ht -> size ; i ++ ) { dictEntry * he ; // \u7a7a bucket \u68c0\u67e5 if ( ht -> table [ i ] == NULL ) { clvector [ 0 ] ++ ; continue ; } // \u975e\u7a7a slot \u7edf\u8ba1 slots ++ ; // \u8ba1\u7b97\u94fe\u8868\u957f\u5ea6 chainlen = 0 ; he = ht -> table [ i ]; while ( he ) { chainlen ++ ; he = he -> next ; } // \u6839\u636e\u94fe\u8868\u957f\u5ea6\u7edf\u8ba1 key \u6570\u91cf clvector [( chainlen < DICT_STATS_VECTLEN ) ? chainlen : ( DICT_STATS_VECTLEN -1 )] ++ ; // \u8ba1\u7b97\u6700\u957f\u94fe\u8868 if ( chainlen > maxchainlen ) maxchainlen = chainlen ; // \u7edf\u8ba1\u94fe\u8868\u957f\u5ea6\u548c totchainlen += chainlen ; } // \u53ef\u8bfb\u4fe1\u606f\u751f\u6210\uff1ahashtable \u4fe1\u606f\u3001size\u3001\u4f7f\u7528\u6570\u91cf\u3001slots\u3001\u6700\u957f\u94fe\u8868\uff0c\u94fe\u8868\u8282\u70b9\u5360\u6bd4\u3001\u4f7f\u7528\u7387 l += snprintf ( buf + l , bufsize - l , \"Hash table %d stats (%s): \\n \" \" table size: %ld \\n \" \" number of elements: %ld \\n \" \" different slots: %ld \\n \" \" max chain length: %ld \\n \" \" avg chain length (counted): %.02f \\n \" \" avg chain length (computed): %.02f \\n \" \" Chain length distribution: \\n \" , tableid , ( tableid == 0 ) ? \"main hash table\" : \"rehashing target\" , ht -> size , ht -> used , slots , maxchainlen , ( float ) totchainlen / slots , ( float ) ht -> used / slots ); for ( i = 0 ; i < DICT_STATS_VECTLEN -1 ; i ++ ) { if ( clvector [ i ] == 0 ) continue ; if ( l >= bufsize ) break ; l += snprintf ( buf + l , bufsize - l , \" %s%ld: %ld (%.02f%%) \\n \" , ( i == DICT_STATS_VECTLEN -1 ) ? \">= \" : \"\" , i , clvector [ i ], (( float ) clvector [ i ] / ht -> size ) * 100 ); } /* Unlike snprintf(), teturn the number of characters actually written. */ if ( bufsize ) buf [ bufsize -1 ] = '\\0' ; return strlen ( buf ); } siphash hash \u751f\u6210\u51fd\u6570 dictGenHashFunction uint64_t dictGenHashFunction ( const void * key , int len ) { return siphash ( key , len , dict_hash_function_seed ); } siphash \u5927\u5c0f\u5199\u654f\u611f hash \u751f\u6210\u51fd\u6570 dictGenHashFunction uint64_t dictGenCaseHashFunction ( const unsigned char * buf , int len ) { return siphash_nocase ( buf , len , dict_hash_function_seed ); } \u6e05\u7a7a dict\uff1a dictEmpty void dictEmpty ( dict * d , void ( callback )( void * )) { // hashtable \u8282\u70b9\u53ca\u7a7a\u95f4\u91ca\u653e _dictClear ( d , & d -> ht [ 0 ], callback ); _dictClear ( d , & d -> ht [ 1 ], callback ); // \u91cd\u7f6e rehashidx \u53ca\u8fed\u4ee3\u5668\u8ba1\u6570 d -> rehashidx = -1 ; d -> iterators = 0 ; } \u542f\u7528 rehash\uff1adictEnableResize void dictEnableResize ( void ) { dict_can_resize = 1 ; } \u7981\u6b62 rehash\uff1adictEnableResize void dictDisableResize ( void ) { dict_can_resize = 0 ; } \u9650\u5236\u6b65\u6570 rehash\uff1adictRehash iterators \u8fed\u4ee3\u5668\u6570\u91cf\u5fc5\u987b\u4e3a 0 int dictRehash ( dict * d , int n ) { // \u6700\u5927\u7a7a bucket \u68c0\u6d4b\u6b21\u6570 int empty_visits = n * 10 ; // rehash \u4e2d\u68c0\u67e5 if ( ! dictIsRehashing ( d )) return 0 ; // step \u63a7\u5236 while ( n -- && d -> ht [ 0 ]. used != 0 ) { dictEntry * de , * nextde ; // rehashidx overflow check assert ( d -> ht [ 0 ]. size > ( unsigned long ) d -> rehashidx ); // \u67e5\u627e\u975e\u7a7a bucket while ( d -> ht [ 0 ]. table [ d -> rehashidx ] == NULL ) { d -> rehashidx ++ ; if ( -- empty_visits == 0 ) return 1 ; } // \u62ff\u5230 entry de = d -> ht [ 0 ]. table [ d -> rehashidx ]; // \u5904\u7406\u94fe\u8868\u4e2d\u7684\u6240\u6709entry while ( de ) { uint64_t h ; nextde = de -> next ; // \u8ba1\u7b97\u65b0\u7684 bucket \u4f4d\u7f6e h = dictHashKey ( d , de -> key ) & d -> ht [ 1 ]. sizemask ; // \u5934\u8282\u70b9\u63d2\u5165 de -> next = d -> ht [ 1 ]. table [ h ]; d -> ht [ 1 ]. table [ h ] = de ; d -> ht [ 0 ]. used -- ; d -> ht [ 1 ]. used ++ ; de = nextde ; } // \u65e7\u7684 bucket \u7f6e\u7a7a d -> ht [ 0 ]. table [ d -> rehashidx ] = NULL ; // rehash \u4f4d\u7f6e+1 d -> rehashidx ++ ; } // rehash \u5b8c\u6210\u68c0\u67e5 if ( d -> ht [ 0 ]. used == 0 ) { // \u91ca\u653e\u65e7\u7684 hashtable zfree ( d -> ht [ 0 ]. table ); // \u4f7f\u7528\u6269\u5bb9\u540e\u7684 hashtable \u66ff\u6362\u65e7\u7684 hashtable d -> ht [ 0 ] = d -> ht [ 1 ]; // ht[1] \u91cd\u7f6e _dictReset ( & d -> ht [ 1 ]); // rehash \u6807\u5fd7\u91cd\u7f6e d -> rehashidx = -1 ; return 0 ; } return 1 ; } \u9650\u65f6 rehash\uff1adictRehashMilliseconds int dictRehashMilliseconds ( dict * d , int ms ) { // \u8fed\u4ee3\u4e2d\uff0c if ( d -> iterators > 0 ) return 0 ; // \u83b7\u53d6 rehash \u5f00\u59cb\u65f6\u95f4 long long start = timeInMilliseconds (); int rehashes = 0 ; // \u6267\u884c100\u6b21 rehash while ( dictRehash ( d , 100 )) { rehashes += 100 ; // \u8d85\u65f6\u68c0\u67e5 if ( timeInMilliseconds () - start > ms ) break ; } // \u8fd4\u56de rehash \u6b21\u6570 return rehashes ; } long long timeInMilliseconds ( void ) { struct timeval tv ; gettimeofday ( & tv , NULL ); return ((( long long ) tv . tv_sec ) * 1000 ) + ( tv . tv_usec / 1000 ); } \u8bbe\u7f6e hash \u51fd\u6570\u79cd\u5b50\uff1adictSetHashFunctionSeed static uint8_t dict_hash_function_seed [ 16 ]; void dictSetHashFunctionSeed ( uint8_t * seed ) { memcpy ( dict_hash_function_seed , seed , sizeof ( dict_hash_function_seed )); } \u83b7\u53d6 hash \u51fd\u6570\u79cd\u5b50\uff1adictGetHashFunctionSeed uint8_t * dictGetHashFunctionSeed ( void ) { return dict_hash_function_seed ; } dict \u626b\u63cf\uff1adictScan dictScan() \u7528\u4e8e\u904d\u5386\u5b57\u5178\u7684\u6240\u6709\u5143\u7d20 \u5f00\u59cb\u904d\u5386\u90a3\u4e00\u523b\u7684\u6240\u6709\u5143\u7d20\uff0c\u53ea\u8981\u4e0d\u88ab\u5220\u9664\uff0c\u80af\u5b9a\u80fd\u88ab\u904d\u5386\u5230\uff0c\u4e0d\u7ba1\u5b57\u5178\u6269\u5c55\u8fd8\u662f\u7f29\u5c0f \u53ef\u80fd\u4f1a\u8fd4\u56de\u91cd\u590d\u5143\u7d20\uff0c\u4f46\u662f\u5df2\u7ecf\u628a\u8fd4\u56de\u91cd\u590d\u5143\u7d20\u7684\u53ef\u80fd\u6027\u964d\u5230\u4e86\u6700\u4f4e /* \u5bf9 v \u8fdb\u884c\u4e8c\u8fdb\u5236\u9006\u5e8f\u64cd\u4f5c http://graphics.stanford.edu/~seander/bithacks.html#ReverseParallel */ static unsigned long rev ( unsigned long v ) { unsigned long s = CHAR_BIT * sizeof ( v ); // bit size; must be power of 2 unsigned long mask = ~ 0UL ; while (( s >>= 1 ) > 0 ) { mask ^= ( mask << s ); v = (( v >> s ) & mask ) | (( v << s ) & ~ mask ); } return v ; } /* \u5b57\u5178\u904d\u5386 v\uff1a \u8981\u904d\u5386\u7684 bucket \u7d22\u5f15 */ unsigned long dictScan ( dict * d , unsigned long v , dictScanFunction * fn , dictScanBucketFunction * bucketfn , void * privdata ) { dictht * t0 , * t1 ; const dictEntry * de , * next ; unsigned long m0 , m1 ; // empty check if ( dictSize ( d ) == 0 ) return 0 ; // \u8fed\u4ee3\u5668\u6570\u91cf+1\uff0c\u9632\u6b62 rehash d -> iterators ++ ; // \u5982\u679c\u4e0d\u5728 rehash \u4e2d if ( ! dictIsRehashing ( d )) { t0 = & ( d -> ht [ 0 ]); m0 = t0 -> sizemask ; // bucket callback if ( bucketfn ) bucketfn ( privdata , & t0 -> table [ v & m0 ]); de = t0 -> table [ v & m0 ]; // bucket \u94fe\u8868\u904d\u5386 while ( de ) { next = de -> next ; fn ( privdata , de ); // \u94fe\u8868\u8282\u70b9 callback de = next ; } v |= ~ m0 ; // \u4fdd\u7559 v \u7684\u4f4e n \u4f4d\u6570\uff0c\u5176\u4f59\u4f4d\u5168\u7f6e\u4e3a 1 // [\u4e8c\u8fdb\u5236\u53cd\u8f6c](http://graphics.stanford.edu/~seander/bithacks.html#ReverseParallel) v = rev ( v ); // \u5c06 v \u7684\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u7ffb\u8f6c\uff0c\u6240\u4ee5\uff0cv\u7684\u4f4e n \u4f4d\u6570\u6210\u4e86\u9ad8 n \u4f4d\u6570\uff0c\u5e76\u4e14\u8fdb\u884c\u4e86\u7ffb\u8f6c v ++ ; // \u81ea\u589e v = rev ( v ); // \u518d\u6b21\u4e8c\u8fdb\u5236\u7ffb\u8f6c } else { // \u5728 rehash \u8fc7\u7a0b\u4e2d t0 = & d -> ht [ 0 ]; t1 = & d -> ht [ 1 ]; // \u786e\u4fdd t0 \u957f\u5ea6\u5c0f\u4e8e t1 if ( t0 -> size > t1 -> size ) { t0 = & d -> ht [ 1 ]; t1 = & d -> ht [ 0 ]; } m0 = t0 -> sizemask ; m1 = t1 -> sizemask ; // bucket callback if ( bucketfn ) bucketfn ( privdata , & t0 -> table [ v & m0 ]); de = t0 -> table [ v & m0 ]; // bucket \u94fe\u8868\u904d\u5386 while ( de ) { next = de -> next ; fn ( privdata , de ); // \u94fe\u8868\u8282\u70b9 callback de = next ; } // \u5927\u7684 hashtable t1 \u904d\u5386 do { if ( bucketfn ) bucketfn ( privdata , & t1 -> table [ v & m1 ]); // bucket callback de = t1 -> table [ v & m1 ]; // bucket \u94fe\u8868\u904d\u5386 while ( de ) { next = de -> next ; fn ( privdata , de ); // \u94fe\u8868\u8282\u70b9 callback de = next ; } v |= ~ m1 ; // \u4fdd\u7559 v \u7684\u4f4e n \u4f4d\u6570\uff0c\u5176\u4f59\u4f4d\u5168\u7f6e\u4e3a 1 v = rev ( v ); // \u5c06 v \u7684\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u7ffb\u8f6c\uff0c\u6240\u4ee5\uff0cv\u7684\u4f4e n \u4f4d\u6570\u6210\u4e86\u9ad8 n \u4f4d\u6570\uff0c\u5e76\u4e14\u8fdb\u884c\u4e86\u7ffb\u8f6c v ++ ; // \u81ea\u589e v = rev ( v ); // \u518d\u6b21\u4e8c\u8fdb\u5236\u7ffb\u8f6c // \u76f4\u5230 v \u7684\u4f4e m1-m0 \u4f4d\u5230\u4f4e m1 \u4f4d\u4e4b\u95f4\u5168\u90e8\u4e3a 0 \u4e3a\u6b62 } while ( v & ( m0 ^ m1 )); } // \u8fed\u4ee3\u5668\u6570\u91cf-1 d -> iterators -- ; return v ; } \u8ba1\u7b97 hash\uff1a dictGetHash \u4f7f\u7528\u7684 hash \u51fd\u6570\u4e3a\u521d\u59cb\u5316 dict \u65f6\u8bbe\u7f6e\u7684 hash \u51fd\u6570 uint64_t dictGetHash ( dict * d , const void * key ) { return dictHashKey ( d , key ); } \u6839\u636e\u6307\u9488\u548c hash \u67e5\u8be2 entry\uff1a dictFindEntryRefByPtrAndHash dictEntry ** dictFindEntryRefByPtrAndHash ( dict * d , const void * oldptr , uint64_t hash ) { dictEntry * he , ** heref ; unsigned long idx , table ; // empty check if ( dictSize ( d ) == 0 ) return NULL ; for ( table = 0 ; table <= 1 ; table ++ ) { // \u8ba1\u7b97 slot idx = hash & d -> ht [ table ]. sizemask ; heref = & d -> ht [ table ]. table [ idx ]; he = * heref ; // \u94fe\u8868\u8282\u70b9\u67e5\u8be2 while ( he ) { // \u901a\u8fc7\u6307\u9488\u5bf9\u6bd4\u4ee3\u66ff key \u5bf9\u6bd4 if ( oldptr == he -> key ) return heref ; heref = & he -> next ; he = * heref ; } // \u975e rehash \u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u9700\u8981\u67e5\u8be2 ht[1] if ( ! dictIsRehashing ( d )) return NULL ; } return NULL ; }","title":"HashTable"},{"location":"Redis/HashTable/#hashtable","text":"","title":"HashTable"},{"location":"Redis/HashTable/#_1","text":"Redis-HashTable-\u63a5\u53e3","title":"\u76ee\u5f55"},{"location":"Redis/HashTable/#_2","text":"dict.h dict.c","title":"\u6e90\u7801"},{"location":"Redis/HashTable/#dicttype","text":"\u5b9a\u4e49\u4e00\u7ec4 key-value \u7684\u64cd\u4f5c\u51fd\u6570\u6a21\u7248 typedef struct dictType { // \u8ba1\u7b97hash\u7684\u51fd\u6570 uint64_t ( * hashFunction )( const void * key ); // key \u590d\u5236\u51fd\u6570\uff0c\u4e00\u822c\u4f7f\u7528NULL void * ( * keyDup )( void * privdata , const void * key ); // value \u590d\u5236\u51fd\u6570\uff0c\u4e00\u822c\u4f7f\u7528NULL void * ( * valDup )( void * privdata , const void * obj ); // key \u6bd4\u8f83\u51fd\u6570 int ( * keyCompare )( void * privdata , const void * key1 , const void * key2 ); // key \u91ca\u653e\u51fd\u6570 void ( * keyDestructor )( void * privdata , void * key ); // value \u91ca\u653e\u51fd\u6570 void ( * valDestructor )( void * privdata , void * obj ); } dictType ;","title":"dictType"},{"location":"Redis/HashTable/#dict-","text":"typedef struct dict { // key-value \u64cd\u4f5c\u51fd\u6570\u7ec4 dictType * type ; // \u79c1\u6709\u6570\u636e\uff0c\u7528\u5728\u7279\u5b9a hooks \u51fd\u6570\u4e2d void * privdata ; // hashTable, ht[1] \u6269\u5bb9\u4e2d\u7684hashTable, ht[0] \u65e7\u7684hashTable dictht ht [ 2 ]; // rehash \u6807\u5fd7\uff0c\u9ed8\u8ba4\u4e3a-1\uff08\u672a\u5728\u6269\u5bb9\u4e2d\uff09 long rehashidx ; // \u8fed\u4ee3\u5668\u6570\u91cf unsigned long iterators ; } dict ;","title":"dict - \u5b57\u5178\u7ed3\u6784"},{"location":"Redis/HashTable/#dictht-hashtable","text":"typedef struct dictht { // hash \u6570\u7ec4 dictEntry ** table ; // hash \u6570\u7ec4\u5927\u5c0f unsigned long size ; // \u54c8\u5e0c\u8868\u5927\u5c0f\u63a9\u7801\uff0c\u7b49\u4e8esize-1 unsigned long sizemask ; // hash \u6570\u7ec4\u5df2\u4f7f\u7528\u5927\u5c0f unsigned long used ; } dictht ;","title":"dictht - hashTable \u7ed3\u6784"},{"location":"Redis/HashTable/#dictentry-hash","text":"typedef struct dictEntry { // \u5143\u7d20 key void * key ; // \u5143\u7d20 value union { void * val ; uint64_t u64 ; int64_t s64 ; double d ; } v ; // \u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740 struct dictEntry * next ; } dictEntry ;","title":"dictEntry - hash \u8282\u70b9"},{"location":"Redis/HashTable/#_3","text":"typedef struct dictIterator { // dict dict * d ; // long index ; // hashTable \u6807\u5fd7(0/1)\uff1b\u5b89\u5168\u6807\u5fd7 int table , safe ; // \u5f53\u524dentrey\u3001\u94fe\u8868\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9 dictEntry * entry , * nextEntry ; // dict \u6307\u7eb9 long long fingerprint ; } dictIterator ;","title":"\u8fed\u4ee3\u5668"},{"location":"Redis/HashTable/#redis-hashtable-interfaces","text":"","title":"Redis-HashTable-Interfaces"},{"location":"Redis/HashTable/#dict-dictcreate","text":"// \u521b\u5efa\u65b0\u7684dict dict * dictCreate ( dictType * type , void * privDataPtr ) { // \u5206\u914d\u521d\u59cb\u5185\u5b58\u7a7a\u95f4 dict * d = zmalloc ( sizeof ( * d )); // \u521d\u59cb\u5316 _dictInit ( d , type , privDataPtr ); // \u8fd4\u56dedict\u6307\u9488 return d ; } // dict \u521d\u59cb\u5316 int _dictInit ( dict * d , dictType * type , void * privDataPtr ) { // hashtable \u521d\u59cb\u5316 _dictReset ( & d -> ht [ 0 ]); _dictReset ( & d -> ht [ 1 ]); d -> type = type ; d -> privdata = privDataPtr ; d -> rehashidx = -1 ; d -> iterators = 0 ; return DICT_OK ; } static void _dictReset ( dictht * ht ) { ht -> table = NULL ; ht -> size = 0 ; ht -> sizemask = 0 ; ht -> used = 0 ; }","title":"dict \u521b\u5efa - dictCreate"},{"location":"Redis/HashTable/#key-1dictaddraw","text":"\u67e5\u8be2 key \u7684 bucket \u5e76\u63d2\u5165 dictEntry \u5f53 key \u5df2\u5b58\u5728\u65f6\uff0c\u629b\u51fa\u5f02\u5e38 dictEntry * dictAddRaw ( dict * d , void * key , dictEntry ** existing ) { long index ; dictEntry * entry ; dictht * ht ; // rehash\u68c0\u67e5\u53ca\u534f\u52a9 if ( dictIsRehashing ( d )) _dictRehashStep ( d ); // \u8ba1\u7b97key\u7684\u63d2\u5165\u7d22\u5f15\uff0c\u5982\u679ckey\u5df2\u5b58\u5728\uff0c\u5219\u8fd4\u56de-1 if (( index = _dictKeyIndex ( d , key , dictHashKey ( d , key ), existing )) == -1 ) return NULL ; // \u5224\u65ad\u64cd\u4f5c\u7684hashtable\uff0crehash\u4e2d\u7684\u63d2\u5165\u64cd\u4f5c\u76ee\u6807\u662fht[1] ht = dictIsRehashing ( d ) ? & d -> ht [ 1 ] : & d -> ht [ 0 ]; // \u65b0\u8282\u70b9\u5185\u5b58\u5206\u914d entry = zmalloc ( sizeof ( * entry )); // \u62c9\u94fe\u6cd5\u89e3\u51b3\u51b2\u7a81\uff0c\u9996\u8282\u70b9\u63d2\u5165 entry -> next = ht -> table [ index ]; ht -> table [ index ] = entry ; ht -> used ++ ; // \u8bbe\u7f6evalue dictSetKey ( d , entry , key ); return entry ; } // \u8282\u70b9 bucket \u5b9a\u4f4d static long _dictKeyIndex ( dict * d , const void * key , uint64_t hash , dictEntry ** existing ) { unsigned long idx , table ; dictEntry * he ; if ( existing ) * existing = NULL ; // \u6269\u5bb9\u68c0\u67e5 if ( _dictExpandIfNeeded ( d ) == DICT_ERR ) return -1 ; for ( table = 0 ; table <= 1 ; table ++ ) { // \u8ba1\u7b97index idx = hash & d -> ht [ table ]. sizemask ; he = d -> ht [ table ]. table [ idx ]; // key\u51b2\u7a81\u65f6\uff0c\u9700\u8981\u6bd4\u8f83\u94fe\u8868\u4e2d\u7684key\uff0c\u5224\u65adkey\u662f\u5426\u5df2\u5b58\u5728 while ( he ) { if ( key == he -> key || dictCompareKeys ( d , key , he -> key )) { if ( existing ) * existing = he ; return -1 ; } he = he -> next ; } // \u4e0d\u5728rehash\u8fc7\u7a0b\u4e2d\u65f6\uff0c\u53ea\u5728ht[0]\u4e2d\u5b9a\u4f4d bucket \u5373\u53ef if ( ! dictIsRehashing ( d )) break ; } return idx ; } // \u6269\u5bb9\u68c0\u67e5 static int _dictExpandIfNeeded ( dict * d ) { // rehash\u68c0\u67e5 if ( dictIsRehashing ( d )) return DICT_OK ; // \u672a\u521d\u59cb\u5316\u68c0\u67e5\uff0c\u5b8c\u6210\u521d\u59cb\u5316 if ( d -> ht [ 0 ]. size == 0 ) return dictExpand ( d , DICT_HT_INITIAL_SIZE ); // \u5f53\u5df2\u4f7f\u7528\u8282\u70b9\u5927\u4e8ehashtable\u5927\u5c0f\uff0c\u5e76\u4e14\u5141\u8bb8\u6269\u5bb9\u6216\u8005\u4f7f\u7528\u8282\u70b9\u5927\u4e8ehashtable\u5927\u5c0f\u76845\u500d\u65f6\uff0c\u5141\u8bb8\u6269\u5bb9 if ( d -> ht [ 0 ]. used >= d -> ht [ 0 ]. size && ( dict_can_resize || d -> ht [ 0 ]. used / d -> ht [ 0 ]. size > dict_force_resize_ratio )) { return dictExpand ( d , d -> ht [ 0 ]. used * 2 ); } return DICT_OK ; }","title":"key \u63d2\u5165 1\uff1adictAddRaw"},{"location":"Redis/HashTable/#key-2dictaddorfind","text":"dictEntry * dictAddOrFind ( dict * d , void * key ) { dictEntry * entry , * existing ; // key\u63d2\u5165 entry = dictAddRaw ( d , key , & existing ); // key\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u65b0\u589e\u7684entry\uff1b\u5426\u5219\u8fd4\u56de\u5df2\u5b58\u5728entry return entry ? entry : existing ; }","title":"key \u63d2\u5165 2\uff1adictAddOrFind"},{"location":"Redis/HashTable/#key-value-dictadd","text":"int dictAdd ( dict * d , void * key , void * val ) { // key \u63d2\u5165 dictEntry * entry = dictAddRaw ( d , key , NULL ); // \u5224\u65adkey\u5df2\u5b58\u5728 if ( ! entry ) return DICT_ERR ; // set value dictSetVal ( d , entry , val ); return DICT_OK ; }","title":"key-value \u63d2\u5165\uff1adictAdd"},{"location":"Redis/HashTable/#dictreplace","text":"int dictReplace ( dict * d , void * key , void * val ) { dictEntry * entry , * existing , auxentry ; // \u5f53key\u4e0d\u5b58\u5728\u65f6\u63d2\u5165\u65b0\u8282\u70b9\uff0c\u5426\u5219\u8fd4\u56de\u5df2\u5b58\u5728\u8282\u70b9 entry = dictAddRaw ( d , key , & existing ); // key \u4e0d\u5b58\u5728\uff0cset value if ( entry ) { dictSetVal ( d , entry , val ); return 1 ; } // key \u5df2\u5b58\u5728\uff0c\u66ff\u6362value\uff0c\u91ca\u653e\u65e7\u503c auxentry = * existing ; dictSetVal ( d , existing , val ); dictFreeVal ( d , & auxentry ); return 0 ; }","title":"\u63d2\u5165\u6216\u66ff\u6362\uff1adictReplace"},{"location":"Redis/HashTable/#key-1dictdelete","text":"\u5220\u9664 key\uff0c\u5f53 key \u4e0d\u5b58\u5728\u65f6\uff0c\u8fd4\u56de DICT_ERR int dictDelete ( dict * ht , const void * key ) { return dictGenericDelete ( ht , key , 0 ) ? DICT_OK : DICT_ERR ; }","title":"key \u5220\u9664 1\uff1adictDelete"},{"location":"Redis/HashTable/#key-2dictunlink","text":"\u5220\u9664 key \u5bf9\u5e94\u8282\u70b9\uff0c\u5f53 key \u4e0d\u5b58\u5728\u65f6\uff0c\u8fd4\u56de DICT_ERR \u5f53 key \u5b58\u5728\u65f6\uff0c\u5220\u9664\u8282\u70b9\uff0c\u8fd4\u56de entry\uff1b\u4f46\u4e0d\u505a free \u64cd\u4f5c\uff0c\u9700\u8981 client \u63a7\u5236 free\uff1b\u914d\u5408 dictFreeUnlinkedEntry \u65b9\u6cd5\u4f7f\u7528 dictEntry * dictUnlink ( dict * ht , const void * key ) { return dictGenericDelete ( ht , key , 1 ); } // Search and remove an element static dictEntry * dictGenericDelete ( dict * d , const void * key , int nofree ) { uint64_t h , idx ; dictEntry * he , * prevHe ; int table ; // \u7a7ahashtable\u68c0\u67e5 if ( d -> ht [ 0 ]. used == 0 && d -> ht [ 1 ]. used == 0 ) return NULL ; // \u534f\u52a9rehash if ( dictIsRehashing ( d )) _dictRehashStep ( d ); // \u8ba1\u7b97hash h = dictHashKey ( d , key ); for ( table = 0 ; table <= 1 ; table ++ ) { idx = h & d -> ht [ table ]. sizemask ; he = d -> ht [ table ]. table [ idx ]; prevHe = NULL ; while ( he ) { if ( key == he -> key || dictCompareKeys ( d , key , he -> key )) { // \u94fe\u8868\u8282\u70b9\u5220\u9664 if ( prevHe ) prevHe -> next = he -> next ; else d -> ht [ table ]. table [ idx ] = he -> next ; // \u6839\u636e\u5165\u53c2\u505a free \u64cd\u4f5c if ( ! nofree ) { dictFreeKey ( d , he ); dictFreeVal ( d , he ); zfree ( he ); } d -> ht [ table ]. used -- ; return he ; } prevHe = he ; he = he -> next ; } // \u4e0d\u5728 rehash \u8fc7\u7a0b\u4e2d\uff0c\u53ea\u9700\u8981\u64cd\u4f5cht[0] if ( ! dictIsRehashing ( d )) break ; } // \u672a\u627e\u5230 return NULL ; }","title":"key \u5220\u9664 2\uff1adictUnlink"},{"location":"Redis/HashTable/#free-dictfreeunlinkedentry","text":"void dictFreeUnlinkedEntry ( dict * d , dictEntry * he ) { if ( he == NULL ) return ; dictFreeKey ( d , he ); dictFreeVal ( d , he ); zfree ( he ); }","title":"\u8282\u70b9 free \uff1adictFreeUnlinkedEntry"},{"location":"Redis/HashTable/#dict-cleandictrelease","text":"void dictRelease ( dict * d ) { // hashtable \u8282\u70b9\u53ca\u7a7a\u95f4\u91ca\u653e _dictClear ( d , & d -> ht [ 0 ], NULL ); _dictClear ( d , & d -> ht [ 1 ], NULL ); // dict \u7a7a\u95f4\u91ca\u653e zfree ( d ); } // hashtable clean int _dictClear ( dict * d , dictht * ht , void ( callback )( void * )) { unsigned long i ; // \u91ca\u653e\u6bcf\u4e00\u4e2a\u8282\u70b9 for ( i = 0 ; i < ht -> size && ht -> used > 0 ; i ++ ) { dictEntry * he , * nextHe ; // \u6267\u884c hook \u65b9\u6cd5 if ( callback && ( i & 65535 ) == 0 ) callback ( d -> privdata ); if (( he = ht -> table [ i ]) == NULL ) continue ; while ( he ) { nextHe = he -> next ; dictFreeKey ( d , he ); dictFreeVal ( d , he ); zfree ( he ); ht -> used -- ; he = nextHe ; } } // hashtable\u7a7a\u95f4\u91ca\u653e zfree ( ht -> table ); // hashtable \u5b57\u6bb5\u521d\u59cb\u5316 _dictReset ( ht ); return DICT_OK ; }","title":"dict clean\uff1adictRelease"},{"location":"Redis/HashTable/#key-dictfind","text":"dictEntry * dictFind ( dict * d , const void * key ) { dictEntry * he ; uint64_t h , idx , table ; // empty check if ( dictSize ( d ) == 0 ) return NULL ; // help rehash if ( dictIsRehashing ( d )) _dictRehashStep ( d ); // calculate hash h = dictHashKey ( d , key ); // find dictEntry for ( table = 0 ; table <= 1 ; table ++ ) { idx = h & d -> ht [ table ]. sizemask ; he = d -> ht [ table ]. table [ idx ]; while ( he ) { if ( key == he -> key || dictCompareKeys ( d , key , he -> key )) return he ; he = he -> next ; } if ( ! dictIsRehashing ( d )) return NULL ; } return NULL ; }","title":"key \u67e5\u8be2\uff1adictFind"},{"location":"Redis/HashTable/#key-valuedictfetchvalue","text":"void * dictFetchValue ( dict * d , const void * key ) { dictEntry * he ; // find key entry he = dictFind ( d , key ); // return entry's value return he ? dictGetVal ( he ) : NULL ; }","title":"key \u67e5\u8be2 value\uff1adictFetchValue"},{"location":"Redis/HashTable/#dictresize","text":"int dictResize ( dict * d ) { unsigned long minimal ; // \u5224\u65ad\u662f\u5426\u5141\u8bb8\u6269\u5bb9\u3001\u662f\u5426\u5728rehash\u4e2d if ( ! dict_can_resize || dictIsRehashing ( d )) return DICT_ERR ; // \u83b7\u53d6\u6700\u5c0f\u4f7f\u7528\u7a7a\u95f4 minimal = d -> ht [ 0 ]. used ; if ( minimal < DICT_HT_INITIAL_SIZE ) minimal = DICT_HT_INITIAL_SIZE ; // dictExpand \u6269\u5bb9 return dictExpand ( d , minimal ); }","title":"\u6700\u5c0f\u5316\u6269\u5bb9\uff1adictResize"},{"location":"Redis/HashTable/#dict-dictexpand","text":"int dictExpand ( dict * d , unsigned long size ) { // \u68c0\u67e5\u662f\u5426\u5728rehash\u4e2d\uff0c\u6216\u8005\u5df2\u5b58\u5728\u8282\u70b9\u5927\u4e8ehashtable\u5927\u5c0f if ( dictIsRehashing ( d ) || d -> ht [ 0 ]. used > size ) return DICT_ERR ; // \u521d\u59cb\u5316\u65b0\u7684hashtable dictht n ; // \u8ba1\u7b97\u65b0hashtable\u5927\u5c0f unsigned long realsize = _dictNextPower ( size ); // \u5927\u5c0f\u68c0\u67e5 if ( realsize == d -> ht [ 0 ]. size ) return DICT_ERR ; // \u5206\u914d\u7a7a\u95f4\u53ca\u521d\u59cb\u5316 n . size = realsize ; n . sizemask = realsize -1 ; n . table = zcalloc ( realsize * sizeof ( dictEntry * )); n . used = 0 ; // \u68c0\u67e5hashtable\u9996\u6b21\u5206\u914d\u7a7a\u95f4 if ( d -> ht [ 0 ]. table == NULL ) { d -> ht [ 0 ] = n ; return DICT_OK ; } // \u6269\u5bb9\u5b8c\u6210\uff0c\u51c6\u5907reHash d -> ht [ 1 ] = n ; d -> rehashidx = 0 ; return DICT_OK ; }","title":"dict \u6269\u5bb9 - dictExpand"},{"location":"Redis/HashTable/#dictgetiterator","text":"dictIterator * dictGetIterator ( dict * d ) { // \u8fed\u4ee3\u5668\u521d\u59cb\u5316 dictIterator * iter = zmalloc ( sizeof ( * iter )); iter -> d = d ; iter -> table = 0 ; iter -> index = -1 ; iter -> safe = 0 ; iter -> entry = NULL ; iter -> nextEntry = NULL ; return iter ; }","title":"\u83b7\u53d6\u8fed\u4ee3\u5668\uff1adictGetIterator"},{"location":"Redis/HashTable/#safe-dictgetsafeiterator","text":"dictIterator * dictGetSafeIterator ( dict * d ) { // \u8fed\u4ee3\u5668\u521d\u59cb\u5316 dictIterator * i = dictGetIterator ( d ); // \u8bbe\u7f6e\u5b89\u5168\u6807\u5fd7 i -> safe = 1 ; return i ; }","title":"\u83b7\u53d6 safe \u8fed\u4ee3\u5668\uff1adictGetSafeIterator"},{"location":"Redis/HashTable/#dictnext","text":"\u5b8c\u6210\u4e24\u4e2a hashtable \u7684\u904d\u5386 \u5b8c\u6210\u51b2\u7a81\u8282\u70b9\u7684\u94fe\u8868\u904d\u5386 dictEntry * dictNext ( dictIterator * iter ) { while ( 1 ) { if ( iter -> entry == NULL ) { dictht * ht = & iter -> d -> ht [ iter -> table ]; // \u7b2c\u4e00\u6b21\u904d\u5386 if ( iter -> index == -1 && iter -> table == 0 ) { if ( iter -> safe ) // \u8fed\u4ee3\u5668\u6570\u91cf+1 iter -> d -> iterators ++ ; else // \u8bb0\u5f55dict\u6307\u7eb9 iter -> fingerprint = dictFingerprint ( iter -> d ); } iter -> index ++ ; // \u68c0\u67e5\u904d\u5386\u7d22\u5f15\u5927\u4e8e buckets \u6570\u91cf if ( iter -> index >= ( long ) ht -> size ) { // rehash \u4e2d\u68c0\u67e5\uff0c\u7ee7\u7eed\u904d\u5386ht[1] if ( dictIsRehashing ( iter -> d ) && iter -> table == 0 ) { iter -> table ++ ; iter -> index = 0 ; ht = & iter -> d -> ht [ 1 ]; } else { break ; } } iter -> entry = ht -> table [ iter -> index ]; } else { iter -> entry = iter -> nextEntry ; } if ( iter -> entry ) { // \u8bbe\u7f6e nextEntry iter -> nextEntry = iter -> entry -> next ; return iter -> entry ; } } return NULL ; }","title":"\u8fed\u4ee3\u5668\u904d\u5386\uff1adictNext"},{"location":"Redis/HashTable/#dictreleaseiterator","text":"void dictReleaseIterator ( dictIterator * iter ) { // \u68c0\u67e5\u8fed\u4ee3\u5668\u662f\u5426\u4f7f\u7528 if ( ! ( iter -> index == -1 && iter -> table == 0 )) { if ( iter -> safe ) // \u8fed\u4ee3\u5668\u6570\u91cf-1 iter -> d -> iterators -- ; else // \u68c0\u67e5\u6307\u7eb9\u5bf9\u6bd4 assert ( iter -> fingerprint == dictFingerprint ( iter -> d )); } zfree ( iter ); }","title":"\u8fed\u4ee3\u5668\u5220\u9664\uff1adictReleaseIterator"},{"location":"Redis/HashTable/#keydictgetrandomkey","text":"dictEntry * dictGetRandomKey ( dict * d ) { dictEntry * he , * orighe ; unsigned long h ; int listlen , listele ; // empty check if ( dictSize ( d ) == 0 ) return NULL ; // help rehash if ( dictIsRehashing ( d )) _dictRehashStep ( d ); if ( dictIsRehashing ( d )) { // \u5728 rehash \u8fc7\u7a0b\u4e2d\u65f6 do { // \u968f\u673a\u4e00\u4e2a\u5927\u4e8e rehashidx\uff0c\u5c0f\u4e8e ht[1] \u5927\u5c0f\u7684\u503c\uff0c\u627e\u5230\u975e\u7a7a bucket h = d -> rehashidx + ( random () % ( d -> ht [ 0 ]. size + d -> ht [ 1 ]. size - d -> rehashidx )); he = ( h >= d -> ht [ 0 ]. size ) ? d -> ht [ 1 ]. table [ h - d -> ht [ 0 ]. size ] : d -> ht [ 0 ]. table [ h ]; } while ( he == NULL ); } else { // \u4e0d\u5728 rehash \u8fc7\u7a0b\u4e2d\u65f6\uff0c\u5728 ht[0] buckets \u8303\u56f4\u5185\u968f\u673a\u627e\u5230\u4e00\u4e2a\u975e\u7a7a\u8282\u70b9 do { h = random () & d -> ht [ 0 ]. sizemask ; he = d -> ht [ 0 ]. table [ h ]; } while ( he == NULL ); } listlen = 0 ; orighe = he ; // \u7edf\u8ba1\u94fe\u8868\u957f\u5ea6 while ( he ) { he = he -> next ; listlen ++ ; } // \u968f\u673a\u4e00\u4e2a\u5c0f\u4e8e\u94fe\u8868\u957f\u5ea6\u7684\u503c listele = random () % listlen ; he = orighe ; // \u5b9a\u4f4d\u8fd9\u4e2a\u503c while ( listele -- ) he = he -> next ; return he ; }","title":"\u83b7\u53d6\u968f\u673a key\uff1adictGetRandomKey"},{"location":"Redis/HashTable/#keydictgetsomekeys","text":"\u4e0d\u4fdd\u8bc1\u8fd4\u56de\u6307\u5b9a\u6570\u91cf\u7684\u968f\u673a\u8282\u70b9\uff0c\u4e5f\u4e0d\u4fdd\u8bc1\u4e0d\u8fd4\u56de\u91cd\u590d\u8282\u70b9 unsigned int dictGetSomeKeys ( dict * d , dictEntry ** des , unsigned int count ) { unsigned long j ; unsigned long tables ; unsigned long stored = 0 , maxsizemask ; unsigned long maxsteps ; // \u68c0\u67e5 count \u662f\u5426\u5927\u4e8e \u4e24\u4e2a hashtable \u957f\u5ea6\u4e4b\u548c if ( dictSize ( d ) < count ) count = dictSize ( d ); // \u521d\u59cb\u5316\u6700\u5927\u67e5\u627e\u6b21\u6570 maxsteps = count * 10 ; // \u534f\u52a9 rehash for ( j = 0 ; j < count ; j ++ ) { if ( dictIsRehashing ( d )) _dictRehashStep ( d ); else break ; } // \u786e\u5b9a hashtable \u67e5\u8be2\u6570\u91cf\u8303\u56f4 tables = dictIsRehashing ( d ) ? 2 : 1 ; // \u83b7\u53d6\u6700\u5927\u63a9\u7801 maxsizemask = d -> ht [ 0 ]. sizemask ; if ( tables > 1 && maxsizemask < d -> ht [ 1 ]. sizemask ) maxsizemask = d -> ht [ 1 ]. sizemask ; // \u8ba1\u7b97 bucket \u521d\u59cb\u4f4d\u7f6e unsigned long i = random () & maxsizemask ; // \u8fde\u7eed\u7a7a bucket \u7edf\u8ba1 unsigned long emptylen = 0 ; while ( stored < count && maxsteps -- ) { for ( j = 0 ; j < tables ; j ++ ) { // \u5982\u679c\u5728 rehash \u4e2d\uff0c\u5728 ht[0] \u4e2d 0 - rehashidx - 1 \u7684\u503c\u5df2\u7ecf\u5b8c\u6210\u8fc1\u79fb if ( tables == 2 && j == 0 && i < ( unsigned long ) d -> rehashidx ) { // \u68c0\u67e5\u521d\u59cb\u4f4d\u7f6e\u6709\u6548\u6027\uff0c\u5982\u679c\u8d8a\u754c\uff0c\u8d4b\u503c\u4e3a rehashidx if ( i >= d -> ht [ 1 ]. size ) i = d -> rehashidx ; else // \u5728ht[1] \u4e2d\u7ee7\u7eed continue ; } // index overflow \u68c0\u67e5 if ( i >= d -> ht [ j ]. size ) continue ; dictEntry * he = d -> ht [ j ]. table [ i ]; // \u68c0\u67e5 empty bucket if ( he == NULL ) { emptylen ++ ; // \u5982\u679c\u8fde\u7eed5\u4e2a\u7a7a bucket\uff0c\u5e76\u4e14\u5927\u4e8e\u76ee\u6807 entry \u6570\u91cf\uff0c\u91cd\u65b0\u8ba1\u7b97\u521d\u59cb bucket \u4f4d\u7f6e if ( emptylen >= 5 && emptylen > count ) { i = random () & maxsizemask ; emptylen = 0 ; } } else { emptylen = 0 ; // \u5c06\u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\u653e\u5165\u7ed3\u679c\u96c6 while ( he ) { * des = he ; des ++ ; he = he -> next ; stored ++ ; if ( stored == count ) return stored ; } } } // \u8fde\u7eed\u9012\u589e\uff0c\u5e76\u4e14\u9632\u6b62\u8d8a\u754c i = ( i + 1 ) & maxsizemask ; } return stored ; }","title":"\u6279\u91cf\u83b7\u53d6\u968f\u673a key\uff1adictGetSomeKeys"},{"location":"Redis/HashTable/#keydictgetfairrandomkey","text":"dictEntry * dictGetFairRandomKey ( dict * d ) { // \u5b9a\u4e49\u7ed3\u679c\u96c6\uff0c\u9ed8\u8ba4\u957f\u5ea615 dictEntry * entries [ GETFAIR_NUM_ENTRIES ]; // \u83b7\u53d6\u968f\u673a\u8282\u70b9 unsigned int count = dictGetSomeKeys ( d , entries , GETFAIR_NUM_ENTRIES ); // \u7ed3\u679c\u96c6\u4e3a\u7a7a\uff0c\u5219\u8c03\u7528 dictGetRandomKey \u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u8282\u70b9 if ( count == 0 ) return dictGetRandomKey ( d ); // \u6839\u636e\u7ed3\u679c\u96c6\u957f\u5ea6\uff0c\u968f\u673a\u8fd4\u56de\u4e00\u4e2a\u8282\u70b9 unsigned int idx = rand () % count ; return entries [ idx ]; }","title":"\u516c\u5e73\u83b7\u53d6\u968f\u673a key\uff1adictGetFairRandomKey"},{"location":"Redis/HashTable/#debug-htstats-dictgetstats","text":"void dictGetStats ( char * buf , size_t bufsize , dict * d ) { size_t l ; char * orig_buf = buf ; size_t orig_bufsize = bufsize ; // \u83b7\u53d6 ht[0] \u72b6\u6001\u4fe1\u606f l = _dictGetStatsHt ( buf , bufsize , & d -> ht [ 0 ], 0 ); buf += l ; bufsize -= l ; // \u83b7\u53d6 ht[1] \u72b6\u6001\u4fe1\u606f if ( dictIsRehashing ( d ) && bufsize > 0 ) { _dictGetStatsHt ( buf , bufsize , & d -> ht [ 1 ], 1 ); } // set '\\0' \u4e3a buf \u5c3e\u5143\u7d20 if ( orig_bufsize ) orig_buf [ orig_bufsize -1 ] = '\\0' ; } // \u83b7\u53d6 hashtable \u72b6\u6001 size_t _dictGetStatsHt ( char * buf , size_t bufsize , dictht * ht , int tableid ) { unsigned long i , slots = 0 , chainlen , maxchainlen = 0 ; unsigned long totchainlen = 0 ; // \u94fe\u8868\u957f\u5ea6\u7edf\u8ba1 unsigned long clvector [ DICT_STATS_VECTLEN ]; size_t l = 0 ; // empty check if ( ht -> used == 0 ) { return snprintf ( buf , bufsize , \"No stats available for empty dictionaries \\n \" ); } // \u7ed3\u679c\u96c6\u521d\u59cb\u5316 for ( i = 0 ; i < DICT_STATS_VECTLEN ; i ++ ) clvector [ i ] = 0 ; for ( i = 0 ; i < ht -> size ; i ++ ) { dictEntry * he ; // \u7a7a bucket \u68c0\u67e5 if ( ht -> table [ i ] == NULL ) { clvector [ 0 ] ++ ; continue ; } // \u975e\u7a7a slot \u7edf\u8ba1 slots ++ ; // \u8ba1\u7b97\u94fe\u8868\u957f\u5ea6 chainlen = 0 ; he = ht -> table [ i ]; while ( he ) { chainlen ++ ; he = he -> next ; } // \u6839\u636e\u94fe\u8868\u957f\u5ea6\u7edf\u8ba1 key \u6570\u91cf clvector [( chainlen < DICT_STATS_VECTLEN ) ? chainlen : ( DICT_STATS_VECTLEN -1 )] ++ ; // \u8ba1\u7b97\u6700\u957f\u94fe\u8868 if ( chainlen > maxchainlen ) maxchainlen = chainlen ; // \u7edf\u8ba1\u94fe\u8868\u957f\u5ea6\u548c totchainlen += chainlen ; } // \u53ef\u8bfb\u4fe1\u606f\u751f\u6210\uff1ahashtable \u4fe1\u606f\u3001size\u3001\u4f7f\u7528\u6570\u91cf\u3001slots\u3001\u6700\u957f\u94fe\u8868\uff0c\u94fe\u8868\u8282\u70b9\u5360\u6bd4\u3001\u4f7f\u7528\u7387 l += snprintf ( buf + l , bufsize - l , \"Hash table %d stats (%s): \\n \" \" table size: %ld \\n \" \" number of elements: %ld \\n \" \" different slots: %ld \\n \" \" max chain length: %ld \\n \" \" avg chain length (counted): %.02f \\n \" \" avg chain length (computed): %.02f \\n \" \" Chain length distribution: \\n \" , tableid , ( tableid == 0 ) ? \"main hash table\" : \"rehashing target\" , ht -> size , ht -> used , slots , maxchainlen , ( float ) totchainlen / slots , ( float ) ht -> used / slots ); for ( i = 0 ; i < DICT_STATS_VECTLEN -1 ; i ++ ) { if ( clvector [ i ] == 0 ) continue ; if ( l >= bufsize ) break ; l += snprintf ( buf + l , bufsize - l , \" %s%ld: %ld (%.02f%%) \\n \" , ( i == DICT_STATS_VECTLEN -1 ) ? \">= \" : \"\" , i , clvector [ i ], (( float ) clvector [ i ] / ht -> size ) * 100 ); } /* Unlike snprintf(), teturn the number of characters actually written. */ if ( bufsize ) buf [ bufsize -1 ] = '\\0' ; return strlen ( buf ); }","title":"Debug \u63a5\u53e3\u83b7\u53d6 htstats\uff1a dictGetStats"},{"location":"Redis/HashTable/#siphash-hash-dictgenhashfunction","text":"uint64_t dictGenHashFunction ( const void * key , int len ) { return siphash ( key , len , dict_hash_function_seed ); }","title":"siphash hash \u751f\u6210\u51fd\u6570 dictGenHashFunction"},{"location":"Redis/HashTable/#siphash-hash-dictgenhashfunction_1","text":"uint64_t dictGenCaseHashFunction ( const unsigned char * buf , int len ) { return siphash_nocase ( buf , len , dict_hash_function_seed ); }","title":"siphash \u5927\u5c0f\u5199\u654f\u611f hash \u751f\u6210\u51fd\u6570 dictGenHashFunction"},{"location":"Redis/HashTable/#dict-dictempty","text":"void dictEmpty ( dict * d , void ( callback )( void * )) { // hashtable \u8282\u70b9\u53ca\u7a7a\u95f4\u91ca\u653e _dictClear ( d , & d -> ht [ 0 ], callback ); _dictClear ( d , & d -> ht [ 1 ], callback ); // \u91cd\u7f6e rehashidx \u53ca\u8fed\u4ee3\u5668\u8ba1\u6570 d -> rehashidx = -1 ; d -> iterators = 0 ; }","title":"\u6e05\u7a7a dict\uff1a dictEmpty"},{"location":"Redis/HashTable/#rehashdictenableresize","text":"void dictEnableResize ( void ) { dict_can_resize = 1 ; }","title":"\u542f\u7528 rehash\uff1adictEnableResize"},{"location":"Redis/HashTable/#rehashdictenableresize_1","text":"void dictDisableResize ( void ) { dict_can_resize = 0 ; }","title":"\u7981\u6b62 rehash\uff1adictEnableResize"},{"location":"Redis/HashTable/#rehashdictrehash","text":"iterators \u8fed\u4ee3\u5668\u6570\u91cf\u5fc5\u987b\u4e3a 0 int dictRehash ( dict * d , int n ) { // \u6700\u5927\u7a7a bucket \u68c0\u6d4b\u6b21\u6570 int empty_visits = n * 10 ; // rehash \u4e2d\u68c0\u67e5 if ( ! dictIsRehashing ( d )) return 0 ; // step \u63a7\u5236 while ( n -- && d -> ht [ 0 ]. used != 0 ) { dictEntry * de , * nextde ; // rehashidx overflow check assert ( d -> ht [ 0 ]. size > ( unsigned long ) d -> rehashidx ); // \u67e5\u627e\u975e\u7a7a bucket while ( d -> ht [ 0 ]. table [ d -> rehashidx ] == NULL ) { d -> rehashidx ++ ; if ( -- empty_visits == 0 ) return 1 ; } // \u62ff\u5230 entry de = d -> ht [ 0 ]. table [ d -> rehashidx ]; // \u5904\u7406\u94fe\u8868\u4e2d\u7684\u6240\u6709entry while ( de ) { uint64_t h ; nextde = de -> next ; // \u8ba1\u7b97\u65b0\u7684 bucket \u4f4d\u7f6e h = dictHashKey ( d , de -> key ) & d -> ht [ 1 ]. sizemask ; // \u5934\u8282\u70b9\u63d2\u5165 de -> next = d -> ht [ 1 ]. table [ h ]; d -> ht [ 1 ]. table [ h ] = de ; d -> ht [ 0 ]. used -- ; d -> ht [ 1 ]. used ++ ; de = nextde ; } // \u65e7\u7684 bucket \u7f6e\u7a7a d -> ht [ 0 ]. table [ d -> rehashidx ] = NULL ; // rehash \u4f4d\u7f6e+1 d -> rehashidx ++ ; } // rehash \u5b8c\u6210\u68c0\u67e5 if ( d -> ht [ 0 ]. used == 0 ) { // \u91ca\u653e\u65e7\u7684 hashtable zfree ( d -> ht [ 0 ]. table ); // \u4f7f\u7528\u6269\u5bb9\u540e\u7684 hashtable \u66ff\u6362\u65e7\u7684 hashtable d -> ht [ 0 ] = d -> ht [ 1 ]; // ht[1] \u91cd\u7f6e _dictReset ( & d -> ht [ 1 ]); // rehash \u6807\u5fd7\u91cd\u7f6e d -> rehashidx = -1 ; return 0 ; } return 1 ; }","title":"\u9650\u5236\u6b65\u6570 rehash\uff1adictRehash"},{"location":"Redis/HashTable/#rehashdictrehashmilliseconds","text":"int dictRehashMilliseconds ( dict * d , int ms ) { // \u8fed\u4ee3\u4e2d\uff0c if ( d -> iterators > 0 ) return 0 ; // \u83b7\u53d6 rehash \u5f00\u59cb\u65f6\u95f4 long long start = timeInMilliseconds (); int rehashes = 0 ; // \u6267\u884c100\u6b21 rehash while ( dictRehash ( d , 100 )) { rehashes += 100 ; // \u8d85\u65f6\u68c0\u67e5 if ( timeInMilliseconds () - start > ms ) break ; } // \u8fd4\u56de rehash \u6b21\u6570 return rehashes ; } long long timeInMilliseconds ( void ) { struct timeval tv ; gettimeofday ( & tv , NULL ); return ((( long long ) tv . tv_sec ) * 1000 ) + ( tv . tv_usec / 1000 ); }","title":"\u9650\u65f6 rehash\uff1adictRehashMilliseconds"},{"location":"Redis/HashTable/#hash-dictsethashfunctionseed","text":"static uint8_t dict_hash_function_seed [ 16 ]; void dictSetHashFunctionSeed ( uint8_t * seed ) { memcpy ( dict_hash_function_seed , seed , sizeof ( dict_hash_function_seed )); }","title":"\u8bbe\u7f6e hash \u51fd\u6570\u79cd\u5b50\uff1adictSetHashFunctionSeed"},{"location":"Redis/HashTable/#hash-dictgethashfunctionseed","text":"uint8_t * dictGetHashFunctionSeed ( void ) { return dict_hash_function_seed ; }","title":"\u83b7\u53d6 hash \u51fd\u6570\u79cd\u5b50\uff1adictGetHashFunctionSeed"},{"location":"Redis/HashTable/#dict-dictscan","text":"dictScan() \u7528\u4e8e\u904d\u5386\u5b57\u5178\u7684\u6240\u6709\u5143\u7d20 \u5f00\u59cb\u904d\u5386\u90a3\u4e00\u523b\u7684\u6240\u6709\u5143\u7d20\uff0c\u53ea\u8981\u4e0d\u88ab\u5220\u9664\uff0c\u80af\u5b9a\u80fd\u88ab\u904d\u5386\u5230\uff0c\u4e0d\u7ba1\u5b57\u5178\u6269\u5c55\u8fd8\u662f\u7f29\u5c0f \u53ef\u80fd\u4f1a\u8fd4\u56de\u91cd\u590d\u5143\u7d20\uff0c\u4f46\u662f\u5df2\u7ecf\u628a\u8fd4\u56de\u91cd\u590d\u5143\u7d20\u7684\u53ef\u80fd\u6027\u964d\u5230\u4e86\u6700\u4f4e /* \u5bf9 v \u8fdb\u884c\u4e8c\u8fdb\u5236\u9006\u5e8f\u64cd\u4f5c http://graphics.stanford.edu/~seander/bithacks.html#ReverseParallel */ static unsigned long rev ( unsigned long v ) { unsigned long s = CHAR_BIT * sizeof ( v ); // bit size; must be power of 2 unsigned long mask = ~ 0UL ; while (( s >>= 1 ) > 0 ) { mask ^= ( mask << s ); v = (( v >> s ) & mask ) | (( v << s ) & ~ mask ); } return v ; } /* \u5b57\u5178\u904d\u5386 v\uff1a \u8981\u904d\u5386\u7684 bucket \u7d22\u5f15 */ unsigned long dictScan ( dict * d , unsigned long v , dictScanFunction * fn , dictScanBucketFunction * bucketfn , void * privdata ) { dictht * t0 , * t1 ; const dictEntry * de , * next ; unsigned long m0 , m1 ; // empty check if ( dictSize ( d ) == 0 ) return 0 ; // \u8fed\u4ee3\u5668\u6570\u91cf+1\uff0c\u9632\u6b62 rehash d -> iterators ++ ; // \u5982\u679c\u4e0d\u5728 rehash \u4e2d if ( ! dictIsRehashing ( d )) { t0 = & ( d -> ht [ 0 ]); m0 = t0 -> sizemask ; // bucket callback if ( bucketfn ) bucketfn ( privdata , & t0 -> table [ v & m0 ]); de = t0 -> table [ v & m0 ]; // bucket \u94fe\u8868\u904d\u5386 while ( de ) { next = de -> next ; fn ( privdata , de ); // \u94fe\u8868\u8282\u70b9 callback de = next ; } v |= ~ m0 ; // \u4fdd\u7559 v \u7684\u4f4e n \u4f4d\u6570\uff0c\u5176\u4f59\u4f4d\u5168\u7f6e\u4e3a 1 // [\u4e8c\u8fdb\u5236\u53cd\u8f6c](http://graphics.stanford.edu/~seander/bithacks.html#ReverseParallel) v = rev ( v ); // \u5c06 v \u7684\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u7ffb\u8f6c\uff0c\u6240\u4ee5\uff0cv\u7684\u4f4e n \u4f4d\u6570\u6210\u4e86\u9ad8 n \u4f4d\u6570\uff0c\u5e76\u4e14\u8fdb\u884c\u4e86\u7ffb\u8f6c v ++ ; // \u81ea\u589e v = rev ( v ); // \u518d\u6b21\u4e8c\u8fdb\u5236\u7ffb\u8f6c } else { // \u5728 rehash \u8fc7\u7a0b\u4e2d t0 = & d -> ht [ 0 ]; t1 = & d -> ht [ 1 ]; // \u786e\u4fdd t0 \u957f\u5ea6\u5c0f\u4e8e t1 if ( t0 -> size > t1 -> size ) { t0 = & d -> ht [ 1 ]; t1 = & d -> ht [ 0 ]; } m0 = t0 -> sizemask ; m1 = t1 -> sizemask ; // bucket callback if ( bucketfn ) bucketfn ( privdata , & t0 -> table [ v & m0 ]); de = t0 -> table [ v & m0 ]; // bucket \u94fe\u8868\u904d\u5386 while ( de ) { next = de -> next ; fn ( privdata , de ); // \u94fe\u8868\u8282\u70b9 callback de = next ; } // \u5927\u7684 hashtable t1 \u904d\u5386 do { if ( bucketfn ) bucketfn ( privdata , & t1 -> table [ v & m1 ]); // bucket callback de = t1 -> table [ v & m1 ]; // bucket \u94fe\u8868\u904d\u5386 while ( de ) { next = de -> next ; fn ( privdata , de ); // \u94fe\u8868\u8282\u70b9 callback de = next ; } v |= ~ m1 ; // \u4fdd\u7559 v \u7684\u4f4e n \u4f4d\u6570\uff0c\u5176\u4f59\u4f4d\u5168\u7f6e\u4e3a 1 v = rev ( v ); // \u5c06 v \u7684\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u7ffb\u8f6c\uff0c\u6240\u4ee5\uff0cv\u7684\u4f4e n \u4f4d\u6570\u6210\u4e86\u9ad8 n \u4f4d\u6570\uff0c\u5e76\u4e14\u8fdb\u884c\u4e86\u7ffb\u8f6c v ++ ; // \u81ea\u589e v = rev ( v ); // \u518d\u6b21\u4e8c\u8fdb\u5236\u7ffb\u8f6c // \u76f4\u5230 v \u7684\u4f4e m1-m0 \u4f4d\u5230\u4f4e m1 \u4f4d\u4e4b\u95f4\u5168\u90e8\u4e3a 0 \u4e3a\u6b62 } while ( v & ( m0 ^ m1 )); } // \u8fed\u4ee3\u5668\u6570\u91cf-1 d -> iterators -- ; return v ; }","title":"dict \u626b\u63cf\uff1adictScan"},{"location":"Redis/HashTable/#hash-dictgethash","text":"\u4f7f\u7528\u7684 hash \u51fd\u6570\u4e3a\u521d\u59cb\u5316 dict \u65f6\u8bbe\u7f6e\u7684 hash \u51fd\u6570 uint64_t dictGetHash ( dict * d , const void * key ) { return dictHashKey ( d , key ); }","title":"\u8ba1\u7b97 hash\uff1a dictGetHash"},{"location":"Redis/HashTable/#hash-entry-dictfindentryrefbyptrandhash","text":"dictEntry ** dictFindEntryRefByPtrAndHash ( dict * d , const void * oldptr , uint64_t hash ) { dictEntry * he , ** heref ; unsigned long idx , table ; // empty check if ( dictSize ( d ) == 0 ) return NULL ; for ( table = 0 ; table <= 1 ; table ++ ) { // \u8ba1\u7b97 slot idx = hash & d -> ht [ table ]. sizemask ; heref = & d -> ht [ table ]. table [ idx ]; he = * heref ; // \u94fe\u8868\u8282\u70b9\u67e5\u8be2 while ( he ) { // \u901a\u8fc7\u6307\u9488\u5bf9\u6bd4\u4ee3\u66ff key \u5bf9\u6bd4 if ( oldptr == he -> key ) return heref ; heref = & he -> next ; he = * heref ; } // \u975e rehash \u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u9700\u8981\u67e5\u8be2 ht[1] if ( ! dictIsRehashing ( d )) return NULL ; } return NULL ; }","title":"\u6839\u636e\u6307\u9488\u548c hash \u67e5\u8be2 entry\uff1a dictFindEntryRefByPtrAndHash"},{"location":"Redis/redis/","tags":["Redis"],"text":"Redis \u5b98\u65b9 Repo \u8bf4\u660e \u672c\u535a\u5ba2\u5185\u5bb9\u57fa\u4e8e Redis6.0","title":"\u7b80\u4ecb"},{"location":"Redis/redis/#redis","text":"\u5b98\u65b9 Repo","title":"Redis"},{"location":"Redis/redis/#_1","text":"\u672c\u535a\u5ba2\u5185\u5bb9\u57fa\u4e8e Redis6.0","title":"\u8bf4\u660e"},{"location":"linux/centos_kernal_upgrade/","tags":["Linux","Centos","Kernel"],"text":"Centos \u5185\u6838\u5347\u7ea7 \u7cfb\u7edf\u66f4\u65b0 [ root@localhost ~ ] $ yum -y update [ root@localhost ~ ] $ yum -y install yum-plugin-fastestmirror \u68c0\u67e5\u5f53\u524d\u7cfb\u7edf\u53ca\u5185\u6838\u7248\u672c [ root@localhost ~ ] $ cat /etc/redhat-release CentOS release 7 .3 ( Final ) [ root@localhost ~ ] $ uname -r 3 .10.0_3-0-0-30 \u65b0\u589e repo\uff1aelrepo [ root@localhost ~ ] $ rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org [ root@localhost ~ ] $ rpm -Uvh https://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm yum repolist \u5b89\u88c5\u65b0\u7248\u672c\u5185\u6838 [ root@localhost ~ ] $ yum --enablerepo = elrepo-kernel install kernel-ml [ root@localhost ~ ] $ yum repolist all \u914d\u7f6e\u542f\u52a8\u9879 \u67e5\u8be2\u53ef\u7528\u5185\u6838\u542f\u52a8\u9879 [ root@localhost ~ ] $ sudo awk -F \\' '$1==\"menuentry \" {print i++ \" : \" $2}' /etc/grub2.cfg \u8bbe\u7f6e\u542f\u52a8\u9879\u5e76\u751f\u6210\u542f\u52a8\u9879\u914d\u7f6e sudo grub2-set-default 0 sudo grub2-mkconfig -o /boot/grub2/grub.cfg \u91cd\u542f\u7cfb\u7edf [ root@localhost ~ ] $ sudo reboot \u540e\u7eed \u68c0\u67e5\u5185\u6838\u7248\u672c [ root@localhost ~ ] $ uname -r \u79fb\u9664\u65e7\u7248\u672c\u5185\u6838 [ root@localhost ~ ] $ yum install yum-utils [ root@localhost ~ ] $ package-cleanup --oldkernels","title":"Centos\u5185\u6838\u5347\u7ea7"},{"location":"linux/centos_kernal_upgrade/#centos","text":"","title":"Centos \u5185\u6838\u5347\u7ea7"},{"location":"linux/centos_kernal_upgrade/#_1","text":"[ root@localhost ~ ] $ yum -y update [ root@localhost ~ ] $ yum -y install yum-plugin-fastestmirror","title":"\u7cfb\u7edf\u66f4\u65b0"},{"location":"linux/centos_kernal_upgrade/#_2","text":"[ root@localhost ~ ] $ cat /etc/redhat-release CentOS release 7 .3 ( Final ) [ root@localhost ~ ] $ uname -r 3 .10.0_3-0-0-30","title":"\u68c0\u67e5\u5f53\u524d\u7cfb\u7edf\u53ca\u5185\u6838\u7248\u672c"},{"location":"linux/centos_kernal_upgrade/#repoelrepo","text":"[ root@localhost ~ ] $ rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org [ root@localhost ~ ] $ rpm -Uvh https://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm yum repolist","title":"\u65b0\u589e repo\uff1aelrepo"},{"location":"linux/centos_kernal_upgrade/#_3","text":"[ root@localhost ~ ] $ yum --enablerepo = elrepo-kernel install kernel-ml [ root@localhost ~ ] $ yum repolist all","title":"\u5b89\u88c5\u65b0\u7248\u672c\u5185\u6838"},{"location":"linux/centos_kernal_upgrade/#_4","text":"","title":"\u914d\u7f6e\u542f\u52a8\u9879"},{"location":"linux/centos_kernal_upgrade/#_5","text":"[ root@localhost ~ ] $ sudo awk -F \\' '$1==\"menuentry \" {print i++ \" : \" $2}' /etc/grub2.cfg","title":"\u67e5\u8be2\u53ef\u7528\u5185\u6838\u542f\u52a8\u9879"},{"location":"linux/centos_kernal_upgrade/#_6","text":"sudo grub2-set-default 0 sudo grub2-mkconfig -o /boot/grub2/grub.cfg","title":"\u8bbe\u7f6e\u542f\u52a8\u9879\u5e76\u751f\u6210\u542f\u52a8\u9879\u914d\u7f6e"},{"location":"linux/centos_kernal_upgrade/#_7","text":"[ root@localhost ~ ] $ sudo reboot","title":"\u91cd\u542f\u7cfb\u7edf"},{"location":"linux/centos_kernal_upgrade/#_8","text":"","title":"\u540e\u7eed"},{"location":"linux/centos_kernal_upgrade/#_9","text":"[ root@localhost ~ ] $ uname -r","title":"\u68c0\u67e5\u5185\u6838\u7248\u672c"},{"location":"linux/centos_kernal_upgrade/#_10","text":"[ root@localhost ~ ] $ yum install yum-utils [ root@localhost ~ ] $ package-cleanup --oldkernels","title":"\u79fb\u9664\u65e7\u7248\u672c\u5185\u6838"},{"location":"linux/commands/","tags":["Linux"],"text":"max file descriptors /etc/security/limits.conf \u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e * soft nofile 655360 * hard nofile 655360 * soft nproc 655360 * hard nproc 655360 /etc/sysctl.conf (root) \u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e vm.max_map_count = 655360 \u6267\u884c sysctl -p \u78c1\u76d8\u6302\u8f7d \u67e5\u770b\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5\uff1adf -h \u67e5\u770b\u78c1\u76d8\u6302\u8f7d\uff1afdisk -l \u683c\u5f0f\u5316\u78c1\u76d8\uff1amkfs.xfs -f /dev/vdb \u521b\u5efa\u6302\u8f7d\u8def\u5f84\uff1amkdir /data \u6302\u8f7d\uff1amount -t xfs /dev/vdb /data \u56fa\u5b9a\u914d\u7f6e\uff1a vim /etc/fstab /dev/vdb /data xfs defaults 0 0 \u5e38\u7528\u547d\u4ee4 \u67e5\u770b\u7269\u7406 CPU cat /proc/cpuinfo | grep \"physical\" | sort | uniq -c \u67e5\u770b\u670d\u52a1\u5668\u578b\u53f7 dmidecode | grep \u201cProduct Name\u201d \u67e5\u770b\u7cfb\u7edf\u7248\u672c cat /etc/redhat-release \u67e5\u770b\u5206\u533a\u548c\u78c1\u76d8 lsblk \u67e5\u770b\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u60c5\u51b5 df -h \u5206\u533a\u5de5\u5177\u67e5\u770b\u5206\u533a\u4fe1\u606f fdisk -l \u67e5\u770b\u5206\u533a cfdisk /dev/sda \u67e5\u770b\u786c\u76d8 label\uff08\u522b\u540d\uff09 blkid \u7edf\u8ba1\u5f53\u524d\u76ee\u5f55\u5404\u6587\u4ef6\u5939\u5927\u5c0f du -sh ./* \u67e5\u770b\u5185\u5b58\u5927\u5c0f free -h \u67e5\u770b\u5f53\u524d\u7f51\u7edc\u8fde\u63a5\u60c5\u51b5 netstat -ant | awk '/^tcp/ {++S[$NF]} END {for(a in S) print (a,S[a])}' \u67e5\u770b CPU \u6838\u6570\u548c\u578b\u53f7\u548c\u4e3b\u9891 cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c \u67e5\u770b cpu \u6838\u5fc3\u6570 cat /proc/cpuinfo | grep \"cpu cores\" | uniq \u67e5\u770b\u7269\u7406 cpu \u4e2a\u6570 cat /proc/cpuinfo | grep \"physical id\" | uniq | wc -l \u67e5\u770b\u903b\u8f91 cpu \u7684\u4e2a\u6570 cat /proc/cpuinfo | grep \"processor\" | wc -l","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"linux/commands/#max-file-descriptors","text":"","title":"max file descriptors"},{"location":"linux/commands/#etcsecuritylimitsconf","text":"\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e * soft nofile 655360 * hard nofile 655360 * soft nproc 655360 * hard nproc 655360","title":"/etc/security/limits.conf"},{"location":"linux/commands/#etcsysctlconf-root","text":"\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e vm.max_map_count = 655360 \u6267\u884c sysctl -p","title":"/etc/sysctl.conf (root)"},{"location":"linux/commands/#_1","text":"\u67e5\u770b\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5\uff1adf -h \u67e5\u770b\u78c1\u76d8\u6302\u8f7d\uff1afdisk -l \u683c\u5f0f\u5316\u78c1\u76d8\uff1amkfs.xfs -f /dev/vdb \u521b\u5efa\u6302\u8f7d\u8def\u5f84\uff1amkdir /data \u6302\u8f7d\uff1amount -t xfs /dev/vdb /data \u56fa\u5b9a\u914d\u7f6e\uff1a vim /etc/fstab /dev/vdb /data xfs defaults 0 0","title":"\u78c1\u76d8\u6302\u8f7d"},{"location":"linux/commands/#_2","text":"\u67e5\u770b\u7269\u7406 CPU cat /proc/cpuinfo | grep \"physical\" | sort | uniq -c \u67e5\u770b\u670d\u52a1\u5668\u578b\u53f7 dmidecode | grep \u201cProduct Name\u201d \u67e5\u770b\u7cfb\u7edf\u7248\u672c cat /etc/redhat-release \u67e5\u770b\u5206\u533a\u548c\u78c1\u76d8 lsblk \u67e5\u770b\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u60c5\u51b5 df -h \u5206\u533a\u5de5\u5177\u67e5\u770b\u5206\u533a\u4fe1\u606f fdisk -l \u67e5\u770b\u5206\u533a cfdisk /dev/sda \u67e5\u770b\u786c\u76d8 label\uff08\u522b\u540d\uff09 blkid \u7edf\u8ba1\u5f53\u524d\u76ee\u5f55\u5404\u6587\u4ef6\u5939\u5927\u5c0f du -sh ./* \u67e5\u770b\u5185\u5b58\u5927\u5c0f free -h \u67e5\u770b\u5f53\u524d\u7f51\u7edc\u8fde\u63a5\u60c5\u51b5 netstat -ant | awk '/^tcp/ {++S[$NF]} END {for(a in S) print (a,S[a])}' \u67e5\u770b CPU \u6838\u6570\u548c\u578b\u53f7\u548c\u4e3b\u9891 cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c \u67e5\u770b cpu \u6838\u5fc3\u6570 cat /proc/cpuinfo | grep \"cpu cores\" | uniq \u67e5\u770b\u7269\u7406 cpu \u4e2a\u6570 cat /proc/cpuinfo | grep \"physical id\" | uniq | wc -l \u67e5\u770b\u903b\u8f91 cpu \u7684\u4e2a\u6570 cat /proc/cpuinfo | grep \"processor\" | wc -l","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"linux/cpu/","tags":["Linux"],"text":"CPU \u5206\u6790 \u5e73\u5747\u8d1f\u8f7d \u6267\u884c top \u6216\u8005 uptime \u547d\u4ee4\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u4fe1\u606f 21 :40 up 44 days, 49 mins, 3 users, load averages: 2 .45 3 .11 3 .40 \u4fe1\u606f\u542b\u4e49 \u5f53\u524d\u65f6\u95f4 \u7cfb\u7edf\u8fd0\u884c\u65f6\u95f4 \u6b63\u5728\u767b\u5f55\u7528\u6237\u6570 \u8fc7\u53bb 1 \u5206\u949f\u30015 \u5206\u949f\u300115 \u5206\u949f\u7684\u5e73\u5747\u8d1f\u8f7d\uff08Load Average\uff09 \u7b80\u5355\u6765\u8bf4\uff0c\u5e73\u5747\u8d1f\u8f7d\u662f\u6307\u5355\u4f4d\u65f6\u95f4\u5185\uff0c\u7cfb\u7edf\u5904\u4e8e\u53ef\u8fd0\u884c\u72b6\u6001\u548c\u4e0d\u53ef\u4e2d\u65ad\u72b6\u6001\u7684\u5e73\u5747\u8fdb\u7a0b\u6570\uff0c\u4e5f\u5c31\u662f\u5e73\u5747\u6d3b\u8dc3\u8fdb\u7a0b\u6570 \u53ef\u8fd0\u884c\u72b6\u6001\u7684\u8fdb\u7a0b\uff0c\u662f\u6307\u6b63\u5728\u4f7f\u7528 CPU \u6216\u8005\u6b63\u5728\u7b49\u5f85 CPU \u7684\u8fdb\u7a0b\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u7528 ps \u547d\u4ee4\u770b\u5230\u7684\uff0c\u5904\u4e8e R \u72b6\u6001\uff08Running \u6216 Runnable\uff09\u7684\u8fdb\u7a0b \u4e0d\u53ef\u4e2d\u65ad\u72b6\u6001\u7684\u8fdb\u7a0b\u5219\u662f\u6b63\u5904\u4e8e\u5185\u6838\u6001\u5173\u952e\u6d41\u7a0b\u4e2d\u7684\u8fdb\u7a0b\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6d41\u7a0b\u662f\u4e0d\u53ef\u6253\u65ad\u7684\uff0c\u6bd4\u5982\u6700\u5e38\u89c1\u7684\u662f\u7b49\u5f85\u786c\u4ef6\u8bbe\u5907\u7684 I/O \u54cd\u5e94\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5728 ps \u547d\u4ee4\u4e2d\u770b\u5230\u7684 D \u72b6\u6001\uff08Uninterruptible Sleep\uff0c\u4e5f\u79f0\u4e3a Disk Sleep\uff09\u7684\u8fdb\u7a0b \u4f46\u5b83\u5b9e\u9645\u4e0a\u662f\u6d3b\u8dc3\u8fdb\u7a0b\u6570\u7684\u6307\u6570\u8870\u51cf\u5e73\u5747\u503c \u6ce8\u610f \u5e73\u5747\u8d1f\u8f7d\u9ad8\u6709\u53ef\u80fd\u662f CPU \u5bc6\u96c6\u578b\u8fdb\u7a0b\u5bfc\u81f4\u7684 \u5e73\u5747\u8d1f\u8f7d\u9ad8\u5e76\u4e0d\u4e00\u5b9a\u4ee3\u8868 CPU \u4f7f\u7528\u7387\u9ad8\uff0c\u8fd8\u6709\u53ef\u80fd\u662f I/O \u66f4\u7e41\u5fd9\u4e86 \u5f53\u53d1\u73b0\u8d1f\u8f7d\u9ad8\u7684\u65f6\u5019\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 mpstat\u3001pidstat \u7b49\u5de5\u5177\uff0c\u8f85\u52a9\u5206\u6790\u8d1f\u8f7d\u7684\u6765\u6e90 \u4e0a\u4e0b\u6587\u5207\u6362 \u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362 \u7cfb\u7edf\u8c03\u7528\uff0c\u5b8c\u6210\u4ece\u7528\u6237\u6001\u5230\u5185\u6838\u6001\u7684\u8f6c\u53d8 CPU \u5bc4\u5b58\u5668\u91cc\u539f\u6765\u7528\u6237\u6001\u7684\u6307\u4ee4\u4f4d\u7f6e\uff0c\u9700\u8981\u5148\u4fdd\u5b58\u8d77\u6765\u3002\u63a5\u7740\uff0c\u4e3a\u4e86\u6267\u884c\u5185\u6838\u6001\u4ee3\u7801 CPU \u5bc4\u5b58\u5668\u9700\u8981\u66f4\u65b0\u4e3a\u5185\u6838\u6001\u6307\u4ee4\u7684\u65b0\u4f4d\u7f6e\u3002\u6700\u540e\u624d\u662f\u8df3\u8f6c\u5230\u5185\u6838\u6001\u8fd0\u884c\u5185\u6838\u4efb\u52a1 \u800c\u7cfb\u7edf\u8c03\u7528\u7ed3\u675f\u540e\uff0cCPU \u5bc4\u5b58\u5668\u9700\u8981\u6062\u590d\u539f\u6765\u4fdd\u5b58\u7684\u7528\u6237\u6001\uff0c\u7136\u540e\u518d\u5207\u6362\u5230\u7528\u6237\u7a7a\u95f4\uff0c\u7ee7\u7eed\u8fd0\u884c\u8fdb\u7a0b\u3002\u6240\u4ee5\uff0c\u4e00\u6b21\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\uff0c\u5176\u5b9e\u662f\u53d1\u751f\u4e86\u4e24\u6b21 CPU \u4e0a\u4e0b\u6587\u5207\u6362 \u8fdb\u7a0b\u95f4\u5207\u6362 \u4ece\u4e00\u4e2a\u8fdb\u7a0b\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u8fd0\u884c \u5728\u4fdd\u5b58\u5f53\u524d\u8fdb\u7a0b\u7684\u5185\u6838\u72b6\u6001\u548c CPU \u5bc4\u5b58\u5668\u4e4b\u524d\uff0c\u9700\u8981\u5148\u628a\u8be5\u8fdb\u7a0b\u7684\u865a\u62df\u5185\u5b58\u3001\u6808\u7b49\u4fdd\u5b58\u4e0b\u6765\uff1b\u800c\u52a0\u8f7d\u4e86\u4e0b\u4e00\u8fdb\u7a0b\u7684\u5185\u6838\u6001\u540e\uff0c\u8fd8\u9700\u8981\u5237\u65b0\u8fdb\u7a0b\u7684\u865a\u62df\u5185\u5b58\u548c\u7528\u6237\u6808 \u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u4e0d\u4ec5\u5305\u62ec\u4e86\u865a\u62df\u5185\u5b58\u3001\u6808\u3001\u5168\u5c40\u53d8\u91cf\u7b49\u7528\u6237\u7a7a\u95f4\u7684\u8d44\u6e90\uff0c\u8fd8\u5305\u62ec\u4e86\u5185\u6838\u5806\u6808\u3001\u5bc4\u5b58\u5668\u7b49\u5185\u6838\u7a7a\u95f4\u7684\u72b6\u6001 \u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362 \u524d\u540e\u4e24\u4e2a\u7ebf\u7a0b\u5c5e\u4e8e\u4e0d\u540c\u8fdb\u7a0b \u56e0\u4e3a\u8d44\u6e90\u4e0d\u5171\u4eab\uff0c\u6240\u4ee5\u5207\u6362\u8fc7\u7a0b\u5c31\u8ddf\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u662f\u4e00\u6837 \u524d\u540e\u4e24\u4e2a\u7ebf\u7a0b\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fdb\u7a0b \u56e0\u4e3a\u865a\u62df\u5185\u5b58\u662f\u5171\u4eab\u7684\uff0c\u6240\u4ee5\u5728\u5207\u6362\u65f6\uff0c\u865a\u62df\u5185\u5b58\u8fd9\u4e9b\u8d44\u6e90\u5c31\u4fdd\u6301\u4e0d\u52a8\uff0c\u53ea\u9700\u8981\u5207\u6362\u7ebf\u7a0b\u7684\u79c1\u6709\u6570\u636e\u3001\u5bc4\u5b58\u5668\u7b49\u4e0d\u5171\u4eab\u7684\u6570\u636e \u4e2d\u65ad\u4e0a\u4e0b\u6587\u5207\u6362 \u4e2d\u65ad\u4e0a\u4e0b\u6587\u5207\u6362\u5e76\u4e0d\u6d89\u53ca\u5230\u8fdb\u7a0b\u7684\u7528\u6237\u6001 \u5373\u4fbf\u4e2d\u65ad\u8fc7\u7a0b\u6253\u65ad\u4e86\u4e00\u4e2a\u6b63\u5904\u5728\u7528\u6237\u6001\u7684\u8fdb\u7a0b\uff0c\u4e5f\u4e0d\u9700\u8981\u4fdd\u5b58\u548c\u6062\u590d\u8fd9\u4e2a\u8fdb\u7a0b\u7684\u865a\u62df\u5185\u5b58\u3001\u5168\u5c40\u53d8\u91cf\u7b49\u7528\u6237\u6001\u8d44\u6e90\u3002\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0c\u5176\u5b9e\u53ea\u5305\u62ec\u5185\u6838\u6001\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u6267\u884c\u6240\u5fc5\u9700\u7684\u72b6\u6001\uff0c\u5305\u62ec CPU \u5bc4\u5b58\u5668\u3001\u5185\u6838\u5806\u6808\u3001\u786c\u4ef6\u4e2d\u65ad\u53c2\u6570\u7b49 \u4e0a\u534a\u90e8 \u7528\u6765\u5feb\u901f\u5904\u7406\u4e2d\u65ad,\u4e3b\u8981\u5904\u7406\u8ddf\u786c\u4ef6\u7d27\u5bc6\u76f8\u5173\u7684\u6216\u65f6\u95f4\u654f\u611f\u7684\u5de5\u4f5c \u4e0b\u534a\u90e8 \u5ef6\u8fdf\u5904\u7406\u4e0a\u534a\u90e8\u672a\u5b8c\u6210\u7684\u5de5\u4f5c\uff0c\u901a\u5e38\u4ee5\u5185\u6838\u7ebf\u7a0b\u7684\u65b9\u5f0f\u8fd0\u884c\uff1b\u901a\u8fc7\u8f6f\u4e2d\u65ad\u4fe1\u53f7\u901a\u77e5 \u67e5\u770b\u7cfb\u7edf\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u60c5\u51b5 \u901a\u8fc7 vmstat \u67e5\u770b\u7cfb\u7edf\u603b\u4f53\u7684\u4e0a\u4e0b\u6587\u5207\u6362 \u901a\u8fc7 pidstat \u67e5\u770b\u8fdb\u7a0b\u5207\u6362\u8be6\u60c5 cswch\uff1a\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u662f\u6307\u8fdb\u7a0b\u65e0\u6cd5\u83b7\u53d6\u6240\u9700\u8d44\u6e90\uff0c\u5bfc\u81f4\u7684\u4e0a\u4e0b\u6587\u5207\u6362 nvcswch\uff1a\u975e\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5219\u662f\u6307\u8fdb\u7a0b\u7531\u4e8e\u65f6\u95f4\u7247\u5df2\u5230\u7b49\u539f\u56e0\uff0c\u88ab\u7cfb\u7edf\u5f3a\u5236\u8c03\u5ea6\uff0c\u8fdb\u800c\u53d1\u751f\u7684\u4e0a\u4e0b\u6587\u5207\u6362 \u95ee\u9898\u5206\u6790 \u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\u53d8\u591a\u4e86\uff0c\u8bf4\u660e\u8fdb\u7a0b\u90fd\u5728\u7b49\u5f85\u8d44\u6e90\uff0c\u6709\u53ef\u80fd\u53d1\u751f\u4e86 I/O \u7b49\u5176\u4ed6\u95ee\u9898 \u975e\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\u53d8\u591a\u4e86\uff0c\u8bf4\u660e\u8fdb\u7a0b\u90fd\u5728\u88ab\u5f3a\u5236\u8c03\u5ea6\uff0c\u4e5f\u5c31\u662f\u90fd\u5728\u4e89\u62a2 CPU\uff0c\u8bf4\u660e CPU \u7684\u786e\u6210\u4e86\u74f6\u9888 \u4e2d\u65ad\u6b21\u6570\u53d8\u591a\u4e86\uff0c\u8bf4\u660e CPU \u88ab\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5360\u7528\uff0c\u8fd8\u9700\u8981\u901a\u8fc7\u67e5\u770b /proc/interrupts \u6587\u4ef6\u6765\u5206\u6790\u5177\u4f53\u7684\u4e2d\u65ad\u7c7b\u578b \u8fdb\u7a0b\u8c03\u5ea6\u65f6\u673a \u4e3a\u4e86\u4fdd\u8bc1\u6240\u6709\u8fdb\u7a0b\u53ef\u4ee5\u5f97\u5230\u516c\u5e73\u8c03\u5ea6\uff0cCPU \u65f6\u95f4\u88ab\u5212\u5206\u4e3a\u4e00\u6bb5\u6bb5\u7684\u65f6\u95f4\u7247\uff0c\u8fd9\u4e9b\u65f6\u95f4\u7247\u518d\u88ab\u8f6e\u6d41\u5206\u914d\u7ed9\u5404\u4e2a\u8fdb\u7a0b\u3002\u8fd9\u6837\uff0c\u5f53\u67d0\u4e2a\u8fdb\u7a0b\u7684\u65f6\u95f4\u7247\u8017\u5c3d\u4e86\uff0c\u5c31\u4f1a\u88ab\u7cfb\u7edf\u6302\u8d77\uff0c\u5207\u6362\u5230\u5176\u5b83\u6b63\u5728\u7b49\u5f85 CPU \u7684\u8fdb\u7a0b\u8fd0\u884c \u8fdb\u7a0b\u5728\u7cfb\u7edf\u8d44\u6e90\u4e0d\u8db3\uff08\u6bd4\u5982\u5185\u5b58\u4e0d\u8db3\uff09\u65f6\uff0c\u8981\u7b49\u5230\u8d44\u6e90\u6ee1\u8db3\u540e\u624d\u53ef\u4ee5\u8fd0\u884c\uff0c\u8fd9\u4e2a\u65f6\u5019\u8fdb\u7a0b\u4e5f\u4f1a\u88ab\u6302\u8d77\uff0c\u5e76\u7531\u7cfb\u7edf\u8c03\u5ea6\u5176\u4ed6\u8fdb\u7a0b\u8fd0\u884c \u5f53\u8fdb\u7a0b\u901a\u8fc7\u7761\u7720\u51fd\u6570 sleep \u8fd9\u6837\u7684\u65b9\u6cd5\u5c06\u81ea\u5df1\u4e3b\u52a8\u6302\u8d77\u65f6\uff0c\u81ea\u7136\u4e5f\u4f1a\u91cd\u65b0\u8c03\u5ea6 \u5f53\u6709\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u8fdb\u7a0b\u8fd0\u884c\u65f6\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u9ad8\u4f18\u5148\u7ea7\u8fdb\u7a0b\u7684\u8fd0\u884c\uff0c\u5f53\u524d\u8fdb\u7a0b\u4f1a\u88ab\u6302\u8d77\uff0c\u7531\u9ad8\u4f18\u5148\u7ea7\u8fdb\u7a0b\u6765\u8fd0\u884c \u53d1\u751f\u786c\u4ef6\u4e2d\u65ad\u65f6\uff0cCPU \u4e0a\u7684\u8fdb\u7a0b\u4f1a\u88ab\u4e2d\u65ad\u6302\u8d77\uff0c\u8f6c\u800c\u6267\u884c\u5185\u6838\u4e2d\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f CPU \u4f7f\u7528\u7387 CPU \u4f7f\u7528\u7387 = 1 - \u7a7a\u95f2\u65f6\u95f4 / \u603b CPU \u65f6\u95f4 \u5e73\u5747 CPU \u4f7f\u7528\u7387 = (\u7a7a\u95f2\u65f6\u95f4 2 - \u7a7a\u95f2\u65f6\u95f4 1) / (\u603b CPU \u65f6\u95f4 2 - \u603b CPU \u65f6\u95f4 1) \u6027\u80fd\u5de5\u5177\u4e00\u822c\u90fd\u4f1a\u53d6\u95f4\u9694\u4e00\u6bb5\u65f6\u95f4\uff08\u6bd4\u5982 3 \u79d2\uff09\u7684\u4e24\u6b21\u503c \u5e38\u7528\u7684\u6027\u80fd\u5206\u6790\u5de5\u5177 top/htop \u663e\u793a\u4e86\u7cfb\u7edf\u603b\u4f53\u7684 CPU \u548c\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u4ee5\u53ca\u5404\u4e2a\u8fdb\u7a0b\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5 ps \u663e\u793a\u4e86\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5 \u5de5\u5177 stress Linux \u7cfb\u7edf\u538b\u529b\u6d4b\u8bd5\u5de5\u5177 stress --cpu 1 --timeout 600 stress -i 1 --timeout 600 stress -c 8 --timeout 600 sysbench \u591a\u7ebf\u7a0b\u7684\u57fa\u51c6\u6d4b\u8bd5\u5de5\u5177 sysbench --threads=10 --max-time=300 threads run sysstat \u5305\u542b\u4e86\u5e38\u7528\u7684 Linux \u6027\u80fd\u5de5\u5177 mpstat \u662f\u4e00\u4e2a\u5e38\u7528\u7684\u591a\u6838 CPU \u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u7528\u6765\u5b9e\u65f6\u67e5\u770b\u6bcf\u4e2a CPU \u7684\u6027\u80fd\u6307\u6807\uff0c\u4ee5\u53ca\u6240\u6709 CPU \u7684\u5e73\u5747\u6307\u6807 mpstat -P ALL 5 20 pidstat \u662f\u4e00\u4e2a\u5e38\u7528\u7684\u8fdb\u7a0b\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u7528\u6765\u5b9e\u65f6\u67e5\u770b\u8fdb\u7a0b\u7684 CPU\u3001\u5185\u5b58\u3001I/O \u4ee5\u53ca\u4e0a\u4e0b\u6587\u5207\u6362\u7b49\u6027\u80fd\u6307\u6807 pidstat -u 5 1 pidstat -w 5 pidstat -wt 1 vmstat \u4e00\u4e2a\u5e38\u7528\u7684\u7cfb\u7edf\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u4e3b\u8981\u7528\u6765\u5206\u6790\u7cfb\u7edf\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u4e5f\u5e38\u7528\u6765\u5206\u6790 CPU \u4e0a\u4e0b\u6587\u5207\u6362\u548c\u4e2d\u65ad\u7684\u6b21\u6570 \u547d\u4ee4\uff1avmstat 5 \u4fe1\u606f\u89e3\u8bfb cs\uff08context switch\uff09\u662f\u6bcf\u79d2\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u6b21\u6570 in\uff08interrupt\uff09\u5219\u662f\u6bcf\u79d2\u4e2d\u65ad\u7684\u6b21\u6570 r\uff08Running or Runnable\uff09\u662f\u5c31\u7eea\u961f\u5217\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u6b63\u5728\u8fd0\u884c\u548c\u7b49\u5f85 CPU \u7684\u8fdb\u7a0b\u6570 b\uff08Blocked\uff09\u5219\u662f\u5904\u4e8e\u4e0d\u53ef\u4e2d\u65ad\u7761\u7720\u72b6\u6001\u7684\u8fdb\u7a0b\u6570 perf \u4ee5\u6027\u80fd\u4e8b\u4ef6\u91c7\u6837\u4e3a\u57fa\u7840\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u5206\u6790\u7cfb\u7edf\u7684\u5404\u79cd\u4e8b\u4ef6\u548c\u5185\u6838\u6027\u80fd\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u5206\u6790\u6307\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\u95ee\u9898 \u547d\u4ee4 perf top perf record/report ab apache bench, \u5e38\u7528\u7684 HTTP \u670d\u52a1\u6027\u80fd\u6d4b\u8bd5\u5de5\u5177 ab -c 10 -n 100 your_url:port \u5e76\u53d1 10 \u4e2a\u8bf7\u6c42\u6d4b\u8bd5 Nginx \u6027\u80fd\uff0c\u603b\u5171\u6d4b\u8bd5 100 \u4e2a\u8bf7\u6c42 dstat \u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\u5206\u6790\uff0c\u5982\u78c1\u76d8 strace \u8ddf\u8e2a\u8fdb\u7a0b\u7cfb\u7edf\u8c03\u7528","title":"Cpu\u5206\u6790"},{"location":"linux/cpu/#cpu","text":"","title":"CPU \u5206\u6790"},{"location":"linux/cpu/#_1","text":"\u6267\u884c top \u6216\u8005 uptime \u547d\u4ee4\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u4fe1\u606f 21 :40 up 44 days, 49 mins, 3 users, load averages: 2 .45 3 .11 3 .40 \u4fe1\u606f\u542b\u4e49 \u5f53\u524d\u65f6\u95f4 \u7cfb\u7edf\u8fd0\u884c\u65f6\u95f4 \u6b63\u5728\u767b\u5f55\u7528\u6237\u6570 \u8fc7\u53bb 1 \u5206\u949f\u30015 \u5206\u949f\u300115 \u5206\u949f\u7684\u5e73\u5747\u8d1f\u8f7d\uff08Load Average\uff09 \u7b80\u5355\u6765\u8bf4\uff0c\u5e73\u5747\u8d1f\u8f7d\u662f\u6307\u5355\u4f4d\u65f6\u95f4\u5185\uff0c\u7cfb\u7edf\u5904\u4e8e\u53ef\u8fd0\u884c\u72b6\u6001\u548c\u4e0d\u53ef\u4e2d\u65ad\u72b6\u6001\u7684\u5e73\u5747\u8fdb\u7a0b\u6570\uff0c\u4e5f\u5c31\u662f\u5e73\u5747\u6d3b\u8dc3\u8fdb\u7a0b\u6570 \u53ef\u8fd0\u884c\u72b6\u6001\u7684\u8fdb\u7a0b\uff0c\u662f\u6307\u6b63\u5728\u4f7f\u7528 CPU \u6216\u8005\u6b63\u5728\u7b49\u5f85 CPU \u7684\u8fdb\u7a0b\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u7528 ps \u547d\u4ee4\u770b\u5230\u7684\uff0c\u5904\u4e8e R \u72b6\u6001\uff08Running \u6216 Runnable\uff09\u7684\u8fdb\u7a0b \u4e0d\u53ef\u4e2d\u65ad\u72b6\u6001\u7684\u8fdb\u7a0b\u5219\u662f\u6b63\u5904\u4e8e\u5185\u6838\u6001\u5173\u952e\u6d41\u7a0b\u4e2d\u7684\u8fdb\u7a0b\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6d41\u7a0b\u662f\u4e0d\u53ef\u6253\u65ad\u7684\uff0c\u6bd4\u5982\u6700\u5e38\u89c1\u7684\u662f\u7b49\u5f85\u786c\u4ef6\u8bbe\u5907\u7684 I/O \u54cd\u5e94\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5728 ps \u547d\u4ee4\u4e2d\u770b\u5230\u7684 D \u72b6\u6001\uff08Uninterruptible Sleep\uff0c\u4e5f\u79f0\u4e3a Disk Sleep\uff09\u7684\u8fdb\u7a0b \u4f46\u5b83\u5b9e\u9645\u4e0a\u662f\u6d3b\u8dc3\u8fdb\u7a0b\u6570\u7684\u6307\u6570\u8870\u51cf\u5e73\u5747\u503c \u6ce8\u610f \u5e73\u5747\u8d1f\u8f7d\u9ad8\u6709\u53ef\u80fd\u662f CPU \u5bc6\u96c6\u578b\u8fdb\u7a0b\u5bfc\u81f4\u7684 \u5e73\u5747\u8d1f\u8f7d\u9ad8\u5e76\u4e0d\u4e00\u5b9a\u4ee3\u8868 CPU \u4f7f\u7528\u7387\u9ad8\uff0c\u8fd8\u6709\u53ef\u80fd\u662f I/O \u66f4\u7e41\u5fd9\u4e86 \u5f53\u53d1\u73b0\u8d1f\u8f7d\u9ad8\u7684\u65f6\u5019\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 mpstat\u3001pidstat \u7b49\u5de5\u5177\uff0c\u8f85\u52a9\u5206\u6790\u8d1f\u8f7d\u7684\u6765\u6e90","title":"\u5e73\u5747\u8d1f\u8f7d"},{"location":"linux/cpu/#_2","text":"\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362 \u7cfb\u7edf\u8c03\u7528\uff0c\u5b8c\u6210\u4ece\u7528\u6237\u6001\u5230\u5185\u6838\u6001\u7684\u8f6c\u53d8 CPU \u5bc4\u5b58\u5668\u91cc\u539f\u6765\u7528\u6237\u6001\u7684\u6307\u4ee4\u4f4d\u7f6e\uff0c\u9700\u8981\u5148\u4fdd\u5b58\u8d77\u6765\u3002\u63a5\u7740\uff0c\u4e3a\u4e86\u6267\u884c\u5185\u6838\u6001\u4ee3\u7801 CPU \u5bc4\u5b58\u5668\u9700\u8981\u66f4\u65b0\u4e3a\u5185\u6838\u6001\u6307\u4ee4\u7684\u65b0\u4f4d\u7f6e\u3002\u6700\u540e\u624d\u662f\u8df3\u8f6c\u5230\u5185\u6838\u6001\u8fd0\u884c\u5185\u6838\u4efb\u52a1 \u800c\u7cfb\u7edf\u8c03\u7528\u7ed3\u675f\u540e\uff0cCPU \u5bc4\u5b58\u5668\u9700\u8981\u6062\u590d\u539f\u6765\u4fdd\u5b58\u7684\u7528\u6237\u6001\uff0c\u7136\u540e\u518d\u5207\u6362\u5230\u7528\u6237\u7a7a\u95f4\uff0c\u7ee7\u7eed\u8fd0\u884c\u8fdb\u7a0b\u3002\u6240\u4ee5\uff0c\u4e00\u6b21\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\uff0c\u5176\u5b9e\u662f\u53d1\u751f\u4e86\u4e24\u6b21 CPU \u4e0a\u4e0b\u6587\u5207\u6362 \u8fdb\u7a0b\u95f4\u5207\u6362 \u4ece\u4e00\u4e2a\u8fdb\u7a0b\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u8fd0\u884c \u5728\u4fdd\u5b58\u5f53\u524d\u8fdb\u7a0b\u7684\u5185\u6838\u72b6\u6001\u548c CPU \u5bc4\u5b58\u5668\u4e4b\u524d\uff0c\u9700\u8981\u5148\u628a\u8be5\u8fdb\u7a0b\u7684\u865a\u62df\u5185\u5b58\u3001\u6808\u7b49\u4fdd\u5b58\u4e0b\u6765\uff1b\u800c\u52a0\u8f7d\u4e86\u4e0b\u4e00\u8fdb\u7a0b\u7684\u5185\u6838\u6001\u540e\uff0c\u8fd8\u9700\u8981\u5237\u65b0\u8fdb\u7a0b\u7684\u865a\u62df\u5185\u5b58\u548c\u7528\u6237\u6808 \u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u4e0d\u4ec5\u5305\u62ec\u4e86\u865a\u62df\u5185\u5b58\u3001\u6808\u3001\u5168\u5c40\u53d8\u91cf\u7b49\u7528\u6237\u7a7a\u95f4\u7684\u8d44\u6e90\uff0c\u8fd8\u5305\u62ec\u4e86\u5185\u6838\u5806\u6808\u3001\u5bc4\u5b58\u5668\u7b49\u5185\u6838\u7a7a\u95f4\u7684\u72b6\u6001 \u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362 \u524d\u540e\u4e24\u4e2a\u7ebf\u7a0b\u5c5e\u4e8e\u4e0d\u540c\u8fdb\u7a0b \u56e0\u4e3a\u8d44\u6e90\u4e0d\u5171\u4eab\uff0c\u6240\u4ee5\u5207\u6362\u8fc7\u7a0b\u5c31\u8ddf\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u662f\u4e00\u6837 \u524d\u540e\u4e24\u4e2a\u7ebf\u7a0b\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fdb\u7a0b \u56e0\u4e3a\u865a\u62df\u5185\u5b58\u662f\u5171\u4eab\u7684\uff0c\u6240\u4ee5\u5728\u5207\u6362\u65f6\uff0c\u865a\u62df\u5185\u5b58\u8fd9\u4e9b\u8d44\u6e90\u5c31\u4fdd\u6301\u4e0d\u52a8\uff0c\u53ea\u9700\u8981\u5207\u6362\u7ebf\u7a0b\u7684\u79c1\u6709\u6570\u636e\u3001\u5bc4\u5b58\u5668\u7b49\u4e0d\u5171\u4eab\u7684\u6570\u636e \u4e2d\u65ad\u4e0a\u4e0b\u6587\u5207\u6362 \u4e2d\u65ad\u4e0a\u4e0b\u6587\u5207\u6362\u5e76\u4e0d\u6d89\u53ca\u5230\u8fdb\u7a0b\u7684\u7528\u6237\u6001 \u5373\u4fbf\u4e2d\u65ad\u8fc7\u7a0b\u6253\u65ad\u4e86\u4e00\u4e2a\u6b63\u5904\u5728\u7528\u6237\u6001\u7684\u8fdb\u7a0b\uff0c\u4e5f\u4e0d\u9700\u8981\u4fdd\u5b58\u548c\u6062\u590d\u8fd9\u4e2a\u8fdb\u7a0b\u7684\u865a\u62df\u5185\u5b58\u3001\u5168\u5c40\u53d8\u91cf\u7b49\u7528\u6237\u6001\u8d44\u6e90\u3002\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0c\u5176\u5b9e\u53ea\u5305\u62ec\u5185\u6838\u6001\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u6267\u884c\u6240\u5fc5\u9700\u7684\u72b6\u6001\uff0c\u5305\u62ec CPU \u5bc4\u5b58\u5668\u3001\u5185\u6838\u5806\u6808\u3001\u786c\u4ef6\u4e2d\u65ad\u53c2\u6570\u7b49 \u4e0a\u534a\u90e8 \u7528\u6765\u5feb\u901f\u5904\u7406\u4e2d\u65ad,\u4e3b\u8981\u5904\u7406\u8ddf\u786c\u4ef6\u7d27\u5bc6\u76f8\u5173\u7684\u6216\u65f6\u95f4\u654f\u611f\u7684\u5de5\u4f5c \u4e0b\u534a\u90e8 \u5ef6\u8fdf\u5904\u7406\u4e0a\u534a\u90e8\u672a\u5b8c\u6210\u7684\u5de5\u4f5c\uff0c\u901a\u5e38\u4ee5\u5185\u6838\u7ebf\u7a0b\u7684\u65b9\u5f0f\u8fd0\u884c\uff1b\u901a\u8fc7\u8f6f\u4e2d\u65ad\u4fe1\u53f7\u901a\u77e5 \u67e5\u770b\u7cfb\u7edf\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u60c5\u51b5 \u901a\u8fc7 vmstat \u67e5\u770b\u7cfb\u7edf\u603b\u4f53\u7684\u4e0a\u4e0b\u6587\u5207\u6362 \u901a\u8fc7 pidstat \u67e5\u770b\u8fdb\u7a0b\u5207\u6362\u8be6\u60c5 cswch\uff1a\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u662f\u6307\u8fdb\u7a0b\u65e0\u6cd5\u83b7\u53d6\u6240\u9700\u8d44\u6e90\uff0c\u5bfc\u81f4\u7684\u4e0a\u4e0b\u6587\u5207\u6362 nvcswch\uff1a\u975e\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5219\u662f\u6307\u8fdb\u7a0b\u7531\u4e8e\u65f6\u95f4\u7247\u5df2\u5230\u7b49\u539f\u56e0\uff0c\u88ab\u7cfb\u7edf\u5f3a\u5236\u8c03\u5ea6\uff0c\u8fdb\u800c\u53d1\u751f\u7684\u4e0a\u4e0b\u6587\u5207\u6362 \u95ee\u9898\u5206\u6790 \u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\u53d8\u591a\u4e86\uff0c\u8bf4\u660e\u8fdb\u7a0b\u90fd\u5728\u7b49\u5f85\u8d44\u6e90\uff0c\u6709\u53ef\u80fd\u53d1\u751f\u4e86 I/O \u7b49\u5176\u4ed6\u95ee\u9898 \u975e\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\u53d8\u591a\u4e86\uff0c\u8bf4\u660e\u8fdb\u7a0b\u90fd\u5728\u88ab\u5f3a\u5236\u8c03\u5ea6\uff0c\u4e5f\u5c31\u662f\u90fd\u5728\u4e89\u62a2 CPU\uff0c\u8bf4\u660e CPU \u7684\u786e\u6210\u4e86\u74f6\u9888 \u4e2d\u65ad\u6b21\u6570\u53d8\u591a\u4e86\uff0c\u8bf4\u660e CPU \u88ab\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5360\u7528\uff0c\u8fd8\u9700\u8981\u901a\u8fc7\u67e5\u770b /proc/interrupts \u6587\u4ef6\u6765\u5206\u6790\u5177\u4f53\u7684\u4e2d\u65ad\u7c7b\u578b","title":"\u4e0a\u4e0b\u6587\u5207\u6362"},{"location":"linux/cpu/#_3","text":"\u4e3a\u4e86\u4fdd\u8bc1\u6240\u6709\u8fdb\u7a0b\u53ef\u4ee5\u5f97\u5230\u516c\u5e73\u8c03\u5ea6\uff0cCPU \u65f6\u95f4\u88ab\u5212\u5206\u4e3a\u4e00\u6bb5\u6bb5\u7684\u65f6\u95f4\u7247\uff0c\u8fd9\u4e9b\u65f6\u95f4\u7247\u518d\u88ab\u8f6e\u6d41\u5206\u914d\u7ed9\u5404\u4e2a\u8fdb\u7a0b\u3002\u8fd9\u6837\uff0c\u5f53\u67d0\u4e2a\u8fdb\u7a0b\u7684\u65f6\u95f4\u7247\u8017\u5c3d\u4e86\uff0c\u5c31\u4f1a\u88ab\u7cfb\u7edf\u6302\u8d77\uff0c\u5207\u6362\u5230\u5176\u5b83\u6b63\u5728\u7b49\u5f85 CPU \u7684\u8fdb\u7a0b\u8fd0\u884c \u8fdb\u7a0b\u5728\u7cfb\u7edf\u8d44\u6e90\u4e0d\u8db3\uff08\u6bd4\u5982\u5185\u5b58\u4e0d\u8db3\uff09\u65f6\uff0c\u8981\u7b49\u5230\u8d44\u6e90\u6ee1\u8db3\u540e\u624d\u53ef\u4ee5\u8fd0\u884c\uff0c\u8fd9\u4e2a\u65f6\u5019\u8fdb\u7a0b\u4e5f\u4f1a\u88ab\u6302\u8d77\uff0c\u5e76\u7531\u7cfb\u7edf\u8c03\u5ea6\u5176\u4ed6\u8fdb\u7a0b\u8fd0\u884c \u5f53\u8fdb\u7a0b\u901a\u8fc7\u7761\u7720\u51fd\u6570 sleep \u8fd9\u6837\u7684\u65b9\u6cd5\u5c06\u81ea\u5df1\u4e3b\u52a8\u6302\u8d77\u65f6\uff0c\u81ea\u7136\u4e5f\u4f1a\u91cd\u65b0\u8c03\u5ea6 \u5f53\u6709\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u8fdb\u7a0b\u8fd0\u884c\u65f6\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u9ad8\u4f18\u5148\u7ea7\u8fdb\u7a0b\u7684\u8fd0\u884c\uff0c\u5f53\u524d\u8fdb\u7a0b\u4f1a\u88ab\u6302\u8d77\uff0c\u7531\u9ad8\u4f18\u5148\u7ea7\u8fdb\u7a0b\u6765\u8fd0\u884c \u53d1\u751f\u786c\u4ef6\u4e2d\u65ad\u65f6\uff0cCPU \u4e0a\u7684\u8fdb\u7a0b\u4f1a\u88ab\u4e2d\u65ad\u6302\u8d77\uff0c\u8f6c\u800c\u6267\u884c\u5185\u6838\u4e2d\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f","title":"\u8fdb\u7a0b\u8c03\u5ea6\u65f6\u673a"},{"location":"linux/cpu/#cpu_1","text":"CPU \u4f7f\u7528\u7387 = 1 - \u7a7a\u95f2\u65f6\u95f4 / \u603b CPU \u65f6\u95f4 \u5e73\u5747 CPU \u4f7f\u7528\u7387 = (\u7a7a\u95f2\u65f6\u95f4 2 - \u7a7a\u95f2\u65f6\u95f4 1) / (\u603b CPU \u65f6\u95f4 2 - \u603b CPU \u65f6\u95f4 1) \u6027\u80fd\u5de5\u5177\u4e00\u822c\u90fd\u4f1a\u53d6\u95f4\u9694\u4e00\u6bb5\u65f6\u95f4\uff08\u6bd4\u5982 3 \u79d2\uff09\u7684\u4e24\u6b21\u503c \u5e38\u7528\u7684\u6027\u80fd\u5206\u6790\u5de5\u5177 top/htop \u663e\u793a\u4e86\u7cfb\u7edf\u603b\u4f53\u7684 CPU \u548c\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u4ee5\u53ca\u5404\u4e2a\u8fdb\u7a0b\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5 ps \u663e\u793a\u4e86\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5","title":"CPU \u4f7f\u7528\u7387"},{"location":"linux/cpu/#_4","text":"stress Linux \u7cfb\u7edf\u538b\u529b\u6d4b\u8bd5\u5de5\u5177 stress --cpu 1 --timeout 600 stress -i 1 --timeout 600 stress -c 8 --timeout 600 sysbench \u591a\u7ebf\u7a0b\u7684\u57fa\u51c6\u6d4b\u8bd5\u5de5\u5177 sysbench --threads=10 --max-time=300 threads run sysstat \u5305\u542b\u4e86\u5e38\u7528\u7684 Linux \u6027\u80fd\u5de5\u5177 mpstat \u662f\u4e00\u4e2a\u5e38\u7528\u7684\u591a\u6838 CPU \u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u7528\u6765\u5b9e\u65f6\u67e5\u770b\u6bcf\u4e2a CPU \u7684\u6027\u80fd\u6307\u6807\uff0c\u4ee5\u53ca\u6240\u6709 CPU \u7684\u5e73\u5747\u6307\u6807 mpstat -P ALL 5 20 pidstat \u662f\u4e00\u4e2a\u5e38\u7528\u7684\u8fdb\u7a0b\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u7528\u6765\u5b9e\u65f6\u67e5\u770b\u8fdb\u7a0b\u7684 CPU\u3001\u5185\u5b58\u3001I/O \u4ee5\u53ca\u4e0a\u4e0b\u6587\u5207\u6362\u7b49\u6027\u80fd\u6307\u6807 pidstat -u 5 1 pidstat -w 5 pidstat -wt 1 vmstat \u4e00\u4e2a\u5e38\u7528\u7684\u7cfb\u7edf\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u4e3b\u8981\u7528\u6765\u5206\u6790\u7cfb\u7edf\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u4e5f\u5e38\u7528\u6765\u5206\u6790 CPU \u4e0a\u4e0b\u6587\u5207\u6362\u548c\u4e2d\u65ad\u7684\u6b21\u6570 \u547d\u4ee4\uff1avmstat 5 \u4fe1\u606f\u89e3\u8bfb cs\uff08context switch\uff09\u662f\u6bcf\u79d2\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u6b21\u6570 in\uff08interrupt\uff09\u5219\u662f\u6bcf\u79d2\u4e2d\u65ad\u7684\u6b21\u6570 r\uff08Running or Runnable\uff09\u662f\u5c31\u7eea\u961f\u5217\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u6b63\u5728\u8fd0\u884c\u548c\u7b49\u5f85 CPU \u7684\u8fdb\u7a0b\u6570 b\uff08Blocked\uff09\u5219\u662f\u5904\u4e8e\u4e0d\u53ef\u4e2d\u65ad\u7761\u7720\u72b6\u6001\u7684\u8fdb\u7a0b\u6570 perf \u4ee5\u6027\u80fd\u4e8b\u4ef6\u91c7\u6837\u4e3a\u57fa\u7840\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u5206\u6790\u7cfb\u7edf\u7684\u5404\u79cd\u4e8b\u4ef6\u548c\u5185\u6838\u6027\u80fd\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u5206\u6790\u6307\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\u95ee\u9898 \u547d\u4ee4 perf top perf record/report ab apache bench, \u5e38\u7528\u7684 HTTP \u670d\u52a1\u6027\u80fd\u6d4b\u8bd5\u5de5\u5177 ab -c 10 -n 100 your_url:port \u5e76\u53d1 10 \u4e2a\u8bf7\u6c42\u6d4b\u8bd5 Nginx \u6027\u80fd\uff0c\u603b\u5171\u6d4b\u8bd5 100 \u4e2a\u8bf7\u6c42 dstat \u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\u5206\u6790\uff0c\u5982\u78c1\u76d8 strace \u8ddf\u8e2a\u8fdb\u7a0b\u7cfb\u7edf\u8c03\u7528","title":"\u5de5\u5177"},{"location":"tags/","text":"Centos Centos\u5185\u6838\u5347\u7ea7 Git Git\u64cd\u4f5c HashTable HashTable K8S \u57fa\u7840 \u8d44\u6e90\u7c7b\u578b \u7f51\u7edc\u53ca\u670d\u52a1 Kernel Centos\u5185\u6838\u5347\u7ea7 Linux Centos\u5185\u6838\u5347\u7ea7 \u5e38\u7528\u547d\u4ee4 Cpu\u5206\u6790 Redis HashTable \u7b80\u4ecb","title":"Tags"},{"location":"tags/#centos","text":"Centos\u5185\u6838\u5347\u7ea7","title":"Centos"},{"location":"tags/#git","text":"Git\u64cd\u4f5c","title":"Git"},{"location":"tags/#hashtable","text":"HashTable","title":"HashTable"},{"location":"tags/#k8s","text":"\u57fa\u7840 \u8d44\u6e90\u7c7b\u578b \u7f51\u7edc\u53ca\u670d\u52a1","title":"K8S"},{"location":"tags/#kernel","text":"Centos\u5185\u6838\u5347\u7ea7","title":"Kernel"},{"location":"tags/#linux","text":"Centos\u5185\u6838\u5347\u7ea7 \u5e38\u7528\u547d\u4ee4 Cpu\u5206\u6790","title":"Linux"},{"location":"tags/#redis","text":"HashTable \u7b80\u4ecb","title":"Redis"}]}